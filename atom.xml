<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title type="text">Sample Site Posts</title><id>https://matsubara0507.github.io/scrapbook-example/atom.xml</id><updated>May  2, 2020</updated><link href="https://matsubara0507.github.io/scrapbook-example"/><entry><id>https://haskell.e-bigmoon.com/posts/2020/01-22-get-freeze-from-stackage.html</id><title type="text">stack で管理されたプロジェクトを cabal でビルドするために</title><updated>May  2, 2020</updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2020/01-22-get-freeze-from-stackage.html"/><summary type="html">&lt;p&gt;Haskell のビルドツールといえば &lt;strong&gt;cabal&lt;/strong&gt; と &lt;strong&gt;stack&lt;/strong&gt; です。ちょっと前までは &lt;strong&gt;cabal&lt;/strong&gt; より &lt;strong&gt;stack&lt;/strong&gt; の方が流行っていたのですが、最近は開発も落ち着いているようであまり動きがありません。それよりも &lt;strong&gt;cabal&lt;/strong&gt; の &lt;strong&gt;nix-style local build&lt;/strong&gt; が非常に使いやすく、近頃では &lt;strong&gt;stack&lt;/strong&gt; から &lt;strong&gt;cabal&lt;/strong&gt; に移行しているプロジェクトも多くあります。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;stack&lt;/strong&gt; を使っていて改善したら良いなぁと思う部分としては、新しい &lt;strong&gt;GHC&lt;/strong&gt; やライブラリをすぐに使おうと思っても &lt;strong&gt;LTS&lt;/strong&gt; や &lt;strong&gt;nightly&lt;/strong&gt; に入っていないため使えなかったり、&lt;strong&gt;Backpack&lt;/strong&gt; が未だに使えなかったりするところでしょうか。&lt;/p&gt;
&lt;p&gt;ただ、ビルドの再現性という点においては &lt;strong&gt;stack&lt;/strong&gt; の方が優秀だと思っているので今は両方使っています。(&lt;strong&gt;index-state&lt;/strong&gt; と &lt;strong&gt;freeze&lt;/strong&gt; ファイルを組み合わせれば &lt;strong&gt;cabal&lt;/strong&gt; でも再現性が保証されそうな気がしますが、どうなんだろう)&lt;/p&gt;
&lt;p&gt;今回は &lt;strong&gt;stack&lt;/strong&gt; で管理されたプロジェクトを確実に &lt;strong&gt;cabal&lt;/strong&gt; でビルドするための方法についてまとめました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@fommil/why-not-both-8adadb71a5ed&#34;&gt;Why Not Both?&lt;/a&gt; に載ってた &lt;strong&gt;Stackage&lt;/strong&gt; の使い方の紹介でもあります。&lt;/li&gt;
&lt;/ul&gt;
&lt;!--more--&gt;
&lt;h2 id=&#34;モチベーション&#34;&gt;モチベーション&lt;/h2&gt;
&lt;p&gt;ここでは &lt;strong&gt;stack&lt;/strong&gt; で管理されていて、&lt;strong&gt;cabal&lt;/strong&gt; ファイルにバージョン制約が明記されていないという、良くあるシチュエーションを考えます。&lt;/p&gt;
&lt;p&gt;どんなプロジェクトでも良いのですが、具体的には &lt;a href=&#34;https://github.com/arcticmatt/dino-brick&#34;&gt;arcticmatt/dino-brick&lt;/a&gt; のようなプロジェクトです。&lt;code&gt;stack.yaml&lt;/code&gt; は以下のようになっています。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode yaml&#34;&gt;&lt;code class=&#34;sourceCode yaml&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;resolver&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; lts-8.23&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;packages&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; &lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/arcticmatt/dino-brick/blob/dino/dino.cabal#L16&#34;&gt;dino.cabal の build-depends&lt;/a&gt; には、ほとんどバージョンが明記されていません。(&lt;strong&gt;stack&lt;/strong&gt; の場合はスナップショットが決まると自動的にパッケージのバージョンが決まるため、明示する必要はあまり無いのです)&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode yaml&#34;&gt;&lt;code class=&#34;sourceCode yaml&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;build-depends&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;      base &amp;gt;= 4.7 &amp;amp;&amp;amp; &amp;lt; 5&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , brick&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , containers&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , linear&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , microlens&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , microlens-th&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , random&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , vty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , MonadRandom&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このプロジェクトを &lt;strong&gt;cabal&lt;/strong&gt; でビルドするためにはどうしたら良いんだろうか？というお話です。何もしなくてもビルドできるプロジェクトも結構あるんですが、ハマる時もあります・・・。&lt;/p&gt;
&lt;h2 id=&#34;package.yaml-から-cabal-ファイルを生成する&#34;&gt;package.yaml から cabal ファイルを生成する&lt;/h2&gt;
&lt;p&gt;リポジトリに &lt;code&gt;package.yaml&lt;/code&gt; しか含まれていない場合は、&lt;code&gt;package.yaml&lt;/code&gt; から &lt;strong&gt;cabal&lt;/strong&gt; ファイルを生成しましょう。&lt;/p&gt;
&lt;p&gt;以下のコマンドでビルドすることなくすぐに生成できます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack build --dry-run&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;今回は &lt;code&gt;dino.cabal&lt;/code&gt; が最初からリポジトリに含まれているため何もしなくても良さそうですね。&lt;/p&gt;
&lt;h2 id=&#34;cabal-でビルドしてみよう&#34;&gt;cabal でビルドしてみよう&lt;/h2&gt;
&lt;p&gt;とりあえずビルドしてみましょう。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ git clone https://github.com/arcticmatt/dino-brick.git
$ cd dino-brick

$ cabal update
Downloading the latest package list from hackage.haskell.org
To revert to previous state run:
    cabal v2-update &amp;#39;hackage.haskell.org,2020-01-19T06:12:36Z&amp;#39;

$ cabal build
...

src/UI.hs:142:56: error:
    • Couldn&amp;#39;t match expected type ‘App s0 e0 n0’
                  with actual type ‘Game’
    • In the fourth argument of ‘customMain’, namely ‘g’
      In a stmt of a &amp;#39;do&amp;#39; block:
        customMain (V.mkVty V.defaultConfig) (Just chan) app g
      In the expression:
        do chan &amp;lt;- newBChan 10
           forkIO
             $ forever
                 $ do modifyIORef counter (+ 1)
                      c&amp;#39; &amp;lt;- readIORef counter
                      ....
           g &amp;lt;- initGame 0
           customMain (V.mkVty V.defaultConfig) (Just chan) app g
    |
142 |   customMain (V.mkVty V.defaultConfig) (Just chan) app g
    |                                                        ^
cabal: Failed to build dino-0.1.0.0 (which is required by exe:dino from
dino-0.1.0.0).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;エラーがいくつも出てしまいました。上記の結果はそのうちの最後の1つだけを表示しています。&lt;/p&gt;
&lt;p&gt;ちなみに &lt;code&gt;stack build&lt;/code&gt; だとビルドできます。&lt;/p&gt;
&lt;h3 id=&#34;問題点&#34;&gt;問題点&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;stack&lt;/strong&gt; だとビルドできて、&lt;strong&gt;cabal&lt;/strong&gt; だと失敗してしまう原因はビルド時にパッケージのバージョンにあります。どのパッケージが原因かと言うと、今回は &lt;a href=&#34;https://hackage.haskell.org/package/brick&#34;&gt;brick&lt;/a&gt; です。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;stack&lt;/strong&gt; の場合は &lt;a href=&#34;https://www.stackage.org/lts-8.23&#34;&gt;LTS-8.23&lt;/a&gt; に含まれるバージョンを利用することになるので &lt;a href=&#34;https://www.stackage.org/lts-8.23/package/brick-0.17.2&#34;&gt;brick-0.17.2&lt;/a&gt; を利用します。&lt;/p&gt;
&lt;p&gt;一方で &lt;strong&gt;cabal&lt;/strong&gt; の場合は &lt;code&gt;cabal update&lt;/code&gt; を最後に実行した時の &lt;strong&gt;Hackage&lt;/strong&gt; の最新バージョンが利用されます。これは明示的なバージョン制約が &lt;strong&gt;cabal&lt;/strong&gt; ファイルに記述されていないためです。そのため &lt;a href=&#34;https://hackage.haskell.org/package/brick-0.50.1&#34;&gt;brick-0.50.1&lt;/a&gt; などが利用されます。&lt;/p&gt;
&lt;p&gt;バージョンアップによって後方互換性が保たれている場合は何も考えずにビルドが通るのですが、&lt;strong&gt;GHC&lt;/strong&gt; のバージョンが変わるタイミングなどでは破壊的変更が含まれている場合も多いため、どこかでビルドが壊れます。&lt;/p&gt;
&lt;p&gt;今回のプロジェクトでは &lt;a href=&#34;https://github.com/jtdaugherty/brick/blob/master/CHANGELOG.md#047&#34;&gt;brick-0.47&lt;/a&gt; の変更によって &lt;code&gt;Brick.Main.customMain&lt;/code&gt; の型が変わり、その結果ビルドエラーになりました。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 0.46&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;customMain ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ord&lt;/span&gt; n &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt;        &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Vty&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;BChan&lt;/span&gt; e) &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;App&lt;/span&gt; s e n &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; s &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; s&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 0.47&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;customMain ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ord&lt;/span&gt; n &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Vty&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Vty&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;BChan&lt;/span&gt; e) &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;App&lt;/span&gt; s e n &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; s &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; s&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このように、原因が特定できれば、修正は簡単です。&lt;code&gt;brick&lt;/code&gt; にバージョン制約を付けるだけです。(0.47 でビルドできるようにコードを修正する方法ももちろん考えられます)&lt;/p&gt;
&lt;pre class=&#34;cabal&#34;&gt;&lt;code&gt;library:
  build-depends:
      base &amp;gt;= 4.7 &amp;amp;&amp;amp; &amp;lt; 5
    , brick == 0.46       -- 破壊的変更が起きる前のバージョンを指定
    , containers
    , linear
    , microlens
    , microlens-th
    , random
    , vty
    , MonadRandom&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;このプロジェクトはこれで上手く動きました。&lt;/p&gt;
&lt;p&gt;しかし、どのバージョンで壊れたかどうかを毎回調べるのはかなりつらいです。そのため、もっと良い方法として &lt;code&gt;LTS-8.23&lt;/code&gt; のバージョン制約を使ってみましょう。&lt;/p&gt;
&lt;h2 id=&#34;cabal-freeze-コマンド&#34;&gt;cabal freeze コマンド&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;cabal&lt;/strong&gt; には &lt;code&gt;cabal freeze&lt;/code&gt; というコマンドがあります。アプリケーション開発で便利な機能です。&lt;/p&gt;
&lt;p&gt;コマンドを実行すると &lt;code&gt;cabal.project.freeze&lt;/code&gt; というファイルが作られます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal freeze
Wrote freeze file: dino-brick/cabal.project.freeze&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;このファイルは一言でいえば &lt;code&gt;npm&lt;/code&gt; の &lt;code&gt;package-lock.json&lt;/code&gt; ファイルと同じです。ビルドの再現性を保証するためのものです。&lt;/p&gt;
&lt;p&gt;例えば、先ほどの &lt;code&gt;dino.cabal&lt;/code&gt; ファイルで &lt;code&gt;brick&lt;/code&gt; のバージョンを &lt;code&gt;^&amp;gt;= 0.46&lt;/code&gt; のように指定した場合を考えてみましょう。この指定方法は &lt;code&gt;brick &amp;gt;= 0.46 &amp;amp;&amp;amp; &amp;lt; 0.47&lt;/code&gt; と同じ意味になります。(&lt;strong&gt;cabal 2.0&lt;/strong&gt; から利用可能な記法です)&lt;/p&gt;
&lt;pre class=&#34;cabal&#34;&gt;&lt;code&gt;library:
  build-depends:
      base &amp;gt;= 4.7 &amp;amp;&amp;amp; &amp;lt; 5
    , brick ^&amp;gt;= 0.46      -- brick &amp;gt;= 0.46 &amp;amp;&amp;amp; &amp;lt; 0.47 と同じ意味
    , containers
    , linear
    , microlens
    , microlens-th
    , random
    , vty
    , MonadRandom&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;例えば、会社のデスクトップPCでビルドしたときに &lt;code&gt;brick-0.46&lt;/code&gt; がインストールされたとしましょう。&lt;/p&gt;
&lt;p&gt;次の日の朝、バグフィックスされた &lt;code&gt;brick-0.46.1&lt;/code&gt; が &lt;strong&gt;Hackage&lt;/strong&gt; にアップロードされました。&lt;/p&gt;
&lt;p&gt;その日の午後、自宅のノートPCで &lt;code&gt;cabal update &amp;amp;&amp;amp; cabal build&lt;/code&gt; を行った場合、インストールされるのは &lt;code&gt;brick-0.46.1&lt;/code&gt; になります。&lt;/p&gt;
&lt;p&gt;つまり、&lt;code&gt;brick ^&amp;gt;= 0.46&lt;/code&gt; という指定方法では環境ごとに同じバージョンが使われていることを保証できません。そのため、&lt;code&gt;cabal freeze&lt;/code&gt; コマンドで &lt;code&gt;cabal.project.freeze&lt;/code&gt; を生成し、コマンドを実行した環境で実際に利用されている具体的なバージョンを記録しておきます。これは &lt;strong&gt;stack&lt;/strong&gt; のスナップショットと同じようなものです。&lt;/p&gt;
&lt;p&gt;実際に生成されたファイルの中身はこんな感じです。&lt;/p&gt;
&lt;pre class=&#34;cabal&#34;&gt;&lt;code&gt;constraints: any.Cabal ==2.4.0.1,
             any.MonadRandom ==0.5.1.2,
             any.QuickCheck ==2.13.2,
             QuickCheck +templatehaskell,
             any.StateVar ==1.2,
             any.adjunctions ==4.4,
             any.ansi-terminal ==0.10.2,
             ansi-terminal -example,
             any.ansi-wl-pprint ==0.6.9,
             ansi-wl-pprint -example,
             any.array ==0.5.3.0,
             any.base ==4.12.0.0,
             any.base-orphans ==0.8.1,
             any.bifunctors ==5.5.6,
             bifunctors +semigroups +tagged,
             any.binary ==0.8.6.0,
             any.binary-orphans ==1.0.1,
             any.blaze-builder ==0.4.1.0,
             any.brick ==0.46,
             brick -demos,
             any.bytes ==0.16,
             bytes +test-doctests,
             any.bytestring ==0.10.8.2,
             any.cabal-doctest ==1.0.8,
             any.call-stack ==0.2.0,
             any.case-insensitive ==1.2.1.0,
             any.cereal ==0.5.8.1,
             cereal -bytestring-builder,
             any.colour ==2.3.5,
             any.comonad ==5.0.6,
             comonad +containers +distributive +test-doctests,
             any.config-ini ==0.2.4.0,
             config-ini -enable-doctests,
             any.containers ==0.6.0.1,
             any.contravariant ==1.5.2,
             contravariant +semigroups +statevar +tagged,
             any.data-clist ==0.1.2.3,
             any.deepseq ==1.4.4.0,
             any.directory ==1.3.3.0,
             any.distributive ==0.6.1,
             distributive +semigroups +tagged,
             any.dlist ==0.8.0.7,
             any.exceptions ==0.10.4,
             exceptions +transformers-0-4,
             any.filepath ==1.4.2.1,
             any.free ==5.1.3,
             any.ghc-boot-th ==8.6.5,
             any.ghc-prim ==0.5.3,
             any.hashable ==1.3.0.0,
             hashable -examples +integer-gmp +sse2 -sse41,
             any.integer-gmp ==1.0.2.0,
             any.integer-logarithms ==1.0.3,
             integer-logarithms -check-bounds +integer-gmp,
             any.invariant ==0.5.3,
             any.kan-extensions ==5.2,
             any.lens ==4.18.1,
             lens -benchmark-uniplate -dump-splices +inlining -j -old-inline-pragmas -safe +test-doctests +test-hunit +test-properties +test-templates +trustworthy,
             any.linear ==1.20.9,
             linear -herbie +template-haskell,
             any.megaparsec ==7.0.5,
             megaparsec -dev,
             any.microlens ==0.4.11.2,
             any.microlens-mtl ==0.2.0.1,
             any.microlens-th ==0.4.3.2,
             any.mtl ==2.2.2,
             any.optparse-applicative ==0.15.1.0,
             any.parallel ==3.2.2.0,
             any.parsec ==3.1.13.0,
             any.parser-combinators ==1.2.1,
             parser-combinators -dev,
             any.pretty ==1.1.3.6,
             any.primitive ==0.7.0.0,
             any.process ==1.6.5.0,
             any.profunctors ==5.5.1,
             any.random ==1.1,
             any.reflection ==2.1.5,
             reflection -slow +template-haskell,
             any.rts ==1.0,
             any.scientific ==0.3.6.2,
             scientific -bytestring-builder -integer-simple,
             any.semigroupoids ==5.3.4,
             semigroupoids +comonad +containers +contravariant +distributive +doctests +tagged +unordered-containers,
             any.semigroups ==0.19.1,
             semigroups +binary +bytestring -bytestring-builder +containers +deepseq +hashable +tagged +template-haskell +text +transformers +unordered-containers,
             any.splitmix ==0.0.3,
             splitmix -optimised-mixer +random,
             any.stm ==2.5.0.0,
             any.tagged ==0.8.6,
             tagged +deepseq +transformers,
             any.template-haskell ==2.14.0.0,
             any.terminfo ==0.4.1.2,
             any.text ==1.2.3.1,
             any.text-zipper ==0.10.1,
             any.th-abstraction ==0.3.1.0,
             any.time ==1.8.0.2,
             any.transformers ==0.5.6.2,
             any.transformers-base ==0.4.5.2,
             transformers-base +orphaninstances,
             any.transformers-compat ==0.6.5,
             transformers-compat -five +five-three -four +generic-deriving +mtl -three -two,
             any.type-equality ==1,
             any.unix ==2.7.2.2,
             any.unordered-containers ==0.2.10.0,
             unordered-containers -debug,
             any.utf8-string ==1.0.1.1,
             any.vector ==0.12.0.3,
             vector +boundschecks -internalchecks -unsafechecks -wall,
             any.void ==0.7.3,
             void -safe,
             any.vty ==5.26,
             any.word-wrap ==0.4.1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;cabal.project.freeze&lt;/code&gt; ファイルと &lt;code&gt;&amp;lt;project&amp;gt;.cabal&lt;/code&gt; ファイルでバージョンが異なる場合は &lt;code&gt;&amp;lt;project&amp;gt;.cabal&lt;/code&gt; のバージョンが優先されるようです。&lt;/p&gt;
&lt;pre class=&#34;cabal&#34;&gt;&lt;code&gt;library:
  build-depends:
      base &amp;gt;= 4.7 &amp;amp;&amp;amp; &amp;lt; 5
    , brick ^&amp;gt;= 0.47      -- ビルドが失敗するバージョン制約を指定
    , containers
    , linear
    , microlens
    , microlens-th
    , random
    , vty
    , MonadRandom&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal build
...
[__1] fail (backjumping, conflict set: brick, dino)
After searching the rest of the dependency tree exhaustively, these were the
goals I&amp;#39;ve had most trouble fulfilling: brick, dino

$ cabal freeze
...
[__1] fail (backjumping, conflict set: brick, dino)
After searching the rest of the dependency tree exhaustively, these were the
goals I&amp;#39;ve had most trouble fulfilling: brick, dino&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;そもそも制約を満たさない場合は &lt;code&gt;cabal freeze&lt;/code&gt; が失敗するみたいです。&lt;/p&gt;
&lt;h2 id=&#34;スナップショットに対応した-freeze-ファイルを使おう&#34;&gt;スナップショットに対応した freeze ファイルを使おう&lt;/h2&gt;
&lt;p&gt;さて、それではリポジトリを &lt;strong&gt;clone&lt;/strong&gt; した直後に戻しましょう。こんな状態です。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ git clone https://github.com/arcticmatt/dino-brick.git
$ cd dino-brick
$ cabal update&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode yaml&#34;&gt;&lt;code class=&#34;sourceCode yaml&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;build-depends&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;      base &amp;gt;= 4.7 &amp;amp;&amp;amp; &amp;lt; 5&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , brick&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , containers&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , linear&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , microlens&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , microlens-th&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , random&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , vty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    , MonadRandom&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Stackage&lt;/strong&gt; のスナップショットの &lt;strong&gt;URL&lt;/strong&gt; の後ろに &lt;code&gt;cabal.config&lt;/code&gt; を付けた &lt;a href=&#34;https://www.stackage.org/lts-8.23/cabal.config&#34;&gt;https://www.stackage.org/lts-8.23/cabal.config&lt;/a&gt; にアクセスすると &lt;code&gt;cabal.project.freeze&lt;/code&gt; ファイルとして利用可能なテキストファイルが表示されます。&lt;/p&gt;
&lt;p&gt;これをそのまま保存してビルドするだけで全てが上手くいきます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ curl https://www.stackage.org/lts-8.23/cabal.config &amp;gt; cabal.project.freeze
$ cabal build
[__2] fail (backjumping, conflict set: base, dino, optparse-applicative)
After searching the rest of the dependency tree exhaustively, these were the
goals I&amp;#39;ve had most trouble fulfilling: optparse-applicative, base, dino&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;おっと忘れていました。&lt;code&gt;LTS-8.23&lt;/code&gt; は &lt;code&gt;GHC-8.0.2&lt;/code&gt; でしたね。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-w&lt;/code&gt; (&lt;code&gt;with-compiler&lt;/code&gt; の頭文字) オプションで利用する &lt;strong&gt;GHC&lt;/strong&gt; を切り替えてビルドしましょう！&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal build -w ghc-8.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;stack&lt;/strong&gt; でビルドが通っていれば、&lt;strong&gt;cabal&lt;/strong&gt; でも通る&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cabal freeze&lt;/code&gt; を使うとスナップショットのようにバージョンを記録できる&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stackage&lt;/strong&gt; のスナップショットの &lt;strong&gt;URL&lt;/strong&gt; の最後に &lt;code&gt;cabal.config&lt;/code&gt; を付けると &lt;strong&gt;freeze&lt;/strong&gt; ファイルを取得できる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考リソース&#34;&gt;参考リソース&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.haskell.org/cabal/users-guide/nix-local-build.html#cabal-v2-freeze&#34;&gt;5.4.6. cabal v2-freeze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@fommil/why-not-both-8adadb71a5ed&#34;&gt;Why Not Both?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><id>https://haskell.e-bigmoon.com/posts/2019/12-24-ap-monoid.html</id><title type="text">Ap Monoid</title><updated>March  3, 2020</updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2019/12-24-ap-monoid.html"/><summary type="html">&lt;p&gt;まずは以下の関数 &lt;code&gt;f&lt;/code&gt; を考えます。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; f &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;fmap&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;sequence&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; e1 &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; e2 &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; f e1&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; f e2&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;次に、この &lt;code&gt;f = fmap concat . sequence&lt;/code&gt; をもっと短くカッコよく書けないかな？と考えます。&lt;/p&gt;
&lt;p&gt;何となく &lt;code&gt;mconcat&lt;/code&gt; で置き換えれそうな気がしたんですよ・・・。 だけど、動作が変わってしまうんです・・・。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;mconcat&lt;/span&gt; e1&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;mconcat&lt;/span&gt; e2&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここで問題です。なぜ &lt;code&gt;mconcat&lt;/code&gt; にすると結果が異なるのでしょうか？ また、&lt;code&gt;f = fmap concat . sequence&lt;/code&gt; という定義を畳み込みを使って書き直すことはできるのでしょうか？&lt;/p&gt;
&lt;p&gt;このことを考えていたら &lt;code&gt;Ap&lt;/code&gt; モノイドにたどり着きました。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&#34;関数-f-は何を行っているのか&#34;&gt;関数 f は何を行っているのか？&lt;/h2&gt;
&lt;p&gt;まずは &lt;code&gt;f = fmap concat . sequence&lt;/code&gt; がどのように動作するか確認してみましょう。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;f e1&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;fmap&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;sequence&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;fmap&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; [[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;f e2&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;fmap&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;sequence&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;fmap&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここまでは簡単ですね。では &lt;code&gt;f = mconcat&lt;/code&gt; の場合も確認します。(ここでの定義はデフォルト実装の &lt;code&gt;mconcat = foldr (&amp;lt;&amp;gt;) mempty&lt;/code&gt; を使います)&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;f e1&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;mconcat&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;foldr&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;mempty&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;mempty&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;-- ココ!!!&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;どうやら &lt;code&gt;mconcat&lt;/code&gt; に変更すると &lt;code&gt;Just [3,4] &amp;lt;&amp;gt; Nothing&lt;/code&gt; の計算で結果が変わってくるということがわかります。 つまり、求めている計算は &lt;code&gt;Monoid&lt;/code&gt; の演算ではなく &lt;code&gt;Monad (Applicative)&lt;/code&gt; の &lt;code&gt;Effect&lt;/code&gt; なのです。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 雰囲気でいえば、こんな感じになれば良いかも？&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- mconcat で行われる演算&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 期待しているのは Maybe モナドの Effect&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;畳み込んでみる&#34;&gt;畳み込んでみる&lt;/h2&gt;
&lt;p&gt;何となく方向性は掴めました。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 計算の途中で出てきたこの形を&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- (とりあえず) こうしたい&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;] &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;形だけ見れば &lt;code&gt;foldr (&amp;gt;&amp;gt;) mempty&lt;/code&gt; とすれば良さげです。試してみましょう。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; f &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;foldr&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;mempty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; e1 &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; e2 &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; f e1&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; f e2&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;f e2&lt;/code&gt; は良い感じですが、今度は &lt;code&gt;f e1&lt;/code&gt; の結果がおかしくなりました・・・。 それはそうですよね。&lt;code&gt;Maybe&lt;/code&gt; モナドの &lt;code&gt;Effect&lt;/code&gt; で畳み込んでいるため、どこかで &lt;code&gt;Nothing&lt;/code&gt; が出てきたら計算全体は &lt;code&gt;Nothing&lt;/code&gt; になりますよね。&lt;/p&gt;
&lt;p&gt;これってつまり、&lt;code&gt;Maybe&lt;/code&gt; モナドの &lt;code&gt;Effect&lt;/code&gt; と &lt;code&gt;リスト&lt;/code&gt; モノイドの演算の両方が必要ってことになりますね・・・。 オリジナルの &lt;code&gt;f = fmap concat . sequence&lt;/code&gt; の定義も確かにそんな感じです。&lt;/p&gt;
&lt;h2 id=&#34;自分で定義しよう&#34;&gt;自分で定義しよう！&lt;/h2&gt;
&lt;p&gt;もう一度整理しましょう。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 計算対象のリスト&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34;&gt;&lt;/a&gt;[ m_a1, m_a2, m_a3, me ]&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- まずは Effect を実行したい&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34;&gt;&lt;/a&gt;m_a1 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m_a2 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; m_a3 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; me&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- m_a1, m_a2, m_a3, me の結果をそれぞれ a1, a2, a3, e として&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- Monoid の演算を行いたい&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34;&gt;&lt;/a&gt;a1 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a2 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;------------------------------------------------&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 具体的に、値が全部 Just でラップされていると考えた場合&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a1 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a2 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 期待する結果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34;&gt;&lt;/a&gt;a1 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a2 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- どこか一箇所に Nothing がある (この場合 m_a2 が Nothing) と考えた場合&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a1 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 期待する結果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 以下のようになってはダメ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34;&gt;&lt;/a&gt;a1 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;------------------------------------------------&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- こんな感じで計算が進むモノイドが欲しい&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a1 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a2 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-28&#34;&gt;&lt;a href=&#34;#cb8-28&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (a1 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a2) &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-29&#34;&gt;&lt;a href=&#34;#cb8-29&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (a1 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a2 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a3) &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-30&#34;&gt;&lt;a href=&#34;#cb8-30&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (a1 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a2 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; e)&lt;/span&gt;
&lt;span id=&#34;cb8-31&#34;&gt;&lt;a href=&#34;#cb8-31&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-32&#34;&gt;&lt;a href=&#34;#cb8-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a1 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-33&#34;&gt;&lt;a href=&#34;#cb8-33&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; a3 &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-34&#34;&gt;&lt;a href=&#34;#cb8-34&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; e&lt;/span&gt;
&lt;span id=&#34;cb8-35&#34;&gt;&lt;a href=&#34;#cb8-35&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上記のような挙動を行う &lt;code&gt;Monoid&lt;/code&gt; を新しく定義してみます！&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;newtype&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; m a &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; {&lt;span class=&#34;ot&#34;&gt; getSequence ::&lt;/span&gt; m a }&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;deriving&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Show&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;Eq&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Monad&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;Semigroup&lt;/span&gt; a) &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Semigroup&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; m a) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34;&gt;&lt;/a&gt;  ma &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; mb &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34;&gt;&lt;/a&gt;      a &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; getSequence ma&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34;&gt;&lt;/a&gt;      b &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; getSequence mb&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;return&lt;/span&gt; (a &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; b)&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Monad&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;Monoid&lt;/span&gt; a) &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Monoid&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; m a) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;mempty&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;mempty&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実際に確かめてみましょう。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- (&amp;lt;&amp;gt;) に変更した。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; f &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;foldr&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;mempty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; e1 &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; e2 &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; f (&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; e1)&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; {getSequence &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]}&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; f (&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; e2)&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; {getSequence &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;期待通りに動いていますね。&lt;code&gt;foldMap&lt;/code&gt; を使うともう少し短くかけます。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;foldMap&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; e1&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; {getSequence &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]}&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;foldMap&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; e2&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Sequence&lt;/span&gt; {getSequence &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;ap-モノイド&#34;&gt;Ap モノイド&lt;/h2&gt;
&lt;p&gt;ここまでで定義した &lt;code&gt;Sequence&lt;/code&gt; モノイドは &lt;a href=&#34;https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html&#34;&gt;Data.Monoid&lt;/a&gt; に &lt;a href=&#34;https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Ap&#34;&gt;Ap&lt;/a&gt; という名前で定義されています。&lt;/p&gt;
&lt;p&gt;今回は &lt;code&gt;Monad&lt;/code&gt; で話を進めましたが、実際は &lt;code&gt;Applicative&lt;/code&gt; でも成り立ちます。 最初の例を &lt;code&gt;Ap&lt;/code&gt; モノイドで置き換えれば以下のようになります。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Data.Monoid&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; e1 &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; e2 &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; [&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;foldMap&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ap&lt;/span&gt; e1&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ap&lt;/span&gt; {getAp &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; [&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;]}&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;foldMap&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ap&lt;/span&gt; e2&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ap&lt;/span&gt; {getAp &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ap&lt;/code&gt; モノイドの使い道がわかった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.miz-ar.info/2019/02/monoid-for-haskellers/&#34;&gt;Haskellerのためのモノイド完全ガイド&lt;/a&gt; でも解説されているので、気になった方はこちらもどうぞ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fmap fold . sequenceA&lt;/code&gt; と &lt;code&gt;getAp . foldMap Ap&lt;/code&gt; を比較すると型クラス制約が若干違う&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;t &lt;span class=&#34;fu&#34;&gt;fmap&lt;/span&gt; fold &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;sequenceA&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;fmap&lt;/span&gt; fold &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; sequenceA ::&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Monoid&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;Traversable&lt;/span&gt; t, &lt;span class=&#34;dt&#34;&gt;Applicative&lt;/span&gt; f) &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; t (f a) &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; f a&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;t getAp &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;foldMap&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ap&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34;&gt;&lt;/a&gt;getAp &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;foldMap&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ap&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;    ::&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Monoid&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;Foldable&lt;/span&gt; t, &lt;span class=&#34;dt&#34;&gt;Applicative&lt;/span&gt; f) &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; t (f a) &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; f a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><id>https://haskell.e-bigmoon.com/posts/2020/01-18-cabal-build-tool-depends.html</id><title type="text">cabal の build-tool-depends フィールド</title><updated>January 22, 2020</updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2020/01-18-cabal-build-tool-depends.html"/><summary type="html">&lt;p&gt;cabal の &lt;a href=&#34;https://www.haskell.org/cabal/users-guide/developing-packages.html#pkg-field-build-tool-depends&#34;&gt;build-tool-depends&lt;/a&gt; というフィールドが便利だったので紹介します。&lt;/p&gt;
&lt;p&gt;テストを書くときに &lt;a href=&#34;https://hackage.haskell.org/package/hspec-discover&#34;&gt;hspec-discover&lt;/a&gt; や &lt;a href=&#34;https://hackage.haskell.org/package/tasty-discover&#34;&gt;tasty-discover&lt;/a&gt; などを使う場合、このフィールドを設定しておくことで依存している実行ファイルを自動的にダウンロードして使ってくれます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal --version
cabal-install version 3.0.0.0
compiled using version 3.0.0.0 of the Cabal library &lt;/code&gt;&lt;/pre&gt;
&lt;!--more--&gt;
&lt;h2 id=&#34;サンプルプロジェクトの構成&#34;&gt;サンプルプロジェクトの構成&lt;/h2&gt;
&lt;p&gt;全体のディレクトリ構成は以下のようになっているとしましょう。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ tree .
.
├── example.cabal
├── src
│   └── Lib.hs
├── stack.yaml
└── test
    ├── LibSpec.hs
    └── Spec.hs&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;それぞれのファイルの内容は以下のようになっています。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- src/Lib.hs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Lib&lt;/span&gt; (someFunc) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;someFunc ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;someFunc &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;putStrLn&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;someFunc&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- test/LibSpec.hs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;LibSpec&lt;/span&gt; (spec) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;spec ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Spec&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34;&gt;&lt;/a&gt;spec &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;undefined&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- test/Spec.hs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;{-# OPTIONS_GHC -F -pgmF hspec-discover #-}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre class=&#34;cabal&#34;&gt;&lt;code&gt;-- example.cabal
cabal-version: 2.4
name:          example
version:       0.1.0.0

library
  exposed-modules:  Lib
  hs-source-dirs:   src
  build-depends:    base &amp;gt;=4.7 &amp;amp;&amp;amp; &amp;lt;5
  default-language: Haskell2010

test-suite example-test
  type:             exitcode-stdio-1.0
  main-is:          Spec.hs
  hs-source-dirs:   test
  other-modules:    LibSpec
  build-depends:
    , base     &amp;gt;=4.7 &amp;amp;&amp;amp; &amp;lt;5
    , example

  default-language: Haskell2010&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode yaml&#34;&gt;&lt;code class=&#34;sourceCode yaml&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# stack.yaml&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;resolver&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; lts-14.20&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;packages&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; .&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このような状況で &lt;code&gt;cabal&lt;/code&gt; や &lt;code&gt;stack&lt;/code&gt; がどのように振舞うか見ていきましょう。&lt;/p&gt;
&lt;p&gt;現時点では &lt;code&gt;hspec-discover&lt;/code&gt; の実行ファイルは存在していません。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ hspec-discover
bash: hspec-discover: コマンドが見つかりません&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;stack&#34;&gt;stack&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hspec-discover&lt;/code&gt; の実行ファイルが無い状態で &lt;code&gt;stack test&lt;/code&gt; を実行すると以下のようにエラーになります。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack test
...

ghc: could not execute: hspec-discover&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;hspec-discover-をインストールした場合&#34;&gt;hspec-discover をインストールした場合&lt;/h3&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack install hspec-discover

$ hspec-discover
Usage: hspec-discover SRC CUR DST [--module-name=NAME]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上記のようにインストールした場合は、問題無く動作します。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack test
...

example/test/LibSpec.hs:3:9: error:
    Not in scope: type constructor or class ‘Spec’
  |         
3 | spec :: Spec
  |         ^^^^&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;hspec-discover&lt;/code&gt; がファイルを自動的に見つけてくれたので、コンパイルエラーになりました。&lt;/p&gt;
&lt;p&gt;次に進む前に実行ファイルを削除しておきます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ rm ~/.local/bin/hspec-discover&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;build-depends-に追加した場合&#34;&gt;build-depends に追加した場合&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;example.cabal&lt;/code&gt; ファイルの &lt;code&gt;build-depends&lt;/code&gt; に追加した場合はどうなるのでしょうか？&lt;/p&gt;
&lt;pre class=&#34;cabal&#34;&gt;&lt;code&gt;test-suite example-test
  type:             exitcode-stdio-1.0
  main-is:          Spec.hs
  hs-source-dirs:   test
  other-modules:    LibSpec
  build-depends:
    , base     &amp;gt;=4.7 &amp;amp;&amp;amp; &amp;lt;5
    , example
    , hspec-discover  -- 新しく追加した

  default-language: Haskell2010&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;では &lt;code&gt;stack test&lt;/code&gt; を実行してみます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack test
...

example/test/LibSpec.hs:3:9: error:
    Not in scope: type constructor or class ‘Spec’
  |         
3 | spec :: Spec
  |         ^^^^&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;実行ファイルがローカル環境に存在しなくても自動的に &lt;code&gt;hspec-discover&lt;/code&gt; が動作しています。&lt;/p&gt;
&lt;p&gt;そのため、&lt;code&gt;stack&lt;/code&gt; プロジェクトでは &lt;code&gt;hspec-discover&lt;/code&gt; を依存関係 (&lt;code&gt;build-depends&lt;/code&gt;) に追加するだけで良い感じにテストが進みます。&lt;/p&gt;
&lt;h2 id=&#34;cabal&#34;&gt;cabal&lt;/h2&gt;
&lt;p&gt;同様に &lt;code&gt;cabal&lt;/code&gt; の場合も確かめてみましょう。(&lt;code&gt;example.cabal&lt;/code&gt; ファイルから &lt;code&gt;hspec-discover&lt;/code&gt; を削除しておきます)&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal test
...

ghc: could not execute: hspec-discover&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;stack&lt;/code&gt; と同様のエラーになりました。&lt;/p&gt;
&lt;h3 id=&#34;hspec-discover-をインストールした場合-1&#34;&gt;hspec-discover をインストールした場合&lt;/h3&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal install hspec-discover

$ hspec-discover
Usage: hspec-discover SRC CUR DST [--module-name=NAME]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;同様に &lt;code&gt;cabal test&lt;/code&gt; を実行してみます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal test
...

test/LibSpec.hs:3:9: error:
    Not in scope: type constructor or class ‘Spec’
  |
3 | spec :: Spec
  | &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;stack&lt;/code&gt; の場合と同じように、ちゃんと動いていますね。&lt;/p&gt;
&lt;h3 id=&#34;build-depends-に追加した場合-1&#34;&gt;build-depends に追加した場合&lt;/h3&gt;
&lt;p&gt;まずはバイナリファイルを削除しておきます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ rm ~/.cabal/bin/hspec-discover&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;example.cabal&lt;/code&gt; ファイルは先ほどと同じように &lt;code&gt;build-depends&lt;/code&gt; に &lt;code&gt;hspec-discover&lt;/code&gt; を追加した状態です。&lt;/p&gt;
&lt;p&gt;テストを実行してみましょう。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal test
...

ghc: could not execute: hspec-discover&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;stack&lt;/code&gt; と異なる結果になりましたね・・・。僕は今までこの結果への対処法は &lt;code&gt;hspec-discover&lt;/code&gt; をインストールしておくしかないと思っていました。&lt;/p&gt;
&lt;p&gt;しかし、&lt;code&gt;build-tool-depends&lt;/code&gt; をフィールドを利用することで &lt;code&gt;stack&lt;/code&gt; と同じ挙動になるということがわかりました。&lt;/p&gt;
&lt;p&gt;実際に試してみましょう。&lt;/p&gt;
&lt;h3 id=&#34;build-tool-depends-に追加した場合&#34;&gt;build-tool-depends に追加した場合&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;build-tool-depends&lt;/code&gt; に追加するとこんな感じです。&lt;/p&gt;
&lt;pre class=&#34;cabal&#34;&gt;&lt;code&gt;test-suite example-test
  type:             exitcode-stdio-1.0
  main-is:          Spec.hs
  hs-source-dirs:   test
  other-modules:    LibSpec
  build-depends:
    , base     &amp;gt;=4.7 &amp;amp;&amp;amp; &amp;lt;5
    , example

  build-tool-depends:                 -- 新たに追加した行
    , hspec-discover:hspec-discover   -- 新たに追加した行

  default-language: Haskell2010&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;build-depends&lt;/code&gt; が &lt;code&gt;&amp;lt;package_name&amp;gt;&lt;/code&gt; という指定方法でしたが、&lt;code&gt;build-tool-depends&lt;/code&gt; では &lt;code&gt;&amp;lt;package_name&amp;gt;:&amp;lt;exe_name&amp;gt;&lt;/code&gt; という指定方法になっている点に注意です。&lt;/p&gt;
&lt;p&gt;バージョン制約が必要な場合は &lt;code&gt;build-depends&lt;/code&gt; と同じように指定できます。&lt;/p&gt;
&lt;pre class=&#34;cabal&#34;&gt;&lt;code&gt;hspec-discover:hspec-discover ^&amp;gt;=2.7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;これでテストを実行してみましょう。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal test
...

test/LibSpec.hs:3:9: error:
    Not in scope: type constructor or class ‘Spec’
  |
3 | spec :: Spec
  | &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;これで &lt;code&gt;stack&lt;/code&gt; と同じような挙動になりました！happy!&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;p&gt;こんな便利なフィールドがあるなんて全然知りませんでした・・・。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;build-tool-depends&lt;/code&gt; を指定しておけば、実行ファイルが無くても大丈夫&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stack&lt;/code&gt; は初心者に優しい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.haskell.org/ghc/blog/20200116-ghc-8.8.2-released.html&#34;&gt;GHC-8.8.2 がリリース&lt;/a&gt;されましたね。&lt;/p&gt;
&lt;h2 id=&#34;参考リソース&#34;&gt;参考リソース&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.haskell.org/cabal/users-guide/developing-packages.html#pkg-field-build-tool-depends&#34;&gt;cabal user guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><id>https://haskell.e-bigmoon.com/posts/2020/01-04-cabal-version-numbers-error.html</id><title type="text">Memo - unexpected At most 9 numbers are allowed per version number part</title><updated>January 22, 2020</updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2020/01-04-cabal-version-numbers-error.html"/><summary type="html">&lt;p&gt;GHC-8.8 への移行中に GitHub Actions で以下のようなエラーが発生しました。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;proj/dist-newstyle/src/barbies-6f24224e2c384e2f/barbies.cabal:2:31: error:
unexpected At most 9 numbers are allowed per version number part

    1 | name:           barbies
    2 | version:        1.999999999999
      |                               ^

##[error]Process completed with exit code 1.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;初めて見るエラーだったのでメモとして残しておきます。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&#34;エラーが発生した理由&#34;&gt;エラーが発生した理由&lt;/h2&gt;
&lt;p&gt;エラー発生の原因はたぶんこれです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/pull/6386&#34;&gt;Limit version number parts to be 9 digits #6386&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この変更は &lt;code&gt;cabal-3.0.1.0&lt;/code&gt; に含まれるはずなので &lt;code&gt;cabal-3.0.0.0&lt;/code&gt; では関係ないと思っていたのですが、&lt;a href=&#34;https://github.com/e-bigmoon/haskell-blog/commit/73a7adcb8bf8204dd81de35d014c967b76040526/checks?check_suite_id=384131716&#34;&gt;GitHub Actions のログ&lt;/a&gt;を見るとわかるとおり、GitHub Actions では &lt;code&gt;cabal-3.0.1.0&lt;/code&gt; がインストールされていました。(何故?&lt;a href=&#34;https://github.com/haskell/cabal/issues/6328&#34;&gt;cabal-install 3.0.1.0 release planning #6328&lt;/a&gt; はまだ閉じられてない)&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;...
The Glorious Glasgow Haskell Compilation System, version 8.6.5
cabal-install version 3.0.1.0
compiled using version 3.0.1.0 of the Cabal library 
...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;また &lt;a href=&#34;https://github.com/actions/setup-haskell&#34;&gt;actions/setup-haskell&lt;/a&gt; の README を見る限り &lt;code&gt;cabal&lt;/code&gt; のバージョン指定方法は &lt;code&gt;2.0&lt;/code&gt;, &lt;code&gt;2.2&lt;/code&gt;, &lt;code&gt;2.4&lt;/code&gt;, &lt;code&gt;3.0&lt;/code&gt; しか無いので &lt;code&gt;3.0.0.0&lt;/code&gt; を使う方法がありません・・・。&lt;/p&gt;
&lt;h2 id=&#34;とりあえずの解決策&#34;&gt;とりあえずの解決策&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jcpetruzza/barbies/blob/0b09a4235cd719aa3df9f9467f3e8fee81446bc8/barbies.cabal&#34;&gt;barbies.cabal&lt;/a&gt; のバージョン番号が長すぎるために起きているエラーなので、fork して一時的にバージョンを短くして対応しました。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name:           barbies
version:        1.999999999999  -- 変更前
version:        1.999999999     -- 変更後&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;p&gt;もうすぐ GHC-8.10.1 がリリースされそうですね。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.haskell.org/ghc/ghc/wikis/status/ghc-8.10.1&#34;&gt;GHC plans for 8.10.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><id>https://haskell.e-bigmoon.com/posts/2020/02-19-hunit-show-unicode.html</id><title type="text">HUnit で日本語が文字化けする問題</title><updated>February 19, 2020</updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2020/02-19-hunit-show-unicode.html"/><summary type="html">&lt;p&gt;&lt;code&gt;HUnit&lt;/code&gt; で日本語を扱おうとすると、以下のように文字化けしますよね。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;expected&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\12495\12473\12465\12523&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt; but got&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Haskell&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この問題は簡単に回避できるので、その方法を紹介します。やり方は &lt;a href=&#34;https://github.com/hspec/hspec/issues/384&#34;&gt;Human-readable output of unicode characters in expectation results #384&lt;/a&gt; の方法そのまんまです。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&#34;問題が発生している原因&#34;&gt;問題が発生している原因&lt;/h2&gt;
&lt;p&gt;今回使うコードはとてもシンプルです。依存しているパッケージは &lt;a href=&#34;https://hackage.haskell.org/package/HUnit&#34;&gt;HUnit&lt;/a&gt; です。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- Main.hs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Test.HUnit&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;hiding&lt;/span&gt; ((@?=))&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;qualified&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Test.HUnit&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;HUnit&lt;/span&gt; ((@?=))&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text.Show.Unicode&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;bad ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;bad &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; runTestTT (&lt;span class=&#34;dt&#34;&gt;TestCase&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Haskell&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;HUnit.@?=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;ハスケル&amp;quot;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;return&lt;/span&gt; ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上記のコードを実行すると、以下のような結果になります。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; stack repl &lt;span class=&#34;co&#34;&gt;--package HUnit ./Main.hs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; bad&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;### Failure:                              &lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;home&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;guchi&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Desktop&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;repos&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;haskell&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;blog&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;sample&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;code&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;02&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;Main.hs&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;expected&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\12495\12473\12465\12523&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt; but got&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Haskell&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Cases&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;dt&#34;&gt;Tried&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;dt&#34;&gt;Errors&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;dt&#34;&gt;Failures&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この問題は何故発生するかと言うと、&lt;code&gt;HUnit&lt;/code&gt; 内部で &lt;code&gt;show&lt;/code&gt; 関数を利用しているためです。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;putStrLn&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;show&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;ハスケル&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;\12495\12473\12465\12523&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上記のような文字化けに対応するには &lt;a href=&#34;https://hackage.haskell.org/package/unicode-show&#34;&gt;unicode-show&lt;/a&gt; パッケージの &lt;strong&gt;ushow&lt;/strong&gt; 関数が便利です。より詳しい紹介は「&lt;a href=&#34;https://haskell.jp/blog/posts/2019/unicode-show.html&#34;&gt;日本語をshowしてうまく表示されなかったらunicode-showの紹介（と、pretty-simpleを少し）&lt;/a&gt;」を参照してください。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; stack repl &lt;span class=&#34;co&#34;&gt;--package HUnit --package unicode-show ./Main.hs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text.Show.Unicode&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Main&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text.Show.Unicode&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;putStrLn&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; ushow &lt;span class=&#34;st&#34;&gt;&amp;quot;ハスケル&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;ハスケル&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ということで、&lt;strong&gt;HUnit&lt;/strong&gt; を &lt;strong&gt;ushow&lt;/strong&gt; を使うようにしてみましょう。&lt;/p&gt;
&lt;h2 id=&#34;解決策&#34;&gt;解決策&lt;/h2&gt;
&lt;p&gt;やり方はとても簡単です。&lt;strong&gt;(@?=)&lt;/strong&gt; を以下のように再定義するだけです。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;newtype&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; a&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;deriving&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Eq&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Show&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Show&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; a) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;show&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; s) &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; ushow s&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;(@?=) ::&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Eq&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;Show&lt;/span&gt; a) &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;HUnit.Assertion&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34;&gt;&lt;/a&gt;actual &lt;span class=&#34;op&#34;&gt;@?=&lt;/span&gt; expected &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; actual &lt;span class=&#34;op&#34;&gt;HUnit.@?=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; expected&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;コード全体は以下の通りです。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Test.HUnit&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;hiding&lt;/span&gt; ((@?=))&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;qualified&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Test.HUnit&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;HUnit&lt;/span&gt; ((@?=))&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text.Show.Unicode&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;bad ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34;&gt;&lt;/a&gt;bad &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; runTestTT (&lt;span class=&#34;dt&#34;&gt;TestCase&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Haskell&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;HUnit.@?=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;ハスケル&amp;quot;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;return&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;newtype&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; a&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;deriving&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Eq&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Show&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Show&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; a) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;show&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; s) &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; ushow s&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;(@?=) ::&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Eq&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;Show&lt;/span&gt; a) &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Assertion&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34;&gt;&lt;/a&gt;actual &lt;span class=&#34;op&#34;&gt;@?=&lt;/span&gt; expected &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; actual &lt;span class=&#34;op&#34;&gt;HUnit.@?=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UString&lt;/span&gt; expected&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;good ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34;&gt;&lt;/a&gt;good &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; runTestTT (&lt;span class=&#34;dt&#34;&gt;TestCase&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Haskell&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;@?=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;ハスケル&amp;quot;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;return&lt;/span&gt; ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実行してみましょう！&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode hs&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; good&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;### Failure:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;home&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;guchi&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Desktop&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;repos&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;haskell&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;blog&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;sample&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;code&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;02&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;Main.hs&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34;&gt;&lt;/a&gt;expected&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;ハスケル&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34;&gt;&lt;/a&gt; but got&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Haskell&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Cases&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;dt&#34;&gt;Tried&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;dt&#34;&gt;Errors&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;dt&#34;&gt;Failures&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;こんな感じで他の関数も同様に定義してしまえば良い感じです。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;p&gt;日本語の文字化けで困っている人向け情報でした。&lt;/p&gt;
&lt;h2 id=&#34;参考リソース&#34;&gt;参考リソース&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://iwamototakashi.hatenadiary.jp/entry/20100722/p1&#34;&gt;HUnitで日本語を出力してみる→成功&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hspec/hspec/issues/384&#34;&gt;Human-readable output of unicode characters in expectation results #384&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://haskell.jp/blog/posts/2019/unicode-show.html&#34;&gt;日本語をshowしてうまく表示されなかったらunicode-showの紹介（と、pretty-simpleを少し）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><id>https://haskell.e-bigmoon.com/posts/2019/11-10-megaparsec8.html</id><title type="text">Megaparsec 8 (翻訳)</title><updated>December 24, 2019</updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2019/11-10-megaparsec8.html"/><summary type="html">&lt;p&gt;Great original post: &lt;a href=&#34;https://markkarpov.com/post/megaparsec-8.html&#34;&gt;Megaparsec 8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一年が経ち、Megaparsecの新しいメジャーバージョンが再び登場する時がきました。 今回の変更は、これまでのメジャーリリースの中で最も破壊的ではない変更です。 実際、ほとんどのユーザはアップグレードのために何もする必要はないと思います。&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;これには次の理由があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;それほど多くのissue が開かれておらず、バグも報告されていません。それはMegaparsecが最近、そしてほとんど満足のいく方法で「うまくいく」という事実と関係があると思います。&lt;/li&gt;
&lt;li&gt;ライブラリは現在幅広く使用されています。この記事の執筆時点で、Megaparsecに直接依存する&lt;a href=&#34;https://packdeps.haskellers.com/reverse/megaparsec&#34;&gt;Hackageのパッケージは146個&lt;/a&gt;あります。Megaparsecの上に構築することを選択した&lt;a href=&#34;https://hackage.haskell.org/package/replace-megaparsec&#34;&gt;新しい刺激的なライブラリ&lt;/a&gt;も現れました。&lt;a href=&#34;https://github.com/idris-lang/Idris-dev&#34;&gt;Idris&lt;/a&gt;や&lt;a href=&#34;https://github.com/dhall-lang/dhall-haskell&#34;&gt;Dhall&lt;/a&gt;などのプロジェクトでは、Megaparsecを使用してパースの問題を解決しています。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらはライブラリが枯れ、成熟したことを示しているので、動作しているものを壊さないようにしましょう。 とはいえ、常に改善の余地があります。&lt;/p&gt;
&lt;h2 id=&#34;nixによる品質保証&#34;&gt;Nixによる品質保証&lt;/h2&gt;
&lt;p&gt;バージョン8の作業を開始する前に、Nixを使用して品質保証を強化することにしました。 現在のMegaparsecに依存するプロジェクトの数を把握し、Nixを使用して&lt;a href=&#34;https://github.com/tweag/ormolu&#34;&gt;Ormolu&lt;/a&gt;のバグを発見したという成功体験から、依存パッケージによって引き起こされる破壊的変更、パフォーマンスの変更、およびバグのチェックにNixを用いることにしました。&lt;/p&gt;
&lt;p&gt;結果をMegaparsecのリポジトリにある&lt;a href=&#34;https://github.com/mrkkrp/megaparsec/blob/master/HACKING.md&#34;&gt;HACKING.md&lt;/a&gt;に文書化しました。 開発時のshellとは別に、Nix expressionは以下のターゲットグループを提供します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;base&lt;/code&gt; は &lt;code&gt;parser-combinators&lt;/code&gt; や &lt;code&gt;hspec-megaparsec&lt;/code&gt; などの密接に関連したパッケージとそのテストです。&lt;code&gt;nix-build -A base --no-out-link&lt;/code&gt; を実行することにより、開発者はこれらすべてをビルドし、テストすることができます。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deps&lt;/code&gt; は選択された依存関係のもとでビルドの破壊とテストスイートの失敗が起きないことを確認します。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;benches&lt;/code&gt; はベンチマークのコレクションです。これには、Megaparsecのマイクロベンチマークと、ライブラリが実際のタスクでどのように実行されるかを示すいくつかのパッケージが含まれます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらコマンドのそれぞれで、特定のパッケージまたはベンチマークに「ズームイン」できます。 たとえば、&lt;code&gt;nix-build -A benches.parsers-bench&lt;/code&gt; を実行して、&lt;code&gt;parsers-bench&lt;/code&gt; のベンチマークを確認できます。 要するに、ほとんどのパッケージは新しい変更でも引き続き動作し、修正が容易ではないものでも動作します。 実際、システムを使い続けるためには不備のあるパッケージにパッチを適用する必要があり、そのための&lt;a href=&#34;https://github.com/mrkkrp/megaparsec/tree/31b917b1297950c22925f9ee7f7a588834293103/nix/patches&#34;&gt;アップグレード用のパッチ&lt;/a&gt;も利用可能です。&lt;/p&gt;
&lt;p&gt;ロジックやパフォーマンスの低下は見つかりませんでした。&lt;/p&gt;
&lt;h2 id=&#34;パースエラー位置の制御&#34;&gt;パースエラー位置の制御&lt;/h2&gt;
&lt;p&gt;新機能について話しましょう。 プリミティブ &lt;code&gt;failure&lt;/code&gt; と &lt;code&gt;fancyFailure&lt;/code&gt; は &lt;code&gt;parseError&lt;/code&gt; に置き換わりました。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;parseError ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MonadParsec&lt;/span&gt; e s m &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ParseError&lt;/span&gt; s e &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m a&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 現在の &amp;#39;failure&amp;#39; と &amp;#39;fancyFailure&amp;#39; は普通の関数:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;failure&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;  ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MonadParsec&lt;/span&gt; e s m&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ErrorItem&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; s)) &lt;span class=&#34;co&#34;&gt;-- ^ 期待しないアイテム (あれば)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Set&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ErrorItem&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; s)) &lt;span class=&#34;co&#34;&gt;-- ^ 期待するアイテム&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m a&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34;&gt;&lt;/a&gt;failure us ps &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34;&gt;&lt;/a&gt;  o &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; getOffset&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34;&gt;&lt;/a&gt;  parseError (&lt;span class=&#34;dt&#34;&gt;TrivialError&lt;/span&gt; o us ps)&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34;&gt;&lt;/a&gt;fancyFailure&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;  ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MonadParsec&lt;/span&gt; e s m&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Set&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ErrorFancy&lt;/span&gt; e) &lt;span class=&#34;co&#34;&gt;-- ^ Fancy error components&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m a&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34;&gt;&lt;/a&gt;fancyFailure xs &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34;&gt;&lt;/a&gt;  o &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; getOffset&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34;&gt;&lt;/a&gt;  parseError (&lt;span class=&#34;dt&#34;&gt;FancyError&lt;/span&gt; o xs)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これはプリミティブの数を減らすという話ではありません (減らすことも良いことですが)。 &lt;code&gt;parseError&lt;/code&gt; の主な特徴は、パーサの状態から現在のオフセットを必要とすることなく、任意のオフセットでパースエラーを報告できることです。 これは、パースエラーにしたい位置を既に超えてしまっている場合でも、入力のその位置でパースエラーを作成したい場合に重要です。 これまでは、まず &lt;code&gt;getOffset&lt;/code&gt; を介して正しいオフセットを取得し、次にパースエラーを報告する直前に &lt;code&gt;setOffset&lt;/code&gt; でオフセットを設定することでしか達成できませんでした。 これは見苦しいだけでなく、エラーが発生しやすくなり、正しいオフセットの復元を忘れることがあります。 &lt;code&gt;mmark&lt;/code&gt;の&lt;a href=&#34;https://github.com/mmark-md/mmark/blob/8f5534d8068c2b7a139b893639ee5920bcaedd84/Text/MMark/Parser.hs#L787-L790&#34;&gt;実例&lt;/a&gt;を次に示します。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;  o&amp;#39; &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; getOffset&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;  setOffset o&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;  (void &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt; hidden &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt; string) &lt;span class=&#34;st&#34;&gt;&amp;quot;[]&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;-- ↑ これが失敗した場合、これをオフセット「o」で報告する必要があります&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;  setOffset (o&amp;#39; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここでは完全な状況を説明しませんが、&lt;code&gt;&#34;[]&#34;&lt;/code&gt;(&lt;code&gt;+ 2&lt;/code&gt;の部分)のパース後にオフセットの増分を考慮するのを忘れたため、このコードにはしばらくバグがあったと言えば十分でしょう。 次のように書けば、同じことをよりうまく表現できます。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;  region (setErrorOffset o) &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;    (void &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt; hidden &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt; string) &lt;span class=&#34;st&#34;&gt;&amp;quot;[]&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 備考&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;region ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MonadParsec&lt;/span&gt; e s m&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ParseError&lt;/span&gt; s e &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ParseError&lt;/span&gt; s e)&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt;     &lt;span class=&#34;co&#34;&gt;-- ^ &amp;#39;ParseError&amp;#39; の処理方法&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m a&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34;&gt;&lt;/a&gt;     &lt;span class=&#34;co&#34;&gt;-- ^ 処理を適用する「region」&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;region&lt;/code&gt;は&lt;code&gt;getOffset&lt;/code&gt; / &lt;code&gt;setOffset&lt;/code&gt; ハックと同じ目的で使用されます。 副作用として、エラーが起きた場合にはパースエラーを更新する関数によって現在のオフセットが変更されます。 &lt;code&gt;region&lt;/code&gt; は &lt;code&gt;parseError&lt;/code&gt; を使用して、古いハックを廃止できます。&lt;/p&gt;
&lt;pre class=&#34;haskel&#34;&gt;&lt;code&gt;region f m = do
  r &amp;lt;- observing m
  case r of
    Left err -&amp;gt; parseError (f err)
    Right x -&amp;gt; return x&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;いいね.&lt;/p&gt;
&lt;h2 id=&#34;マルチエラーパーサのより良いストーリー&#34;&gt;マルチエラーパーサのより良いストーリー&lt;/h2&gt;
&lt;p&gt;プロジェクトの最初期から、マルチエラーパーサをサポートする方向にゆっくりと動いていました。 バージョン7では、&lt;code&gt;ParseError&lt;/code&gt;の代わりに&lt;code&gt;ParseErrorBundle&lt;/code&gt;を返すようになりました。 マルチエラーをサポートするための準備はすべてが整っていましたが、複数のパースエラーを報告するための方法がまだ提供されていませんでした。&lt;/p&gt;
&lt;p&gt;マルチエラーパーサに求められる事前条件は、入力に問題のある部分をスキップして、正常であることがわかっている位置からパースを再開できることです。 この部分は、&lt;code&gt;withRecovery&lt;/code&gt;プリミティブ（Megaparsec 4.4.0以降で使用可能）を使用して実現されます。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- | @&amp;#39;withRecovery&amp;#39; r p@ は、パーサー @p@ が失敗した場合でも解析を続行できます。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- この場合、実際の &amp;#39;ParseError&amp;#39; を引数とする @r@ が呼び出されます。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- よくある使い方として、特定のオブジェクトのパースの失敗を意味する値を返すことで、&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- その入力の一部を消費し次のオブジェクトの開始位置に移動します。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;--&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- @r@ が失敗すると、元のエラーメッセージが &amp;#39;withRecovery&amp;#39; なしで報告されることに注意してください。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- パーサ @r@ を回復してもエラーメッセージに影響することはありません。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34;&gt;&lt;/a&gt;withRecovery&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;  ::&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ParseError&lt;/span&gt; s e &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m a) &lt;span class=&#34;co&#34;&gt;-- ^ 失敗の回復方法&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m a             &lt;span class=&#34;co&#34;&gt;-- ^ オリジナルのパーサ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m a             &lt;span class=&#34;co&#34;&gt;-- ^ 失敗から回復できるパーサ&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Megaparsec 8 までのユーザーは、成功と失敗の可能性を含む直和型になるように型&lt;code&gt;a&lt;/code&gt;を選択する必要がありました。 たとえば、&lt;code&gt;Either (ParseError s e) Result&lt;/code&gt; です。 パースエラーを収集し、後で表示する前に手動で&lt;code&gt;ParseErrorBundle&lt;/code&gt;に追加する必要がありました。 言うまでもなく、これらはすべて、ユーザーフレンドリーではない高度な使用例です。&lt;/p&gt;
&lt;p&gt;Megaparsec 8 は、遅延パースエラーのサポートを追加します。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- | 後で報告するために &amp;#39;ParseError&amp;#39;を登録します。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- このアクションはパースを終了せず、パースの最後に考慮される&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 「遅延」&amp;#39;ParseError&amp;#39;のコレクションに特定の「ParseError」を&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 追加する以外は効果がありません。 このコレクションが空の場合のみ、&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- パーサは成功します。 これは、複数のパースエラーを一度に報告する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 主な方法です。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;registerParseError ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MonadParsec&lt;/span&gt; e s m &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ParseError&lt;/span&gt; s e &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m ()&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- | &amp;#39;failure&amp;#39;に似ていますが、 遅延&amp;#39;ParseError&amp;#39;のためのものです。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34;&gt;&lt;/a&gt;registerFailure&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;  ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MonadParsec&lt;/span&gt; e s m&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ErrorItem&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; s)) &lt;span class=&#34;co&#34;&gt;-- ^ 期待しないアイテム (あれば)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Set&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ErrorItem&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; s)) &lt;span class=&#34;co&#34;&gt;-- ^ 期待するアイテム&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m ()&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- | &amp;#39;fancyFailure&amp;#39;に似ていますが、 遅延&amp;#39;ParseError&amp;#39;のためのものです。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34;&gt;&lt;/a&gt;registerFancyFailure&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;  ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MonadParsec&lt;/span&gt; e s m&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Set&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ErrorFancy&lt;/span&gt; e) &lt;span class=&#34;co&#34;&gt;-- ^ Fancy error components&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これらのエラーは &lt;code&gt;withRecovery&lt;/code&gt; のエラー処理コールバックに登録でき、結果の型は &lt;code&gt;Maybe Result&lt;/code&gt; になります。 これにより、遅延エラーが最終的な &lt;code&gt;ParseErrorBundle&lt;/code&gt; に含まれるようになり、遅延エラーのコレクションが空でない場合に パーサが最終的に失敗するようになります。&lt;/p&gt;
&lt;p&gt;以上のことから、マルチエラーパーサを書く習慣がユーザ間でより一般的になることを願っています。&lt;/p&gt;
&lt;h2 id=&#34;その他&#34;&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;いつものように、変更の完全なリストについては、&lt;a href=&#34;https://github.com/mrkkrp/megaparsec/blob/master/CHANGELOG.md&#34;&gt;chagelog&lt;/a&gt; を参照してください。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://markkarpov.com/megaparsec/megaparsec.html&#34;&gt;公式チュートリアル&lt;/a&gt;を含むすべてのテキストをバージョン8と互換性があるように更新しました。新しい機能の使用方法を説明するセクションを含めるように拡張しました。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hspec-megaparsec&lt;/code&gt; などのサテライトパッケージが更新され、バージョン8で動作するようになりました。&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><id>https://haskell.e-bigmoon.com/posts/2020/03-25-cabal-install.html</id><title type="text">cabal install コマンドについて</title><updated>April  3, 2020</updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2020/03-25-cabal-install.html"/><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stack install&lt;/code&gt; と全く同じ動作をする &lt;strong&gt;cabal&lt;/strong&gt; コマンドは &lt;code&gt;cabal install all:exes&lt;/code&gt; です。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;今回利用した &lt;strong&gt;cabal&lt;/strong&gt; と &lt;strong&gt;stack&lt;/strong&gt; のバージョンは以下の通りです。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal -V
cabal-install version 3.0.0.0
compiled using version 3.0.0.0 of the Cabal library 

$ stack --version
Version 2.1.3, Git revision 636e3a759d51127df2b62f90772def126cdf6d1f (7735 commits) x86_64 hpack-0.31.2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;この記事では &lt;code&gt;stack install&lt;/code&gt; コマンドと &lt;code&gt;cabal install&lt;/code&gt; コマンドの挙動の違いなどについて調査した結果等をまとめています。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&#34;プロジェクトの構成&#34;&gt;プロジェクトの構成&lt;/h2&gt;
&lt;p&gt;例えば、プロジェクトが以下のような構成になっていて、&lt;strong&gt;executable&lt;/strong&gt; (mainExe1, mainExe2, subExe1, subExe2) が定義されているとしましょう。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ tree .
.
├── app
│   ├── Main1.hs
│   └── Main2.hs
├── cabal.project
├── stack.yaml
├── subs
│   ├── pkg1
│   │   ├── app
│   │   │   └── Main.hs
│   │   └── pkg1.cabal
│   └── pkg2
│       ├── app
│       │   └── Main.hs
│       └── pkg2.cabal
└── app.cabal&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/e-bigmoon/haskell-blog/tree/master/sample-code/2020/03-25/&#34;&gt;プロジェクトのコード&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;stack-install-と-cabal-install-の違い&#34;&gt;stack install と cabal install の違い&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;　&lt;/th&gt;
&lt;th&gt;&lt;code&gt;stack install&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;cabal install&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;インストール方法&lt;/td&gt;
&lt;td&gt;コピー&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;シンボリックリンク&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;インストール先ディレクトリの指定オプション&lt;/td&gt;
&lt;td&gt;&lt;code&gt;local-bin-path&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--installdir&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;cabal-install&#34;&gt;cabal install&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cabal install&lt;/code&gt; に指定可能なコマンドをいくつか試してみて、実際に何がインストールされるか一覧にしました。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;コマンド&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;mainExe1&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;mainExe2&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;subExe1&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;subExe2&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install .&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install app&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install pkg1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install pkg2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install . pkg1 pkg2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install app pkg1 pkg2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install all&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;*注意点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install all:exes&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cabal install&lt;/code&gt; や &lt;code&gt;stack install .&lt;/code&gt; の挙動など、いくつか &lt;strong&gt;stack&lt;/strong&gt; と異なる場合があるので注意が必要です。&lt;/li&gt;
&lt;li&gt;注意点: 全てのパッケージに &lt;strong&gt;executable&lt;/strong&gt; が含まれている場合に限り実行可能です。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cabal install all&lt;/code&gt; で &lt;strong&gt;executable&lt;/strong&gt; が含まれていないパッケージがある場合は以下のようなエラーになります。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;cabal: Cannot build the executables in the package pkg2 because it does not
contain any executables. Check the .cabal file for the package and make sure
that it properly declares the components that you expect.&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stack install&lt;/code&gt; に相当するコマンドは &lt;code&gt;cabal install all:exes&lt;/code&gt; です。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;stack-install&#34;&gt;stack install&lt;/h3&gt;
&lt;p&gt;同様に &lt;code&gt;stack install&lt;/code&gt; も確認しました。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;コマンド&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;mainExe1&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;mainExe2&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;subExe1&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;subExe2&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install .&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install app&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install pkg1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install pkg2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install . pkg1 pkg2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install app pkg1 pkg2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install all&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install all:exes&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;エラー 1&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack install . pkg1 pkg2
The following errors occurred while parsing the build targets:
- The package pkg1 was specified in multiple, incompatible ways: . pkg1
- The package pkg2 was specified in multiple, incompatible ways: . pkg2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;エラー 2&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack install all
Error: While constructing the build plan, the following exceptions were encountered:
Unknown package: all
Some different approaches to resolving this:
Plan construction failed.&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;その他の指定方法&#34;&gt;その他の指定方法&lt;/h3&gt;
&lt;h4 id=&#34;cabal&#34;&gt;cabal&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;コマンド&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;mainExe1&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;mainExe2&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install app:exe&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install app:exes&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install app:exe:mainExe1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install app:exe:mainExe2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install app:mainExe1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install app:mainExe2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install exes&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install exe:mainExe1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install exe:mainExe2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install mainExe1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;cabal install mainExe2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;エラー1&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal install app:exe
cabal: Unknown target &amp;#39;app:exe&amp;#39;.
The package app has no component &amp;#39;exe&amp;#39;.&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;stack&#34;&gt;stack&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;コマンド&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;mainExe1&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;code&gt;mainExe2&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install app:exe&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install app:exes&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install app:exe:mainExe1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install app:exe:mainExe2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install app:mainExe1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install app:mainExe2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install exes&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install exe:mainExe1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install exe:mainExe2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install mainExe1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;stack install mainExe2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/td&gt;
&lt;td&gt;*エラー3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;エラー1&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack install app:exe
Error parsing targets: Component exe does not exist in package app&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;エラー2&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack install exe:mainExe1
Error parsing targets: Unknown local package: exe&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;エラー3&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ stack install mainExe1
Error: While constructing the build plan, the following exceptions were encountered:
Unknown package: mainExe1
Some different approaches to resolving this:
Plan construction failed.&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;cabal-install-で良く使うオプション&#34;&gt;cabal install で良く使うオプション&lt;/h2&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 47%&#34; /&gt;
&lt;col style=&#34;width: 52%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;オプション&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;--installdir=&amp;lt;path&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;インストール先のパスを指定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;--install-method=copy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;シンボリックリンクではなく、実体がコピーされる。&lt;br&gt;&lt;strong&gt;Docker&lt;/strong&gt; にバイナリをコピーする際や &lt;strong&gt;Windows&lt;/strong&gt; 環境などで利用することがあります。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;--overwrite-policy=always&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;すでに実行ファイルが存在する場合でも、常に上書きします。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;--overwrite-policy=always&lt;/code&gt; を毎回指定するのが面倒な場合は&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal user-config update -a overwrite-policy:always&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;というコマンドで &lt;code&gt;~/.cabal/config&lt;/code&gt; に設定できます。&lt;/p&gt;
&lt;h2 id=&#34;で変更になる点など&#34;&gt;3.2.0.0 で変更になる点など&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/pull/6519/files&#34;&gt;Copy on windows #6519&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt; 環境において &lt;code&gt;cabal install&lt;/code&gt; の際のデフォルトの挙動が変更されます。シンボリックリンクが作成できない場合は自動的にコピーになります。&lt;/p&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/pull/6428&#34;&gt;Implement cabal install -z #6428&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ローカルのプロジェクト設定を無視するオプション &lt;code&gt;-z&lt;/code&gt;, &lt;code&gt;--ignore-project&lt;/code&gt; が追加されます。&lt;/p&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/pull/6576&#34;&gt;Resolve #6369 and #6393: Allow cabal v2-install pkgname:exename or http://example.com/package.tar.gz(#sha256=abcde…) #6576&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal install &amp;#39;https://hackage.haskell.org/package/cabal-fmt-0.1.2/cabal-fmt-0.1.2.tar.gz#sha256=aae556efbcaddfd65c6a1c1811b122b0d8c8d00624c8c2e36aabb5e9f9ea9840&amp;#39;&lt;/code&gt;&lt;/pre&gt;</summary></entry><entry><id>http://kurokawh.blogspot.com/2019/11/mac-mojava.html</id><title type="text">[mac] Mojavaクリーンインストール</title><updated>2020-05-04T13:04:37.067+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2019/11/mac-mojava.html"/><summary type="text">Mojavaへのアップデートを契機にmac book airを初期化して環境をクリーンセットアップしました。
自分にとって使いやすい環境の設定手順および、インストールしたアプリ群の情報をメモがわりに残しておきます。



システム環境設定

トラックパッド

軌跡の速さを速くする 
「スクロールとズーム」内の「スクロールの方向」を「ナチュラル」にする
「その他のジェスチャー」内の全てのチェックを外す

アクセシビリティ

マウスとトラックパッド

トラックパッドオプション

「ドラッグを有効にする」にチェック

→ダブルタップでドラッグできるようになる

「ドラッグロックなし」を選択

→トラックパッドから手を離すとドラッグ解除





キーボード

F1, F2などのキーを標準のファンクションキーとして利用する：チェック

Dock

 最近使ったアプリケーションをDock に追加</summary></entry><entry><id>https://matsubara0507.github.io/posts/2020-04-20-servant-with-slack-verifying-requests.html</id><title type="text">Haskell Servant で Slack からの署名付きリクエストを受ける</title><updated>2020-04-20T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2020-04-20-servant-with-slack-verifying-requests.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;Slack のスラッシュコマンドなどで利用される署名付きリクエストを Haskell Servant で受ける方法を考えて実装しました． 実装は slackell という Haskell の Slack API パッケージにしてあります：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsubara0507/slackell&#34;&gt;matsubara0507/slackell - GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsubara0507/slackell/pull/1&#34;&gt;該当 PR はこれです&lt;/a&gt;．&lt;/p&gt;
&lt;h2 id=&#34;署名付きリクエスト&#34;&gt;署名付きリクエスト&lt;/h2&gt;
&lt;p&gt;スラッシュコマンドなどで Slack からのリクエストを受け取るときに，そのリクエストが本当に該当のスラッシュコマンドから送られてきた正しいリクエストかを検証するには，リクエストパラメーターとして送られてきた検証トークンを確認していた． しかし，この方法は現在では非推奨になっており，代わりにリクエストヘッダーに付いている署名を確認する． 公式ドキュメントは以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://api.slack.com/authentication/verifying-requests-from-slack&#34;&gt;Verifying requests from Slack | Slack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;署名は &lt;code&gt;X-Slack-Signature&lt;/code&gt; というヘッダーに &lt;code&gt;v0=&lt;/code&gt; というプレフィックス付きで含まれている． このリクエストを受け取ったアプリケーション側は以下の方法で署名をエンコードして比較することで，そのリクエストの正当性を保証する：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;code&gt;X-Slack-Request-Timestamp&lt;/code&gt; リクエストヘッダーに含まれているタイムスタンプを読む&lt;/li&gt;
&lt;li&gt;バージョン番号・1のタイムスタンプ・リクエストボディの3つを &lt;code&gt;:&lt;/code&gt; 区切りで連結する
&lt;ul&gt;
&lt;li&gt;e.g. &lt;code&gt;v0:123456789:command=/weather&amp;amp;text=94070&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;バージョン番号は今のところ全て &lt;code&gt;v0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2の文字列を Slack Apps で取得できる &lt;code&gt;Signing Secret&lt;/code&gt; を使って HMAC SHA256 でエンコード&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;haskellでエンコードする&#34;&gt;Haskellでエンコードする&lt;/h3&gt;
&lt;p&gt;このアルゴリズムを Haskell プログラムで実装する． HMAC SHA256 エンコードには &lt;a href=&#34;https://hackage.haskell.org/package/cryptonite&#34;&gt;cryptonite&lt;/a&gt; パッケージを使った． 2と3の部分を行って署名をエンコードする関数は以下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Web.Slack.Verify&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Crypto.Hash&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Digest&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;SHA256&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Crypto.MAC.HMAC&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;HMAC&lt;/span&gt; (..), hmac)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;newtype&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SigningSecret&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SigningSecret&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;deriving&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;IsString&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;RequestTimestamp&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- | シークレット・タイムスタンプ・リクエストボディは引数でもらう&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;encodeSignature ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SigningSecret&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;RequestTimestamp&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Digest&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SHA256&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34;&gt;&lt;/a&gt;encodeSignature (&lt;span class=&#34;dt&#34;&gt;SigningSecret&lt;/span&gt; secret) ts body &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34;&gt;&lt;/a&gt;  hmacGetDigest &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; hmac (Text.encodeUtf8 secret) basestr&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34;&gt;&lt;/a&gt;    basestr &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; BS.intercalate &lt;span class=&#34;st&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt; [Text.encodeUtf8 version, Text.encodeUtf8 ts, body]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最終的な型が &lt;code&gt;Digest SHA256&lt;/code&gt; なので，ヘッダーの方の署名と比較しやすいように文字列からの変換関数も用意しておく：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Crypto.Hash&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Digest&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;SHA256&lt;/span&gt;, digestFromByteString)&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Data.ByteArray.Encoding&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Base&lt;/span&gt; (..), convertFromBase)&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SignatureHeader&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;convertSignatureHeader ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SignatureHeader&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Digest&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SHA256&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;convertSignatureHeader sign &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;either&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;) digestFromByteString bs&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;    (_, sign&amp;#39;) &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; Text.breakOnEnd (version &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;=&amp;quot;&lt;/span&gt;) sign&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;    bs &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; convertFromBase &lt;span class=&#34;dt&#34;&gt;Base16&lt;/span&gt; (Text.encodeUtf8 sign&amp;#39;)&lt;span class=&#34;ot&#34;&gt; ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Either&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;version ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34;&gt;&lt;/a&gt;version &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;v0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここで注意しなければいけないのが &lt;code&gt;digestFromByteString&lt;/code&gt; 関数に食わせる &lt;code&gt;ByteString&lt;/code&gt; 型の値は， &lt;code&gt;memory&lt;/code&gt; パッケージの関数を利用して16進数表現から直す必要がある．&lt;/p&gt;
&lt;h2 id=&#34;slash-command-を受け取る&#34;&gt;Slash Command を受け取る&lt;/h2&gt;
&lt;p&gt;署名をエンコードする関数はできたので，あとは Servant でスラッシュコマンドを受け取る方法を考える． まずはスラッシュコマンドから送られてくるリクエストボディの型を宣言しておこう：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Web.Slack.SlashCommand&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Data.Extensible&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;RequestData&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Record&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;  &amp;#39;[ &lt;span class=&#34;st&#34;&gt;&amp;quot;token&amp;quot;&lt;/span&gt;           &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;command&amp;quot;&lt;/span&gt;         &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;            &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;response_url&amp;quot;&lt;/span&gt;    &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;trigger_id&amp;quot;&lt;/span&gt;      &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;user_id&amp;quot;&lt;/span&gt;         &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;user_name&amp;quot;&lt;/span&gt;       &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;team_id&amp;quot;&lt;/span&gt;         &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;team_domain&amp;quot;&lt;/span&gt;     &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;channel_id&amp;quot;&lt;/span&gt;      &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;channel_name&amp;quot;&lt;/span&gt;    &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;enterprise_id&amp;quot;&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34;&gt;&lt;/a&gt;   , &lt;span class=&#34;st&#34;&gt;&amp;quot;enterprise_name&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34;&gt;&lt;/a&gt;   ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正直，これを調べるのも大変だった． 公式ドキュメントにはどんなパラメータがあるか割愛されてる部分があるからだ．&lt;/p&gt;
&lt;p&gt;で，API の型は雰囲気としてはこんな感じ：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- Web.Slack は slackell&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;qualified&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Web.Slack.Verify&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Slack&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;qualified&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Web.Slack.SlashCommand&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SlashCmd&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;API&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;slash&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ReqBody&lt;/span&gt; &amp;#39;[&lt;span class=&#34;dt&#34;&gt;FormUrlEncoded&lt;/span&gt;] &lt;span class=&#34;dt&#34;&gt;RequestData&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Header&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;X-Slack-Request-Timestamp&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Slack.RequestTimestamp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Header&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;X-Slack-Signature&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Slack.SignatureHeader&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Post&lt;/span&gt; &amp;#39;[&lt;span class=&#34;dt&#34;&gt;JSON&lt;/span&gt;] &lt;span class=&#34;dt&#34;&gt;NoContent&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここで問題が1つ． 署名をエンコードするのに必要なのはデータ型 &lt;code&gt;SlachCmd.RequestData&lt;/code&gt; に変換される前の文字列だ． &lt;code&gt;ToForm&lt;/code&gt; 型クラスを使って元の形（&lt;code&gt;=&lt;/code&gt; と &lt;code&gt;&amp;amp;&lt;/code&gt; で連結するやつ）に戻せば良いと思うかも知れないが，これだと key の順番が変わってしまう可能性があり，順番が変わると別のエンコード結果になってしまう． 逆に文字列のまんま受け取れば良いかと思うかも知れないが，Servant は正しい ContentType な型を指定しないと 400 を返してしまう（スラッシュコマンドは &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; でリクエストしてくる）． 困った． 色々調べたが，後から素のリクエストボディを取得する方法がわからなかった…&lt;/p&gt;
&lt;h3 id=&#34;contenttypeを自作する&#34;&gt;ContentTypeを自作する&lt;/h3&gt;
&lt;p&gt;まぁ無いなら自作するしかない． 素の文字列を返してくれて &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; メディアタイプを表している ContentType な型を作る． どのメディアタイプかは &lt;code&gt;Accept&lt;/code&gt; 型クラスで定義し，どの型で返してくれるかは &lt;code&gt;MimeUnrender&lt;/code&gt; 型クラスで定義する：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Web.Slack.SlashCommand&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;RequestData&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SlashCommand&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Accept&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SlashCommand&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;  contentType ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Proxy&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SlashCommand&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MediaType&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34;&gt;&lt;/a&gt;  contentType _ &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;application&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;M.//&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x-www-form-urlencoded&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MimeUnrender&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SlashCommand&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;RequestData&lt;/span&gt;) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;  mimeUnrender ::&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Proxy&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SlashCommand&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Lazy.ByteString&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Either&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;RequestData&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34;&gt;&lt;/a&gt;  mimeUnrender _ bs &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; Text.unpack &lt;span class=&#34;op&#34;&gt;+++&lt;/span&gt; (bs,) &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; urlDecodeAsForm bs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;どーせ後から &lt;code&gt;RequestData&lt;/code&gt; 型に変換するので両方を返すことにした． あとはこれを使うだけ：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- Web.Slack は slackell&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;qualified&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Web.Slack.Verify&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Slack&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;qualified&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Web.Slack.SlashCommand&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SlashCmd&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt;           &lt;span class=&#34;dt&#34;&gt;Web.Slack.SlashCommand&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;SlashCommand&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;API&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;slash&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ReqBody&lt;/span&gt; &amp;#39;[&lt;span class=&#34;dt&#34;&gt;SlashCommand&lt;/span&gt;] &lt;span class=&#34;dt&#34;&gt;RequestData&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Header&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;X-Slack-Request-Timestamp&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Slack.RequestTimestamp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Header&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;X-Slack-Signature&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Slack.SignatureHeader&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Post&lt;/span&gt; &amp;#39;[&lt;span class=&#34;dt&#34;&gt;JSON&lt;/span&gt;] &lt;span class=&#34;dt&#34;&gt;NoContent&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;apiの実装&#34;&gt;APIの実装&lt;/h3&gt;
&lt;p&gt;残りは今までのを使うだけなので簡単：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;server ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Slack.SigningSecret&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Server&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;API&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;server secret &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; slashCommand&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;    slashCommand (lbs, body) (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; ts) (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; sign) &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt; digest &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; Slack.encodeSignature secret ts (LBS.toStrict lbs) &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kw&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; digest &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; Slack.convertSignatureHeader sign &lt;span class=&#34;kw&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34;&gt;&lt;/a&gt;        liftIO &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34;&gt;&lt;/a&gt;          _ &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; forkIO &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; action body &lt;span class=&#34;co&#34;&gt;-- タイムアウトがあるので処理自体は fork する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;fu&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;NoContent&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kw&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34;&gt;&lt;/a&gt;        throwError err401&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34;&gt;&lt;/a&gt;    slashCommand _ _ _ &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; throwError err401&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;    action ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SlashCmd.RequestData&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34;&gt;&lt;/a&gt;    action body &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;おまけfromformインスタンス&#34;&gt;おまけ：FromFormインスタンス&lt;/h2&gt;
&lt;p&gt;実はこれだkではビルドが通らない． というのも，拡張可能データ型の &lt;code&gt;FromForm&lt;/code&gt; 型クラスインスタンスが無いからだ． しょうがないので自作した：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Web.FormUrlEncoded&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;FromForm&lt;/span&gt; (..))&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Web.HttpApiData&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;FromHttpApiData&lt;/span&gt; (..), parseUnique)&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Forall&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;KeyTargetAre&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;KnownSymbol&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromFormData&lt;/span&gt;) xs &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromForm&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Record&lt;/span&gt; xs) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34;&gt;&lt;/a&gt;  fromForm form &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34;&gt;&lt;/a&gt;    hgenerateFor (&lt;span class=&#34;dt&#34;&gt;Proxy&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;@&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;KeyTargetAre&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;KnownSymbol&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromFormData&lt;/span&gt;)) &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; \m &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;dt&#34;&gt;Field&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;$&amp;gt;&lt;/span&gt; parseUnique (stringKeyOf m) form&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- Identity のインスタンスぐらい宣言しておいてよ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromHttpApiData&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromHttpApiData&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Identity&lt;/span&gt; a) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34;&gt;&lt;/a&gt;  parseUrlPiece &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;fmap&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt; parseUrlPiece&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これの欠点が1つ． &lt;code&gt;parseUnique&lt;/code&gt; 関数の &lt;code&gt;Maybe a&lt;/code&gt; 型に関する振る舞いだ． &lt;code&gt;Maybe a&lt;/code&gt; 型なら該当の key が含まれなければ &lt;code&gt;Nothing&lt;/code&gt; で key があれば &lt;code&gt;Just v&lt;/code&gt; になって欲しい． しかし実際はこうだ：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; parseUnique &lt;span class=&#34;st&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt; [(&lt;span class=&#34;st&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Just 25&amp;quot;&lt;/span&gt;)]&lt;span class=&#34;ot&#34;&gt; ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Either&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Right&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;現実のリクエストが &lt;code&gt;&amp;quot;Just hoge&amp;quot;&lt;/code&gt; なんて送ってくるわけが無い！ しょうがないので自作した：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromFormData&lt;/span&gt; a &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;  parseUnique&amp;#39; ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Form&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Either&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt; a&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromFormData&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;   &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt; parseUnique&amp;#39; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; parseUnique&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromFormData&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt; parseUnique&amp;#39; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; parseUnique&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromFormData&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Bool&lt;/span&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt; parseUnique&amp;#39; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; parseUnique&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromFormData&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Char&lt;/span&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt; parseUnique&amp;#39; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; parseUnique&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromFormData&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text&lt;/span&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt; parseUnique&amp;#39; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; parseUnique&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromHttpApiData&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FromFormData&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; a) &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34;&gt;&lt;/a&gt;  parseUnique&amp;#39; key form &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34;&gt;&lt;/a&gt;    mv &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; lookupMaybe key form&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; mv &lt;span class=&#34;kw&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; v  &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;$&amp;gt;&lt;/span&gt; parseQueryParam v&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で，&lt;code&gt;parseUnique&lt;/code&gt; の代わりに &lt;code&gt;parseUnique&amp;#39;&lt;/code&gt; を使うように &lt;code&gt;FromForm&lt;/code&gt; 型クラスのインスタンスを書き換えるだけだ． これは汎用的なので&lt;a href=&#34;https://github.com/matsubara0507/extensible-ext/tree/master/extensible-http-api-data&#34;&gt;別のリポジトリに切り分けた&lt;/a&gt;．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsubara0507/slackell/tree/master/example&#34;&gt;サンプルコード&lt;/a&gt;を作ってスラッシュコマンドのデバッグをしたが，間にちゃんとリクエスト・レスポンスをロギングする仕組みを省いたせいで超大変だった笑．&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>https://matsubara0507.github.io/posts/2020-04-06-servant-auth-with-github-apps.html</id><title type="text">Haskell Servant に GitHub Apps による認証を追加する</title><updated>2020-04-06T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2020-04-06-servant-auth-with-github-apps.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;時々みる「GitHubでログイン」っぽいのを Servant 製サンプルアプリケーションに実装します．&lt;/p&gt;
&lt;p&gt;サンプルアプリケーションは2年前に書いた「&lt;a href=&#34;/posts/2017-09-17-create-haskell-and-elm.html&#34;&gt;Haskell × Elm のサンプルアプリケーションを書いてみた&lt;/a&gt;」という記事のものを，最近の GHC や Elm でリファクタリングして使います． これは簡単な ToDo アプリケーションです：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/create-haskell-and-elm/sample.jpg&#34;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;最終的な実装 PR は&lt;a href=&#34;https://github.com/matsubara0507/haskell-and-elm/pull/2&#34;&gt;これ&lt;/a&gt;．&lt;/p&gt;
&lt;h2 id=&#34;github-apps-による認証&#34;&gt;GitHub Apps による認証&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps&#34;&gt;公式ドキュメント&lt;/a&gt;より&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;GitHub で Apps を登録する
&lt;ul&gt;
&lt;li&gt;Client ID・Client Secret を取得&lt;/li&gt;
&lt;li&gt;callback URL を設定&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ログインする際に &lt;code&gt;https://github.com/login/oauth/authorize?cleint_id=[cleint_id]&lt;/code&gt; へリダイレクトさせる
&lt;ul&gt;
&lt;li&gt;(1)の App の使用を許可するかという画面へ飛ぶ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;許可すると(1)で設定した callback エンドポイントが叩かれる
&lt;ul&gt;
&lt;li&gt;code というリクエストパラメータがついてくる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Client ID・Client Secret と(3)の code を使うことで bearer token が手に入る
&lt;ul&gt;
&lt;li&gt;このトークンを利用することで GitHub ユーザーの情報を取得したりできる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;(4)を利用して取得した GitHub アカウント名などを Cookie に積んでおく&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;あとは (5) の Cookie の有無によってログイン済みかどうかを判断するだけ（まぁこれは GitHub App とか関係ないよくあるやり方）． つまり問題は Servant でどうやってログイン情報などを Cookie に載せるかということだ．&lt;/p&gt;
&lt;h2 id=&#34;servant-で認証機能&#34;&gt;Servant で認証機能&lt;/h2&gt;
&lt;p&gt;を作るには &lt;a href=&#34;https://hackage.haskell.org/package/servant-auth-server&#34;&gt;servant-auth-server&lt;/a&gt; という Servant 公式のパッケージを使えば良いようだ． 詳しくは以下の公式ドキュメントを読むと良い：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.servant.dev/en/stable/tutorial/Authentication.html&#34;&gt;Authentication in Servant — Servant documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;servant-auth-server を利用することで，JWT エンコードした認証情報を Cookie として保存したり，その Cookie の有無によって認証済みかどうかチェックしたりなどができる． 公式ドキュメント以外に特に利用の仕方を解説した記事とか見当たらなくて，結局実装コード読んだり，servant-auth-server パッケージを使ってるリポジトリを GitHub で検索したりして手探りで実装していった．&lt;/p&gt;
&lt;h3 id=&#34;api-の型&#34;&gt;API の型&lt;/h3&gt;
&lt;p&gt;元々はこんな感じ：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;qualified&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Text.Blaze.Html5&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;H&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt;           &lt;span class=&#34;dt&#34;&gt;Servant.HTML.Blaze&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;HTML&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;API&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Get&lt;/span&gt; &amp;#39;[&lt;span class=&#34;dt&#34;&gt;HTML&lt;/span&gt;] &lt;span class=&#34;dt&#34;&gt;H.Html&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;static&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Raw&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;:&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;api&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Todo.CRUD&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これに認証機能を追加する：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;API&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Auth&lt;/span&gt; &amp;#39;[&lt;span class=&#34;dt&#34;&gt;Cookie&lt;/span&gt;] &lt;span class=&#34;dt&#34;&gt;GitHub.User&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Protected&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;:&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Unprotected&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Protected&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;api&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Todo.CRUD&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Unprotected&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Get&lt;/span&gt; &amp;#39;[&lt;span class=&#34;dt&#34;&gt;HTML&lt;/span&gt;] &lt;span class=&#34;dt&#34;&gt;H.Html&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;   &lt;span class=&#34;op&#34;&gt;:&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;static&amp;quot;&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Raw&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;   &lt;span class=&#34;op&#34;&gt;:&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;login&amp;quot;&lt;/span&gt;    &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GetRedirected&lt;/span&gt; &amp;#39;[]&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;   &lt;span class=&#34;op&#34;&gt;:&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;callback&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;QueryParam&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GetRedirected&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;JWTCookieHeaders&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GetRedirected&lt;/span&gt; headers &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;Verb&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;&amp;#39;GET&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;308&lt;/span&gt; &amp;#39;[&lt;span class=&#34;dt&#34;&gt;HTML&lt;/span&gt;] (&lt;span class=&#34;dt&#34;&gt;Headers&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Header&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Location&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &amp;#39;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; headers) &lt;span class=&#34;dt&#34;&gt;NoContent&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;JWTCookieHeaders&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34;&gt;&lt;/a&gt;  &amp;#39;[ &lt;span class=&#34;dt&#34;&gt;Header&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Set-Cookie&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SetCookie&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;Header&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Set-Cookie&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SetCookie&lt;/span&gt; ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Protected&lt;/code&gt; と &lt;code&gt;Unprotected&lt;/code&gt; 型のように，認証済みの場合だけ利用可能なエンドポイントとそうでないエンドポイントを分けると良いようだ． 今回は &lt;code&gt;/index.html&lt;/code&gt; を認証の外にしたが，別に中にしてもいいと思う． 認証側に &lt;code&gt;Auth &amp;#39;[Cookie] a&lt;/code&gt; を追加することで JWT エンコードされた Cookie の有無で認証済みかを判断し，Cookie があればそれを &lt;code&gt;a&lt;/code&gt; 型へデコードしてくれる． Cookie の付与自体は callback エンドポイントで行う． ちなみに，&lt;code&gt;Set-Cookie&lt;/code&gt; が2つあるのは，1つを CRSF Protection に使うためだ（CRSF Protection については後述）．&lt;/p&gt;
&lt;h3 id=&#34;cookie-と-jwt-の設定&#34;&gt;Cookie と JWT の設定&lt;/h3&gt;
&lt;p&gt;また，Cookie や JWT の設定は Servant の Context 機能で渡す必要がある：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;main ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;main &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;  todoDB       &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; STM.atomically &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; STM.newTVar initTodoDB&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;  clientId     &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; getEnv &lt;span class=&#34;st&#34;&gt;&amp;quot;GITHUB_CLIENT_ID&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;  clientSecret &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; getEnv &lt;span class=&#34;st&#34;&gt;&amp;quot;GITHUB_CLIENT_SECRET&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;  jwtSettings  &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; defaultJWTSettings &lt;span class=&#34;op&#34;&gt;&amp;lt;$&amp;gt;&lt;/span&gt; generateKey&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt; cfg   &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; cookieSettings &lt;span class=&#34;op&#34;&gt;:.&lt;/span&gt; jwtSettings &lt;span class=&#34;op&#34;&gt;:.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;EmptyContext&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt;      oauth &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;client_id &lt;span class=&#34;op&#34;&gt;@=&lt;/span&gt; clientId &lt;span class=&#34;op&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;client_secret &lt;span class=&#34;op&#34;&gt;@=&lt;/span&gt; clientSecret &lt;span class=&#34;op&#34;&gt;&amp;lt;:&lt;/span&gt; nil&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34;&gt;&lt;/a&gt;      env   &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;index  &lt;span class=&#34;op&#34;&gt;@=&lt;/span&gt; indexHtml&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34;&gt;&lt;/a&gt;           &lt;span class=&#34;op&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;cookie &lt;span class=&#34;op&#34;&gt;@=&lt;/span&gt; cookieSettings&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34;&gt;&lt;/a&gt;           &lt;span class=&#34;op&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;jwt    &lt;span class=&#34;op&#34;&gt;@=&lt;/span&gt; jwtSettings&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34;&gt;&lt;/a&gt;           &lt;span class=&#34;op&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;todos  &lt;span class=&#34;op&#34;&gt;@=&lt;/span&gt; todoDB&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34;&gt;&lt;/a&gt;           &lt;span class=&#34;op&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;oauth  &lt;span class=&#34;op&#34;&gt;@=&lt;/span&gt; oauth&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34;&gt;&lt;/a&gt;           &lt;span class=&#34;op&#34;&gt;&amp;lt;:&lt;/span&gt; nil&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34;&gt;&lt;/a&gt;  Warp.run &lt;span class=&#34;dv&#34;&gt;8080&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; serveWithContext api cfg (server env)&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34;&gt;&lt;/a&gt;  initTodoDB &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt; initTodos, IntMap.fromList initTodos)&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34;&gt;&lt;/a&gt;  cookieSettings &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; defaultCookieSettings&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34;&gt;&lt;/a&gt;    { cookieIsSecure &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;NotSecure&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34;&gt;&lt;/a&gt;    , cookieMaxAge &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; Time.secondsToDiffTime (&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;60&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34;&gt;&lt;/a&gt;    , cookieXsrfSetting &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;api ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Proxy&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;API&lt;/span&gt; &amp;#39;[&lt;span class=&#34;dt&#34;&gt;Cookie&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34;&gt;&lt;/a&gt;api &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Proxy&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;それぞれの設定は servant-auth-server の &lt;code&gt;defaultCookieSettings&lt;/code&gt; と &lt;code&gt;defaultJWTSettings&lt;/code&gt; を利用すれば良い．&lt;/p&gt;
&lt;p&gt;今回は localhost で利用するようにしてるので &lt;code&gt;cookieIsSecure&lt;/code&gt; に &lt;code&gt;NotSecure&lt;/code&gt; を設定してる（これで HttpOnly になる）が，普通は &lt;code&gt;Secure&lt;/code&gt; のままで良い． &lt;code&gt;cookieXsrfSetting&lt;/code&gt; は前述した CSRF Protection の設定で，デフォルトではオンになっている． オンの場合は Cookie に設定された CSRF Protection 用のトークンをヘッダーに設定してリクエストしないと，Protected な API は弾かれるようになる（Cookie 名は cookieXsrfSetting で設定する）． ちなみに，GET リクエストは CSRF Protection しないという設定も可能だ．&lt;/p&gt;
&lt;p&gt;JWT の設定にはエンコードするための鍵を渡す必要がある． 今回は servant-auth-server の &lt;code&gt;generateKey&lt;/code&gt; 関数を利用している． これは（少なくともバージョン0.4.5.1では）256長の対称鍵（HS256）をランダムに生成してくれる． ランダムに生成したものを利用してるので，起動するたびに Cookie の情報が変わってしまう点に注意． もし，JWTのアルゴリズムや鍵を別のものにしたい場合は &lt;a href=&#34;http://hackage.haskell.org/package/jose&#34;&gt;jose パッケージ&lt;/a&gt; を利用すれば良いはずだ．&lt;/p&gt;
&lt;h1 id=&#34;section&#34;&gt;&lt;/h1&gt;
&lt;p&gt;余談だが，Cookie にある JWT のデコードは Servant Context の設定を利用するが，Cookie に積むときはエンドポイントの最後でエンコードをするので，同一の設定をエンドポイントまで橋渡しをしないといけない（ぼくは他方がデフォルトのままになってるのに気付かず3時間溶かした…）．&lt;/p&gt;
&lt;h3 id=&#34;protected-なエンドポイント&#34;&gt;Protected なエンドポイント&lt;/h3&gt;
&lt;p&gt;こんな感じ：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;protected ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Env&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;AuthResult&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub.User&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Server&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Protected&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;protected env (&lt;span class=&#34;dt&#34;&gt;Authenticated&lt;/span&gt; _) &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; todoAPI (env &lt;span class=&#34;op&#34;&gt;^.&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;todos)&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;protected _ _                   &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; throwAll err401&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;今回はアカウントによってレスポンスの出しわけをしてないので，&lt;code&gt;Authenticated&lt;/code&gt; かどうかだけをみている．&lt;/p&gt;
&lt;h3 id=&#34;ログインエンドポイント&#34;&gt;ログインエンドポイント&lt;/h3&gt;
&lt;p&gt;ログインエンドポイントはただ GitHub の該当 URL へリダイレクトするだけ：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;unprotected ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Env&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Server&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Unprotected&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;unprotected env &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;pure&lt;/span&gt; (env &lt;span class=&#34;op&#34;&gt;^.&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;index) &lt;span class=&#34;op&#34;&gt;:&amp;lt;|&amp;gt;&lt;/span&gt; serveDirectoryFileServer &lt;span class=&#34;st&#34;&gt;&amp;quot;static&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&amp;lt;|&amp;gt;&lt;/span&gt; login &lt;span class=&#34;op&#34;&gt;:&amp;lt;|&amp;gt;&lt;/span&gt; callback&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;    login &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; addHeader (GitHub.authorizeUrl &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; env &lt;span class=&#34;op&#34;&gt;^.&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;oauth) &lt;span class=&#34;dt&#34;&gt;NoContent&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34;&gt;&lt;/a&gt;    callback &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;undefined&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- GitHub module&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;authorizeUrl ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;OAuthSettings&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;OAuthSettings&lt;/code&gt; は GitHub App の Client ID と Client Secret が保存されている．&lt;/p&gt;
&lt;h3 id=&#34;callback-エンドポイント&#34;&gt;callback エンドポイント&lt;/h3&gt;
&lt;p&gt;最後は callback で，JWT エンコードした認証情報を Cookie に保存すれば良い：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;unprotected ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Env&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Server&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Unprotected&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;unprotected env &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;    login &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;    callback (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; code) &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; GitHub.fetchUser (env &lt;span class=&#34;op&#34;&gt;^.&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;oauth) code &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \&lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;   &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; throwError err401&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; user &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; liftIO (acceptLogin (env &lt;span class=&#34;op&#34;&gt;^.&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;cookie) (env &lt;span class=&#34;op&#34;&gt;^.&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;#&lt;/span&gt;jwt) user) &lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \&lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;           &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; throwError err401&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; applyCookies &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; addHeader &lt;span class=&#34;st&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt; (applyCookies &lt;span class=&#34;dt&#34;&gt;NoContent&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- GitHub module&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;fetchUser ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MonadIO&lt;/span&gt; m &lt;span class=&#34;ot&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;OAuthSettings&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; m (&lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;認証情報には GitHub のユーザー情報を利用しており，callback で渡された &lt;code&gt;code&lt;/code&gt; パラメーターを利用して（取得したトークンを利用して）取得する． 認証情報を JWT エンコードして Cookie に埋め込む処理は servant-auth-servar パッケージの &lt;code&gt;acceptLogin&lt;/code&gt; 関数を使うだけで良い．&lt;/p&gt;
&lt;h1 id=&#34;section-1&#34;&gt;&lt;/h1&gt;
&lt;p&gt;これで API 側の準備はできた． あとはフロントを少しいじって出来上がり．&lt;/p&gt;
&lt;h2 id=&#34;フロントにログインボタンを作る&#34;&gt;フロントにログインボタンを作る&lt;/h2&gt;
&lt;p&gt;認証状態を使ってイロイロと出し分けたほうがいいのだが，めんどくさいのでただ &lt;code&gt;/login&lt;/code&gt; へのリンクをおいた：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;my-3 mx-auto col-10&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;h1&lt;/span&gt; [] [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;ToDo List !!&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;loginButton&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;viewToDos&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;viewPost&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;loginButton&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;loginButton&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;button&lt;/span&gt; [ &lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;btn btn-sm btn-outline float-right mt-2&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;type_&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;button&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;a&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34;&gt;&lt;/a&gt;            [ &lt;span class=&#34;fu&#34;&gt;href&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;/login&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;style&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;color&amp;quot;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;inherit&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;style&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;text-decoration-line&amp;quot;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34;&gt;&lt;/a&gt;            ]&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34;&gt;&lt;/a&gt;            [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Login by GitHub&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;こんな感じ：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/servant-auth-with-github-apps/sample.jpg&#34;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;h2 id=&#34;おまけreaderモナド&#34;&gt;おまけ：Readerモナド&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Env&lt;/code&gt; は Cookie や JWT の設定を保持しているグローバル環境型だ． こういうのは引数としてリレーしても良いが，&lt;code&gt;Reader&lt;/code&gt; モナド使って渡すのがよくある手法だ． Servant の場合は &lt;a href=&#34;https://hackage.haskell.org/package/servant-server-0.17/docs/Servant-Server.html#v:hoistServerWithContext&#34;&gt;&lt;code&gt;hoistServerWithContext&lt;/code&gt;&lt;/a&gt; を使うことで &lt;code&gt;Handler&lt;/code&gt; の代わりに別のモナドを利用できる：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;main ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34;&gt;&lt;/a&gt;main &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34;&gt;&lt;/a&gt;  Warp.run &lt;span class=&#34;dv&#34;&gt;8080&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34;&gt;&lt;/a&gt;    serveWithContext api cfg (hoistServerWithContext api ctx (convert env) server)&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;ctx ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Proxy&lt;/span&gt; &amp;#39;[ &lt;span class=&#34;dt&#34;&gt;CookieSettings&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;JWTSettings&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34;&gt;&lt;/a&gt;ctx &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Proxy&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;App&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ReaderT&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Env&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Handler&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;convert ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Env&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;App&lt;/span&gt; a &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Handler&lt;/span&gt; a&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34;&gt;&lt;/a&gt;convert context app &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; runReaderT app context&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとは &lt;code&gt;Env -&amp;gt; Server api&lt;/code&gt; みたいな型を &lt;code&gt;ServerT api App&lt;/code&gt; としていくだけ．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;意外とこういう組み合わせに言及した記事がなくて調べるの大変だった． あと一応，実アプリケーションで使うときはちゃんと安全性について別途調べてくださいね（責任は持ちません）．&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>https://matsubara0507.github.io/posts/2020-04-01-update-dependencies-with-lts15.html</id><title type="text">git-plantation の依存パッケージのバージョンアゲアゲ with LTS-15</title><updated>2020-04-01T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2020-04-01-update-dependencies-with-lts15.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;自作している git-plantation という Haskell アプリケーションの依存パッケージのバージョンを、Stackage LTS-15 でビルドできるようにバージョンを色々とあげました． 本記事はそのメモ書きです（記事にするほどのことではないんだけど，思ったより色々したので忘れそうだから記事にした笑）．&lt;/p&gt;
&lt;p&gt;ちなみに git-plantation については，&lt;a href=&#34;https://www.slideshare.net/noob00/haskell-191796924&#34;&gt;このスライド&lt;/a&gt;を参照してください． いくつかのパッケージをフォークしたり，ラッパーパッケージを作ったり，そもそも自作したりしてるのでタイミングによっては LTS のメジャーバージョンを一つ上げるだけでも結構大変なのです．&lt;/p&gt;
&lt;h2 id=&#34;ハイライト&#34;&gt;ハイライト&lt;/h2&gt;
&lt;p&gt;ちなみに，元々は LTS 14 だった&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GHC のバージョンが 8.8.3 になる（影響はさほどない）&lt;/li&gt;
&lt;li&gt;extensible を 0.8 にする&lt;/li&gt;
&lt;li&gt;github を 0.25 にする&lt;/li&gt;
&lt;li&gt;servant-elm を 0.7.1 にする（これもさほど影響はない）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsubara0507/git-plantation/pull/58&#34;&gt;最終的なPRはこれ&lt;/a&gt;．&lt;/p&gt;
&lt;h2 id=&#34;extensible-0.8&#34;&gt;extensible-0.8&lt;/h2&gt;
&lt;p&gt;0.8 ではもともと deprecated になっていた関数や型がついに消えたので，利用しっぱなしだったコードがビルドできなくなった：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode sh&#34;&gt;&lt;code class=&#34;sourceCode bash&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt; &lt;span class=&#34;ex&#34;&gt;/.../drone-1.0.1/src/Drone/Types&lt;/span&gt;/Cron.hs:&lt;span class=&#34;ex&#34;&gt;25&lt;/span&gt;:44: error:&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;     &lt;span class=&#34;ex&#34;&gt;Not&lt;/span&gt; in scope: type constructor or class ‘:*’&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;     &lt;span class=&#34;ex&#34;&gt;Perhaps&lt;/span&gt; you meant one of these:&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;       ‘:&lt;span class=&#34;kw&#34;&gt;&amp;amp;&lt;/span&gt;’ &lt;span class=&#34;kw&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ex&#34;&gt;imported&lt;/span&gt; from Data.Extensible&lt;span class=&#34;kw&#34;&gt;)&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;       ‘:/’ &lt;span class=&#34;kw&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ex&#34;&gt;imported&lt;/span&gt; from Data.Extensible&lt;span class=&#34;kw&#34;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;|&lt;/span&gt;                  &lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt; &lt;span class=&#34;ex&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;type&lt;/span&gt; CronPatch = Nullable (Field Identity) &lt;span class=&#34;bu&#34;&gt;:&lt;/span&gt;* CronPatchFields&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;|&lt;/span&gt;                                            ^^&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;消えたのはこれら&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Associate k v xs&lt;/code&gt; =&amp;gt; &lt;code&gt;Lookup xs k v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h :* xs&lt;/code&gt; =&amp;gt; &lt;code&gt;xs :&amp;amp; h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h :| xs&lt;/code&gt; =&amp;gt; &lt;code&gt;xs :/ h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AssocKey kv&lt;/code&gt; =&amp;gt; &lt;code&gt;KeyOf kv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AssocValue kv&lt;/code&gt; =&amp;gt; &lt;code&gt;TargetOf kv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ValueIs&lt;/code&gt; =&amp;gt; &lt;code&gt;TargetIs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KeyValue&lt;/code&gt; =&amp;gt; &lt;code&gt;KeyTargetAre&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proxyAssocKey&lt;/code&gt; =&amp;gt; &lt;code&gt;proxyKeyOf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proxyAssocValue&lt;/code&gt; =&amp;gt; &lt;code&gt;proxyTargetOf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stringAssocKey&lt;/code&gt; =&amp;gt; &lt;code&gt;stringKeyOf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;訊&lt;/code&gt; =&amp;gt; &lt;code&gt;xlb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上3つは演算子の順番が変わってる点に注意． 他はただ名前を変えただけ（&lt;code&gt;Associate&lt;/code&gt; の名前が変わったためかしら？）．&lt;/p&gt;
&lt;h2 id=&#34;github-0.25&#34;&gt;github-0.25&lt;/h2&gt;
&lt;p&gt;github パッケージは 0.24 でかなり大きなインターフェースの刷新をしており，その影響がデカかった． 今までは一つの API に対して最大3つの関数が用意されていた：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- https://developer.github.com/v3/users/#get-a-single-user の関数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;userInfoFor ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Name&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Either&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;userInfoFor&amp;#39; ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Auth&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Name&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;IO&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Either&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;userInfoForR ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Name&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Request&lt;/span&gt; k &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ベースは &lt;code&gt;hogeR&lt;/code&gt; 関数で，他はこの関数のラッパー関数だ． 0.24 からは &lt;code&gt;hogeR&lt;/code&gt; 関数だけ残して他の関数は廃止し，&lt;code&gt;github&lt;/code&gt; と &lt;code&gt;github&amp;#39;&lt;/code&gt; の2つの関数を用意した：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- だいたいこういう対応&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;userInfoFor name &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; github&amp;#39; (userInfoForR name)&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;userInfoFor&amp;#39; (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; auth) name &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; github auth (userInfoForR name)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また，github パッケージはフォークして足りない API 関数を足して利用していたため，それらの修正（というか &lt;code&gt;hogeR&lt;/code&gt; 以外の削除）をする必要があった． 追加してたけどフォーク元に PR を投げてなかったのはこれらの関数（完全にメモ）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;removeCollaborator&lt;/code&gt; : リポジトリのコラボレーターの削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;teamInfoByName&lt;/code&gt; : Organization のチームをチーム名から引く&lt;/li&gt;
&lt;li&gt;&lt;code&gt;addOrUpdateMembership&lt;/code&gt; : Organization メンバーの権限の追加ないしは変更&lt;/li&gt;
&lt;li&gt;&lt;code&gt;removeMembership&lt;/code&gt; : Organization メンバーの権限の削除&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;servant-elm-0.7.1&#34;&gt;servant-elm-0.7.1&lt;/h2&gt;
&lt;p&gt;ビルドが通らないことはないが生成ファイルが変わったので，念のため差分をチェックした． 少なくとも僕の生成コードに影響があったのは&lt;a href=&#34;https://github.com/haskell-servant/servant-elm/pull/59&#34;&gt;この PR&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using the appropriate toString functions for different types&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要するに，デフォルトで定義しているデータ型以外の型で文字列からJSONデコードするときの振る舞いを自分で定義したいって感じだと思う． たぶん．&lt;/p&gt;
&lt;h1 id=&#34;section&#34;&gt;&lt;/h1&gt;
&lt;p&gt;servant-elm は elmap.hs というのでラップしてるのでそっちのアップデートも行った． こっちには生成コードのテストも追加してあるので&lt;a href=&#34;https://github.com/matsubara0507/elmap.hs/pull/1/files#diff-3e612857d13f467c108121bba96a6232&#34;&gt;差分がわかりやすい&lt;/a&gt;．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;他にも CI/CD を GitHub Actions にしたりした．&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>https://matsubara0507.github.io/posts/2020-02-10-elm-github-oauth2-sample.html</id><title type="text">Elm + GitHub OAuth 2.0 (Firebase) のサンプルプログラムを書いてみた</title><updated>2020-02-10T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2020-02-10-elm-github-oauth2-sample.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;とあるアプリケーションに Elm + GitHub OAuth 2.0 を使ってみたいなと思い，その練習用のアプリケーションを作ってみました：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsubara0507/elm-github-oauth2-sample&#34;&gt;matsubara0507/elm-github-oauth2-sample - GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;サンプルのために認可用のサーバーを用意するのがめんどくさかったので，近年話題の Firebase の Authorization 機能を利用することにしました．&lt;/p&gt;
&lt;h2 id=&#34;作ったアプリケーション&#34;&gt;作ったアプリケーション&lt;/h2&gt;
&lt;p&gt;作成した SPA は &lt;a href=&#34;https://matsubara0507.github.io/elm-github-oauth2-sample&#34;&gt;GitHub Pages&lt;/a&gt; に置いてある． ログインっぽいボタンを押すと Firebase Authorization を介して，GitHub OAuth 2.0 での認可がされる． もちろん，もともと試したかったことはここまでだが，認可しておしまいだと味気がない． なので：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;認可時に GitHub OAuth トークンを取得&lt;/li&gt;
&lt;li&gt;トークンを使ってログインしたユーザーの公開リポジトリの情報を取得&lt;/li&gt;
&lt;li&gt;リポジトリのスター数を使ってユーザーのステータスをリッチに描写する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;色々試して最終的にこんな感じ：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/elm-github-oauth2-sample/page.jpg&#34;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;ちょっとやりすぎた．&lt;/p&gt;
&lt;h2 id=&#34;実装する&#34;&gt;実装する&lt;/h2&gt;
&lt;p&gt;やったことは3ステップ&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;Elm と Firebase を繋ぐ&lt;/li&gt;
&lt;li&gt;リポジトリを取得（GraphQL）&lt;/li&gt;
&lt;li&gt;円グラフを描写&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2と3は完全におまけですね．&lt;/p&gt;
&lt;h3 id=&#34;elm-と-firebase&#34;&gt;Elm と Firebase&lt;/h3&gt;
&lt;p&gt;まずは Firebase を準備する． &lt;a href=&#34;https://firebase.google.com/docs/auth/web/github-auth?hl=ja&#34;&gt;公式サイトの手順&lt;/a&gt;がしっかりしてるので，それに習って準備する（GitHub App の設定とか）． プロバイダ（今回は GitHub）の設定と JavaScript のアプリの設定をすると「コレをコピペしてね」っていう設定とかが出てくる． コレを index.html と index.js に書いておく：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode html&#34;&gt;&lt;code class=&#34;sourceCode html&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;&amp;lt;!doctype &lt;/span&gt;html&lt;span class=&#34;dt&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; http-equiv=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;content-type&amp;quot;&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; charset=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;&amp;lt;link&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; rel=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; href=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;https://unpkg.com/@primer/css@14.2.0/dist/primer.css&amp;quot;&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;&amp;lt;div&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; id=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;elm-node&amp;quot;&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;&amp;lt;!-- firebase-app と firebase-auth が必要 --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; src=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;https://www.gstatic.com/firebasejs/7.8.1/firebase-app.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; src=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;https://www.gstatic.com/firebasejs/7.8.1/firebase-auth.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;&amp;lt;!-- static/main.js は Elm からあとで生成する --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; src=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;static/main.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;&amp;lt;!-- static/index.js は下記 --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt; src=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;static/index.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode js&#34;&gt;&lt;code class=&#34;sourceCode javascript&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;// static/index.js&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;st&#34;&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;// コレらの設定は公開してもいいらしいけど&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;var&lt;/span&gt; firebaseConfig &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;apiKey&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;authDomain&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;databaseURL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;projectId&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;storageBucket&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;messagingSenderId&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;appId&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34;&gt;&lt;/a&gt;}&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34;&gt;&lt;/a&gt;firebase&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;initializeApp&lt;/span&gt;(firebaseConfig)&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;const&lt;/span&gt; provider &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;new&lt;/span&gt; firebase&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;GithubAuthProvider&lt;/span&gt;()&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとは Elm から Firebase のメソッドを呼び出す． 基本的にコレを参考にした：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/ababup1192/items/f27f9af282d9fa642eb5&#34;&gt;Elm portsでFirebase Firestoreを触ろう！ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elm 用の Firebase パッケージ的なのはないので，Elm のポート機能を使って繋ぎ込む：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Firebase&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Json&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Encode&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;E&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;signIn&lt;/span&gt; : () &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;getSignInResult&lt;/span&gt; : () &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;signedIn&lt;/span&gt; : (&lt;span class=&#34;dt&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Value&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sub&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode js&#34;&gt;&lt;code class=&#34;sourceCode javascript&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;// static/index.js&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;const&lt;/span&gt; app &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; Elm&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34;&gt;&lt;/a&gt;  { &lt;span class=&#34;dt&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;#39;main&amp;#39;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt; {}&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34;&gt;&lt;/a&gt;)&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34;&gt;&lt;/a&gt;app&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;signIn&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;subscribe&lt;/span&gt;(_ &lt;span class=&#34;kw&#34;&gt;=&amp;gt;&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;// popup の方はモバイル系でうまく動作しなかったのでこっちを使う&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34;&gt;&lt;/a&gt;  firebase&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;auth&lt;/span&gt;()&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;signInWithRedirect&lt;/span&gt;(provider)&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34;&gt;&lt;/a&gt;})&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34;&gt;&lt;/a&gt;app&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;getSignInResult&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;subscribe&lt;/span&gt;(_ &lt;span class=&#34;kw&#34;&gt;=&amp;gt;&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34;&gt;&lt;/a&gt;  firebase&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;auth&lt;/span&gt;()&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;getRedirectResult&lt;/span&gt;()&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;function&lt;/span&gt;(result) {&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (result&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;credential&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34;&gt;&lt;/a&gt;      app&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;signedIn&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;send&lt;/span&gt;(result)&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34;&gt;&lt;/a&gt;  })&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;catch&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;function&lt;/span&gt;(error) {&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34;&gt;&lt;/a&gt;    app&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;failSignIn&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;send&lt;/span&gt;(error)&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34;&gt;&lt;/a&gt;  })&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34;&gt;&lt;/a&gt;})&lt;span class=&#34;op&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;繋ぎ込みはできた． サクッとトークンだけもらって，GitHub API v3 からユーザー名を取得する部分を実装する：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Http&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Json&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Decode&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Decoder&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Json&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Encode&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;E&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;tokenDecoder&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Decoder&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;tokenDecoder&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;login&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;name&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;getUserInfo&lt;/span&gt; : (&lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Http&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;getUserInfo&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 割愛&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Firebase&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Json&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Decode&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Decoder&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;decoder&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Decoder&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;decoder&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;identity&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;at&lt;/span&gt; [ &lt;span class=&#34;st&#34;&gt;&amp;quot;credential&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;accessToken&amp;quot;&lt;/span&gt; ] &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;tokenDecoder&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;signedInWithDecode&lt;/span&gt; : (&lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sub&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;signedInWithDecode&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;signedIn&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;decodeValue&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;decoder&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとは適当に &lt;code&gt;Main&lt;/code&gt; から呼び出すだけ：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Main&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;main&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- import は割愛&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;main&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Program&lt;/span&gt; () &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Browser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;application&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34;&gt;&lt;/a&gt;        { &lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;update&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;subscriptions&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Firebase&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;signedInWithDecode&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SignedIn&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;onUrlRequest&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;LinkClicked&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;onUrlChange&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UrlChanged&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;token&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;key&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Nav&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Key&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-20&#34;&gt;&lt;a href=&#34;#cb7-20&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-21&#34;&gt;&lt;a href=&#34;#cb7-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-22&#34;&gt;&lt;a href=&#34;#cb7-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-23&#34;&gt;&lt;a href=&#34;#cb7-23&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;LinkClicked&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Browser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;UrlRequest&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-24&#34;&gt;&lt;a href=&#34;#cb7-24&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;UrlChanged&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Url&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-25&#34;&gt;&lt;a href=&#34;#cb7-25&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SignIn&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-26&#34;&gt;&lt;a href=&#34;#cb7-26&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SignedIn&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Json&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-27&#34;&gt;&lt;a href=&#34;#cb7-27&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FetchUser&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Http&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-28&#34;&gt;&lt;a href=&#34;#cb7-28&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-29&#34;&gt;&lt;a href=&#34;#cb7-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; : () &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Url&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nav&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Key&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb7-30&#34;&gt;&lt;a href=&#34;#cb7-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Firebase&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;getSignInResult&lt;/span&gt; () )&lt;/span&gt;
&lt;span id=&#34;cb7-31&#34;&gt;&lt;a href=&#34;#cb7-31&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-32&#34;&gt;&lt;a href=&#34;#cb7-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;update&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb7-33&#34;&gt;&lt;a href=&#34;#cb7-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-34&#34;&gt;&lt;a href=&#34;#cb7-34&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-35&#34;&gt;&lt;a href=&#34;#cb7-35&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- URL 系は割愛&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-36&#34;&gt;&lt;a href=&#34;#cb7-36&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;SignIn&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-37&#34;&gt;&lt;a href=&#34;#cb7-37&#34;&gt;&lt;/a&gt;            ( &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Firebase&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;signIn&lt;/span&gt; () )&lt;/span&gt;
&lt;span id=&#34;cb7-38&#34;&gt;&lt;a href=&#34;#cb7-38&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;SignedIn&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;token&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-39&#34;&gt;&lt;a href=&#34;#cb7-39&#34;&gt;&lt;/a&gt;            ( { &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;token&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; }&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;getUserInfo&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;FetchUser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;token&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb7-40&#34;&gt;&lt;a href=&#34;#cb7-40&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;SignedIn&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Err&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;err&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-41&#34;&gt;&lt;a href=&#34;#cb7-41&#34;&gt;&lt;/a&gt;            ( { &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Json&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;errorToString&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;err&lt;/span&gt;) }&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb7-42&#34;&gt;&lt;a href=&#34;#cb7-42&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;FetchUser&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-43&#34;&gt;&lt;a href=&#34;#cb7-43&#34;&gt;&lt;/a&gt;            ( { &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; }&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb7-44&#34;&gt;&lt;a href=&#34;#cb7-44&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;FetchUser&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Err&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-45&#34;&gt;&lt;a href=&#34;#cb7-45&#34;&gt;&lt;/a&gt;            ( { &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;fetch github user error&amp;quot;&lt;/span&gt; }&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb7-46&#34;&gt;&lt;a href=&#34;#cb7-46&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-47&#34;&gt;&lt;a href=&#34;#cb7-47&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Browser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Document&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-48&#34;&gt;&lt;a href=&#34;#cb7-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; { &lt;span class=&#34;fu&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Elm GitHub OAuth 2.0 Sample&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; [ &lt;span class=&#34;fu&#34;&gt;viewBody&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; ] }&lt;/span&gt;
&lt;span id=&#34;cb7-49&#34;&gt;&lt;a href=&#34;#cb7-49&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-50&#34;&gt;&lt;a href=&#34;#cb7-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewBody&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-51&#34;&gt;&lt;a href=&#34;#cb7-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewBody&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-52&#34;&gt;&lt;a href=&#34;#cb7-52&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;position-relative text-center&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb7-53&#34;&gt;&lt;a href=&#34;#cb7-53&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; ( &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt; ) &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-54&#34;&gt;&lt;a href=&#34;#cb7-54&#34;&gt;&lt;/a&gt;            ( &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-55&#34;&gt;&lt;a href=&#34;#cb7-55&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;err&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-56&#34;&gt;&lt;a href=&#34;#cb7-56&#34;&gt;&lt;/a&gt;            ( &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-57&#34;&gt;&lt;a href=&#34;#cb7-57&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;viewUser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-58&#34;&gt;&lt;a href=&#34;#cb7-58&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-59&#34;&gt;&lt;a href=&#34;#cb7-59&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;signinButton&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-60&#34;&gt;&lt;a href=&#34;#cb7-60&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;
&lt;span id=&#34;cb7-61&#34;&gt;&lt;a href=&#34;#cb7-61&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-62&#34;&gt;&lt;a href=&#34;#cb7-62&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;signinButton&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-63&#34;&gt;&lt;a href=&#34;#cb7-63&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;signinButton&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-64&#34;&gt;&lt;a href=&#34;#cb7-64&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;f3 mt-3&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb7-65&#34;&gt;&lt;a href=&#34;#cb7-65&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;button&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-66&#34;&gt;&lt;a href=&#34;#cb7-66&#34;&gt;&lt;/a&gt;            [ &lt;span class=&#34;dt&#34;&gt;Event&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;onClick&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;SignIn&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-67&#34;&gt;&lt;a href=&#34;#cb7-67&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 割愛&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-68&#34;&gt;&lt;a href=&#34;#cb7-68&#34;&gt;&lt;/a&gt;            ]&lt;/span&gt;
&lt;span id=&#34;cb7-69&#34;&gt;&lt;a href=&#34;#cb7-69&#34;&gt;&lt;/a&gt;            [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Sign in with GitHub&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb7-70&#34;&gt;&lt;a href=&#34;#cb7-70&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;
&lt;span id=&#34;cb7-71&#34;&gt;&lt;a href=&#34;#cb7-71&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-72&#34;&gt;&lt;a href=&#34;#cb7-72&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewUser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-73&#34;&gt;&lt;a href=&#34;#cb7-73&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewUser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; (&lt;span class=&#34;st&#34;&gt;&amp;quot;Hi &amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;login&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;コレを&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ elm make --output=docs/static/main.js src/Main.elm --optimize&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;とビルドして &lt;code&gt;elm reactor&lt;/code&gt; で &lt;code&gt;docs/index.html&lt;/code&gt; にアクセスすると、サインインボタンがあってサインインすると &lt;code&gt;Hi matsubara0507!&lt;/code&gt; って感じのメッセージが出るだけの SPA ができた．&lt;/p&gt;
&lt;h3 id=&#34;リポジトリを取得&#34;&gt;リポジトリを取得&lt;/h3&gt;
&lt;p&gt;こっからは完全におまけ． リポジトリのスターをなんかステータスっぽく表示するようにしたい．&lt;/p&gt;
&lt;p&gt;リポジトリ一覧は GitHub の個別ユーザーページをモバイル版でみたときの感じにすることにした：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/elm-github-oauth2-sample/mobile.jpg&#34;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;必要なリポジトリの情報は名前とリンクと総スター数． GitHub API v3 は無駄な情報が多いので，GraphQL を使って一気に取得してみる． GraphQL のクエリの動作確認は&lt;a href=&#34;https://developer.github.com/v4/explorer/&#34;&gt;ココ&lt;/a&gt;で行える：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/elm-github-oauth2-sample/graphql.jpg&#34;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;最終的に出来上がったクエリはこんな感じ：&lt;/p&gt;
&lt;pre class=&#34;graphql&#34;&gt;&lt;code&gt;query {
  viewer {
    login
    name
    repositories(first: 100, orderBy: {field: STARGAZERS, direction: DESC}, ownerAffiliations: [OWNER], isFork: false) {
      nodes {
        name
        url
        stargazers { totalCount }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;クエリの &lt;code&gt;viewer {..}&lt;/code&gt; は渡したトークンのユーザー情報を指す． &lt;code&gt;viewer&lt;/code&gt; 内で &lt;code&gt;login&lt;/code&gt; や &lt;code&gt;name&lt;/code&gt; を指定することで，さっきまで v3 で取得していたユーザー情報も取得できる． &lt;code&gt;repositories&lt;/code&gt; で一気に所得できるリポジトリ数は100件が上限（&lt;code&gt;first:300&lt;/code&gt; は怒られる）． &lt;code&gt;orderBy:{..}&lt;/code&gt; でスターの多い順に並び替えて，&lt;code&gt;ownerAffiliations:[OWNER]&lt;/code&gt; と &lt;code&gt;isFork:false&lt;/code&gt; を指定することで自身のリポジトリだけを返してる． リポジトリのスター数は &lt;code&gt;stargazers { totalCount }&lt;/code&gt; で取得できる．&lt;/p&gt;
&lt;h1 id=&#34;section&#34;&gt;&lt;/h1&gt;
&lt;p&gt;あとはクエリを叩くだけ． Elm の GraphQL パッケージに良さげのものがなかったのでそのまま &lt;code&gt;elm/http&lt;/code&gt; を使うことにした：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;login&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;name&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repos&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Repository&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Repository&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;name&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;url&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;star&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;userDecoder&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Decoder&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;userDecoder&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map3&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34;&gt;&lt;/a&gt;        (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;login&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;string&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34;&gt;&lt;/a&gt;        (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;string&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34;&gt;&lt;/a&gt;        (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;at&lt;/span&gt; [ &lt;span class=&#34;st&#34;&gt;&amp;quot;repositories&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;nodes&amp;quot;&lt;/span&gt; ] (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repoDecoder&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;repoDecoder&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Decoder&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Repository&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;repoDecoder&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map3&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Repository&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34;&gt;&lt;/a&gt;        (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;string&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34;&gt;&lt;/a&gt;        (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;string&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34;&gt;&lt;/a&gt;        (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;at&lt;/span&gt; [ &lt;span class=&#34;st&#34;&gt;&amp;quot;stargazers&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;totalCount&amp;quot;&lt;/span&gt; ] &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;int&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;getUserInfo&lt;/span&gt; : (&lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Http&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;getUserInfo&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-31&#34;&gt;&lt;a href=&#34;#cb10-31&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-32&#34;&gt;&lt;a href=&#34;#cb10-32&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;query&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- さっきのクエリをヒアドキュメントとかで&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-33&#34;&gt;&lt;a href=&#34;#cb10-33&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;decoder&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;identity&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;at&lt;/span&gt; [ &lt;span class=&#34;st&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;viewer&amp;quot;&lt;/span&gt; ] &lt;span class=&#34;fu&#34;&gt;userDecoder&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-34&#34;&gt;&lt;a href=&#34;#cb10-34&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-35&#34;&gt;&lt;a href=&#34;#cb10-35&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Http&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;request&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-36&#34;&gt;&lt;a href=&#34;#cb10-36&#34;&gt;&lt;/a&gt;        { &lt;span class=&#34;fu&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-37&#34;&gt;&lt;a href=&#34;#cb10-37&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;headers&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Http&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Authorization&amp;quot;&lt;/span&gt; (&lt;span class=&#34;st&#34;&gt;&amp;quot;token &amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;) ]&lt;/span&gt;
&lt;span id=&#34;cb10-38&#34;&gt;&lt;a href=&#34;#cb10-38&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;https://api.github.com/graphql&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-39&#34;&gt;&lt;a href=&#34;#cb10-39&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Http&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;jsonBody&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;object&lt;/span&gt; [ ( &lt;span class=&#34;st&#34;&gt;&amp;quot;query&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;query&lt;/span&gt; ) ])&lt;/span&gt;
&lt;span id=&#34;cb10-40&#34;&gt;&lt;a href=&#34;#cb10-40&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;expect&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Http&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;expectJson&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;decoder&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-41&#34;&gt;&lt;a href=&#34;#cb10-41&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;timeout&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-42&#34;&gt;&lt;a href=&#34;#cb10-42&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tracker&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-43&#34;&gt;&lt;a href=&#34;#cb10-43&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インターフェースは全く変えてないので &lt;code&gt;Main&lt;/code&gt; でいじるのは &lt;code&gt;view&lt;/code&gt; だけ：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Main&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;main&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewUser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewUser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;total&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;fromInt&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;sum&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;star&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;repos&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;container-sm my-3&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;h3&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;my-2&amp;quot;&lt;/span&gt; ] [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;login&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;#39;s points: &amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;total&lt;/span&gt;) ]&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;viewRepositories&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewRepositories&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewRepositories&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;viewRepository&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;li&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Box-row mb-3&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34;&gt;&lt;/a&gt;                [ &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;float-left&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34;&gt;&lt;/a&gt;                    [ &lt;span class=&#34;dt&#34;&gt;Octicons&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Octicons&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;defaultOptions&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;a&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;href&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;ml-1&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34;&gt;&lt;/a&gt;                        [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;login&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;name&lt;/span&gt;) ]&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34;&gt;&lt;/a&gt;                    ]&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;float-right&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34;&gt;&lt;/a&gt;                    [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;fromInt&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;star&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Octicons&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;star&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Octicons&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;defaultOptions&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34;&gt;&lt;/a&gt;                    ]&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34;&gt;&lt;/a&gt;                ]&lt;/span&gt;
&lt;span id=&#34;cb11-30&#34;&gt;&lt;a href=&#34;#cb11-30&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-31&#34;&gt;&lt;a href=&#34;#cb11-31&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Box&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb11-32&#34;&gt;&lt;a href=&#34;#cb11-32&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;ul&lt;/span&gt; [] (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;viewRepository&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;repos&lt;/span&gt;) ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;elm-で円グラフ&#34;&gt;Elm で円グラフ&lt;/h3&gt;
&lt;p&gt;なんかこう，リポジトリのプライマリ言語ごとに円グラフにしたら面白いなっていう欲がでてきたのでそうしてみることにした． まずはリポジトリのプライマリ言語を返すようにクエリをいじる：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;query {
  viewer {
    ...
    repositories(...) {
      nodes {
        ...
        primaryLanguage {
          name
          color
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;データ構造も書き足す：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Repository&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 割愛&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;language&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Language&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Language&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;name&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;color&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;repoDecoder&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Decoder&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Repository&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-12&#34;&gt;&lt;a href=&#34;#cb13-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;repoDecoder&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-13&#34;&gt;&lt;a href=&#34;#cb13-13&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map4&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Repository&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-14&#34;&gt;&lt;a href=&#34;#cb13-14&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 割愛&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-15&#34;&gt;&lt;a href=&#34;#cb13-15&#34;&gt;&lt;/a&gt;        (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;primaryLanguage&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;languageDecoder&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb13-16&#34;&gt;&lt;a href=&#34;#cb13-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-17&#34;&gt;&lt;a href=&#34;#cb13-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-18&#34;&gt;&lt;a href=&#34;#cb13-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;languageDecoder&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Decoder&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Language&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-19&#34;&gt;&lt;a href=&#34;#cb13-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;languageDecoder&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-20&#34;&gt;&lt;a href=&#34;#cb13-20&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map2&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Language&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-21&#34;&gt;&lt;a href=&#34;#cb13-21&#34;&gt;&lt;/a&gt;        (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;string&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb13-22&#34;&gt;&lt;a href=&#34;#cb13-22&#34;&gt;&lt;/a&gt;        (&lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;color&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;string&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;プライマリ言語の情報は &lt;code&gt;null&lt;/code&gt; が返ってくる可能性があるので、&lt;code&gt;Maybe&lt;/code&gt; でラップしている．&lt;/p&gt;
&lt;p&gt;データは揃ったので，あとは円グラフを描くだけ． 円グラフの描写には &lt;a href=&#34;https://package.elm-lang.org/packages/gampleman/elm-visualization/2.1.1&#34;&gt;&lt;code&gt;gampleman/elm-visualization&lt;/code&gt;&lt;/a&gt; を使うことにする． example 集にある「&lt;a href=&#34;https://elm-visualization.netlify.com/custompiechart&#34;&gt;Custom Pie Chart&lt;/a&gt;」をベースにすることにした． コピペしてよしなに書き換える：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Pie&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- import は割愛&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;label&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 言語名&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;data&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt;   &lt;span class=&#34;co&#34;&gt;-- 総スター数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;color&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Color&lt;/span&gt;  &lt;span class=&#34;co&#34;&gt;-- GitHub 側で設定されてる言語の色&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;w&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;990&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;h&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;504&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-15&#34;&gt;&lt;a href=&#34;#cb14-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-16&#34;&gt;&lt;a href=&#34;#cb14-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;radius&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-17&#34;&gt;&lt;a href=&#34;#cb14-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;radius&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-18&#34;&gt;&lt;a href=&#34;#cb14-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-19&#34;&gt;&lt;a href=&#34;#cb14-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ChartConfig&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-20&#34;&gt;&lt;a href=&#34;#cb14-20&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;outerRadius&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-21&#34;&gt;&lt;a href=&#34;#cb14-21&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;innerRadius&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-22&#34;&gt;&lt;a href=&#34;#cb14-22&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;padAngle&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-23&#34;&gt;&lt;a href=&#34;#cb14-23&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;cornerRadius&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-24&#34;&gt;&lt;a href=&#34;#cb14-24&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;labelPosition&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Float&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-25&#34;&gt;&lt;a href=&#34;#cb14-25&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb14-26&#34;&gt;&lt;a href=&#34;#cb14-26&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-27&#34;&gt;&lt;a href=&#34;#cb14-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;drawChart&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;ChartConfig&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Svg&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-28&#34;&gt;&lt;a href=&#34;#cb14-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;drawChart&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-29&#34;&gt;&lt;a href=&#34;#cb14-29&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-30&#34;&gt;&lt;a href=&#34;#cb14-30&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;pieData&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-31&#34;&gt;&lt;a href=&#34;#cb14-31&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-32&#34;&gt;&lt;a href=&#34;#cb14-32&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Shape&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;pie&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-33&#34;&gt;&lt;a href=&#34;#cb14-33&#34;&gt;&lt;/a&gt;                    { &lt;span class=&#34;fu&#34;&gt;defaultPieConfig&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-34&#34;&gt;&lt;a href=&#34;#cb14-34&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;innerRadius&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;innerRadius&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-35&#34;&gt;&lt;a href=&#34;#cb14-35&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;outerRadius&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;outerRadius&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-36&#34;&gt;&lt;a href=&#34;#cb14-36&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;padAngle&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;padAngle&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-37&#34;&gt;&lt;a href=&#34;#cb14-37&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;cornerRadius&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;cornerRadius&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-38&#34;&gt;&lt;a href=&#34;#cb14-38&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;sortingFn&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; \&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;EQ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-39&#34;&gt;&lt;a href=&#34;#cb14-39&#34;&gt;&lt;/a&gt;                    }&lt;/span&gt;
&lt;span id=&#34;cb14-40&#34;&gt;&lt;a href=&#34;#cb14-40&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-41&#34;&gt;&lt;a href=&#34;#cb14-41&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;makeSlice&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pieDatum&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;datum&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-42&#34;&gt;&lt;a href=&#34;#cb14-42&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;element&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Shape&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;arc&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pieDatum&lt;/span&gt;) [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;fill&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Paint&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;datum&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;color&lt;/span&gt;) ]&lt;/span&gt;
&lt;span id=&#34;cb14-43&#34;&gt;&lt;a href=&#34;#cb14-43&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-44&#34;&gt;&lt;a href=&#34;#cb14-44&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;makeLabel&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pieDatum&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;datum&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-45&#34;&gt;&lt;a href=&#34;#cb14-45&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-46&#34;&gt;&lt;a href=&#34;#cb14-46&#34;&gt;&lt;/a&gt;                ( &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;y&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-47&#34;&gt;&lt;a href=&#34;#cb14-47&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;Shape&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;centroid&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-48&#34;&gt;&lt;a href=&#34;#cb14-48&#34;&gt;&lt;/a&gt;                        { &lt;span class=&#34;fu&#34;&gt;pieDatum&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-49&#34;&gt;&lt;a href=&#34;#cb14-49&#34;&gt;&lt;/a&gt;                            &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;innerRadius&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;labelPosition&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-50&#34;&gt;&lt;a href=&#34;#cb14-50&#34;&gt;&lt;/a&gt;                            &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;outerRadius&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;labelPosition&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-51&#34;&gt;&lt;a href=&#34;#cb14-51&#34;&gt;&lt;/a&gt;                        }&lt;/span&gt;
&lt;span id=&#34;cb14-52&#34;&gt;&lt;a href=&#34;#cb14-52&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-53&#34;&gt;&lt;a href=&#34;#cb14-53&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;text_&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-54&#34;&gt;&lt;a href=&#34;#cb14-54&#34;&gt;&lt;/a&gt;                [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;transform&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Translate&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;y&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb14-55&#34;&gt;&lt;a href=&#34;#cb14-55&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;dy&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;em&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;35&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-56&#34;&gt;&lt;a href=&#34;#cb14-56&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;textAnchor&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;AnchorMiddle&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-57&#34;&gt;&lt;a href=&#34;#cb14-57&#34;&gt;&lt;/a&gt;                ]&lt;/span&gt;
&lt;span id=&#34;cb14-58&#34;&gt;&lt;a href=&#34;#cb14-58&#34;&gt;&lt;/a&gt;                [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;datum&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;label&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb14-59&#34;&gt;&lt;a href=&#34;#cb14-59&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-60&#34;&gt;&lt;a href=&#34;#cb14-60&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;svg&lt;/span&gt; [ &lt;span class=&#34;fu&#34;&gt;width&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;radius&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;height&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;radius&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) ]&lt;/span&gt;
&lt;span id=&#34;cb14-61&#34;&gt;&lt;a href=&#34;#cb14-61&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;g&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;transform&lt;/span&gt; [ &lt;span class=&#34;dt&#34;&gt;Translate&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;radius&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;radius&lt;/span&gt; ] ]&lt;/span&gt;
&lt;span id=&#34;cb14-62&#34;&gt;&lt;a href=&#34;#cb14-62&#34;&gt;&lt;/a&gt;            [ &lt;span class=&#34;fu&#34;&gt;g&lt;/span&gt; [] &lt;span class=&#34;op&#34;&gt;&amp;lt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;makeSlice&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pieData&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-63&#34;&gt;&lt;a href=&#34;#cb14-63&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;g&lt;/span&gt; [] &lt;span class=&#34;op&#34;&gt;&amp;lt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;makeLabel&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pieData&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-64&#34;&gt;&lt;a href=&#34;#cb14-64&#34;&gt;&lt;/a&gt;            ]&lt;/span&gt;
&lt;span id=&#34;cb14-65&#34;&gt;&lt;a href=&#34;#cb14-65&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主に書き換えたのは色の部分． example では &lt;code&gt;colors&lt;/code&gt; 的な色リストを利用してたが，リポジトリのプログラミング言語には GitHub 側で色が設定してあるので，それをモデルに持たせて引用することにした． あとは &lt;code&gt;Repository&lt;/code&gt; 型から &lt;code&gt;Data&lt;/code&gt; 型を組み立てる部分を書くだけ：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Pie&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 割愛&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;fromRepo&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Repository&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Data&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;fromRepo&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-8&#34;&gt;&lt;a href=&#34;#cb15-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-9&#34;&gt;&lt;a href=&#34;#cb15-9&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;toFloat&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;star&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Color&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;black&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-10&#34;&gt;&lt;a href=&#34;#cb15-10&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;lang&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-11&#34;&gt;&lt;a href=&#34;#cb15-11&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;hexToColor&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-12&#34;&gt;&lt;a href=&#34;#cb15-12&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-13&#34;&gt;&lt;a href=&#34;#cb15-13&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;name&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;toFloat&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;star&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-14&#34;&gt;&lt;a href=&#34;#cb15-14&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-15&#34;&gt;&lt;a href=&#34;#cb15-15&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;toFloat&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;star&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Color&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;black&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-16&#34;&gt;&lt;a href=&#34;#cb15-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-17&#34;&gt;&lt;a href=&#34;#cb15-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-18&#34;&gt;&lt;a href=&#34;#cb15-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-19&#34;&gt;&lt;a href=&#34;#cb15-19&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-20&#34;&gt;&lt;a href=&#34;#cb15-20&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 割愛&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-21&#34;&gt;&lt;a href=&#34;#cb15-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-22&#34;&gt;&lt;a href=&#34;#cb15-22&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;updateBy&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-23&#34;&gt;&lt;a href=&#34;#cb15-23&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-24&#34;&gt;&lt;a href=&#34;#cb15-24&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-25&#34;&gt;&lt;a href=&#34;#cb15-25&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-26&#34;&gt;&lt;a href=&#34;#cb15-26&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-27&#34;&gt;&lt;a href=&#34;#cb15-27&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-28&#34;&gt;&lt;a href=&#34;#cb15-28&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; { &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;data&lt;/span&gt; }&lt;/span&gt;
&lt;span id=&#34;cb15-29&#34;&gt;&lt;a href=&#34;#cb15-29&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-30&#34;&gt;&lt;a href=&#34;#cb15-30&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-31&#34;&gt;&lt;a href=&#34;#cb15-31&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;fromRepo&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;repos&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-32&#34;&gt;&lt;a href=&#34;#cb15-32&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;foldl&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;label&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;updateBy&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt;)) &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;empty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-33&#34;&gt;&lt;a href=&#34;#cb15-33&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;filter&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;/=&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-34&#34;&gt;&lt;a href=&#34;#cb15-34&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-35&#34;&gt;&lt;a href=&#34;#cb15-35&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;position-relative&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb15-36&#34;&gt;&lt;a href=&#34;#cb15-36&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;drawChart&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;config&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;values&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-37&#34;&gt;&lt;a href=&#34;#cb15-37&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;色々考えた結果，いったん各 &lt;code&gt;Repository&lt;/code&gt; を &lt;code&gt;Data&lt;/code&gt; に変換して，そのあと言語名をキーにした &lt;code&gt;Dict&lt;/code&gt; へと畳み込んでいる（&lt;code&gt;.data&lt;/code&gt; の部分だけ足し合わせてる）． あとは &lt;code&gt;Pie.view user&lt;/code&gt; を &lt;code&gt;Main.view&lt;/code&gt; で呼び出すだけ．&lt;/p&gt;
&lt;p&gt;あ、ちなみに真ん中にアバター画像出したしてるのは割愛（ただ単にアバター画像を GraphQL で取ってきて，&lt;code&gt;Pie.view&lt;/code&gt; で重ねてるだけ）．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;Firebase 便利ですね．&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>http://kurokawh.blogspot.com/2018/01/cygwin-cygwin.html</id><title type="text">[cygwin] cygwinセットアップ・環境構築手順メモ</title><updated>2020-01-20T11:46:31.459+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2018/01/cygwin-cygwin.html"/><summary type="text">

主に自分向けの防備録です。windows10上で確認。インストーラーはここからDLする。





&lt;&lt;設定&gt;&gt;

ssh-agentの重複起動を防ぐ


ユーザーのアカウント名、ホームディレクトリの変更



/etc/passwdを編集する（最新バージョンでは自動生成されない？）
Cygwinを移動したら/etc/passwdの再生成を
巨大ドメインに参加している PC での /etc/passwd, /etc/group ファイルのつくりかた 

ssh-agentのために秘密鍵セットアップ



~/.ssh/


※group/otherの権限を削除する必要がある

% chmod 700 ~/.ssh 


less, lv, manコマンド終了時に画面をクリアしない

[linux][cygwin] less, manの終了直前の画面をクリアしないで端末上に残す方法 
</summary></entry><entry><id>https://matsubara0507.github.io/posts/2020-01-08-calc-ssh-pubkey-fingerprint-with-haskell.html</id><title type="text">Haskell で SSH Public Key の FingerPrint を計算する</title><updated>2020-01-08T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2020-01-08-calc-ssh-pubkey-fingerprint-with-haskell.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;GitHub に登録している Public Key から &lt;code&gt;~/.ssh/authorized_key&lt;/code&gt; を生成する簡易的な CLI ツールを作ろうと考えた． そして，Public Key をフィルタリングするために &lt;code&gt;https://github.com/settings/keys&lt;/code&gt; で参照できる FingerPrint を使おうと考えたが，その場合は GitHub API で取得した Public Key から FingerPrint をプログラム側で計算しないといけない．&lt;/p&gt;
&lt;p&gt;もちろん，&lt;code&gt;ssh-keygen -l -E md5 -f ssh_host_ecdsa_key.pub&lt;/code&gt; なんかで生成できるのだが可能なら素の Haskell プログラムでやりたいなと考えた． ということで，本記事はタイトルの通り Haskell で SSH Public Key の FingerPrint を計算することになったので，そのために色々調べたメモ書き．&lt;/p&gt;
&lt;h2 id=&#34;fingerprint&#34;&gt;FingerPrint&lt;/h2&gt;
&lt;p&gt;そもそもどういうアルゴリズムで出しているのか． ちょうど良い記事があった，ありがたい:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/hotpepsi/items/128f3a660cee8b5467c6&#34;&gt;RSA公開鍵のファイル形式とfingerprint - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要するに Base64 デコードして MD5 ハッシュをかければ良いようだ（本来は SHA256 の方が良いっぽいけど）． 上記記事では Base64 デコードしてできた &lt;a href=&#34;https://www.ietf.org/rfc/rfc4253.txt&#34;&gt;RFC4253&lt;/a&gt; の中身まで説明してくれており，最後の Ruby プログラムではバイナリをちゃんと読んだ上で FingerPrint を計算している．&lt;/p&gt;
&lt;p&gt;単純に RSA 形式の Public Key の FingerPrint を計算するだけならそこまでしなくて良さそうだ．&lt;/p&gt;
&lt;h2 id=&#34;haskell-で計算する&#34;&gt;Haskell で計算する&lt;/h2&gt;
&lt;p&gt;上述の通りやることは2つ&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;Base64 デコード&lt;/li&gt;
&lt;li&gt;MD5 ハッシュ化&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;あとその前に header と body を切り分ける．&lt;/p&gt;
&lt;p&gt;ちなみに，最終的なコードは &lt;a href=&#34;https://github.com/haskell-jp/playground/pull/1&#34;&gt;haskell-jp/playground&lt;/a&gt; においた．&lt;/p&gt;
&lt;h3 id=&#34;header-と-body-を切り分ける&#34;&gt;header と body を切り分ける&lt;/h3&gt;
&lt;p&gt;RSA の Public Key は &lt;code&gt;ssh-rsa AAAAXXX...&lt;/code&gt; となっている（&lt;code&gt;X&lt;/code&gt; 以降は適当）． 欲しいのは空白よりあとだけなので，まずはそこを切り出す（ついでにバリデーションする）． 後々楽なので全部 &lt;code&gt;ByteString&lt;/code&gt; を使うことにする:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Data.ByteString&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;qualified&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Data.ByteString&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;B&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;pubkeyBody ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;pubkeyBody content &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; B.split &lt;span class=&#34;dv&#34;&gt;32&lt;/span&gt; content &lt;span class=&#34;kw&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt;    [header, body] &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; header &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;ssh-rsa&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;AAAA&amp;quot;&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;`B.isPrefixOf`&lt;/span&gt; body &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; body&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34;&gt;&lt;/a&gt;    _ &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Word8&lt;/code&gt; 型の &lt;code&gt;32&lt;/code&gt; は空白．&lt;/p&gt;
&lt;h3 id=&#34;base64-デコード&#34;&gt;Base64 デコード&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://hackage.haskell.org/package/memory&#34;&gt;memory&lt;/a&gt; というパッケージを使う． なぜかというと，この後で使うあらゆる暗号アルゴリズムを詰め込んだ &lt;a href=&#34;http://hackage.haskell.org/package/cryptonite&#34;&gt;cryptonite&lt;/a&gt; というパッケージがこれに依存していたからだ． cryptonite に習って Base64 デコードするとこんな感じだ（ついでにバリデーションする）:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- これが memory パッケージのモジュール&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Data.ByteArray.Encoding&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Base&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Base64&lt;/span&gt;), convertFromBase)&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;decode ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;decode body &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; convertFromBase &lt;span class=&#34;dt&#34;&gt;Base64&lt;/span&gt; body &lt;span class=&#34;kw&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Right&lt;/span&gt; bin &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; prefix &lt;span class=&#34;ot&#34;&gt;`B.isPrefixOf`&lt;/span&gt; bin &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; bin&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;    _ &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;where&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;-- \x00 \x00 \x00 \x07 ssh-rsa (00000007 というのは ssh-rsa の長さ)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34;&gt;&lt;/a&gt;    prefix &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\NUL\NUL\NUL\assh-rsa&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;md5-ハッシュ化&#34;&gt;MD5 ハッシュ化&lt;/h3&gt;
&lt;p&gt;上述の通り，cryptonite というのを用いる． ちなみにこれらのパッケージについては &lt;a href=&#34;https://www.fpcomplete.com/blog/2017/09/cryptographic-hashing-haskell&#34;&gt;Cryptographic Hashing in Haskell - FPComplete&lt;/a&gt; で紹介されてる(&lt;a href=&#34;https://haskell.e-bigmoon.com/posts/2017/09-18-cryptographic-hashing-haskell.html&#34;&gt;邦訳記事&lt;/a&gt;)． 2017年と少し古い記事だが，このパッケージは今でも精力的にメンテナンスがされており，また個人ではなくチーム(&lt;a href=&#34;https://github.com/haskell-crypto&#34;&gt;Haskell Crypto&lt;/a&gt;)で管理している点から信頼できるかなと考えた（暗号系のパッケージは結構シビアだから）．&lt;/p&gt;
&lt;p&gt;このパッケージで何らかのハッシュ関数を利用するには &lt;code&gt;Crypto.Hash.hash&lt;/code&gt; 関数を利用すれば良い． アルゴリズム（MD5 か SHA256 かなど）は返り値の型を明示することで指定できる． 今回の場合は &lt;code&gt;Digest MD5&lt;/code&gt; 型とすれば良い:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Crypto.Hash&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Digest&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;MD5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;qualified&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Crypto.Hash&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Crypto&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ot&#34;&gt;fingerprint ::&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ByteString&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Digest&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;MD5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;fingerprint content &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;  body &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; pubkeyBody content&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;  bin  &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; decode body&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; Crypto.hash bin&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;試す&#34;&gt;試す&lt;/h2&gt;
&lt;p&gt;GHCi で適当に:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode haskell&#34;&gt;&lt;code class=&#34;sourceCode haskell&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;set &lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;XOverloadedString&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Crypto.SSH.PubKey&lt;/span&gt;      &lt;span class=&#34;co&#34;&gt;-- 今まで定義してた関数のモジュール&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; fingerprint &lt;span class=&#34;st&#34;&gt;&amp;quot;ssh-rsa AAAA...&amp;quot;&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 適当に public key の中身を貼り付ける&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;f3b17672020e4e8ad25516034facc12d&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GitHub では8ビットごとに &lt;code&gt;:&lt;/code&gt; で区切られてるが，まぁそれはいいでしょ．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;意外とこういう Crypto 系のテーマの Haskell コードの例って少ないよね． 全部コード読んで試したよ．&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>https://matsubara0507.github.io/posts/2019-12-22-json-parser-using-elixir.html</id><title type="text">Elixir による JSON Parser</title><updated>2019-12-22T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2019-12-22-json-parser-using-elixir.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;「&lt;a href=&#34;https://matsubara0507.github.io/posts/2019-12-08-re-create-thank-you-stars-ver-elixir.html&#34;&gt;久しぶりに thank_you_stars をビルドする&lt;/a&gt;」の続きというかおまけというかって感じの記事です． この記事の最後で poison を抜いてお手製 JSON パーサーを組み込みました． 綺麗に整えたので記事にまとめる．&lt;/p&gt;
&lt;h2 id=&#34;実装する&#34;&gt;実装する&lt;/h2&gt;
&lt;p&gt;外部パッケージを使えない縛りなので，完全な Pure Elixir で実装していく．&lt;/p&gt;
&lt;h3 id=&#34;result-型&#34;&gt;Result 型&lt;/h3&gt;
&lt;p&gt;その前に便利モジュールを作っておく． いわゆる &lt;code&gt;Either&lt;/code&gt; 型だ．&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# Result e a = {:error, e} | {:ok, a} のような型を扱う&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defmodule&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;ThankYouStars&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# {:ok, a}, {:error, e} をそのまま返す&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; success(v), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, v}&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; failure(v), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: {&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, v}&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# {:ok, a} だった場合に {:ok, f(a)} を返す (f は a -&amp;gt; b)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; map({&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, v}, f), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: success(f&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;(v))&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; map(err &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; {&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, _}, _), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: err&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# {:ok, a} だった場合に f(a) を返す (f は a -&amp;gt; Result e b)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; and_then({&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, v}, f), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: f&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;(v)&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; and_then(err &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; {&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, _}, _), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: err&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# {:error, e} だった場合に {:error, f(e)} を返す (f は e -&amp;gt; b)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; map_error({&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, e}, f), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: failure(f&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;(e))&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; map_error(r &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, _}, _), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: r&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これを作っておくと &lt;code&gt;{:ok, a} | {:error, e}&lt;/code&gt; なデータ型をパイプラインと組み合わせて利用できるようになる(実はプリミティブあったりしないよね？)．&lt;/p&gt;
&lt;h3 id=&#34;状態のデータ構造&#34;&gt;状態のデータ構造&lt;/h3&gt;
&lt;p&gt;シンプルにパース結果と残りの文字列を保存する連想配列を持ち回ることにする:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defmodule&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;ThankYouStars&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;cn&#34;&gt;JSON&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;im&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;ThankYouStars&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;as:&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; decode(str) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;    init_stat(str)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; match_element() &lt;span class=&#34;co&#34;&gt;# これがパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;co&#34;&gt;# パースが成功した場合 {:ok} かつ残り文字列が空になる想定&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; result}} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success(result)&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;      {_, %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; rest}} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;failure(rest)&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# rest が残り文字列で result がパース結果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; init_stat(str), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; str, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; %{}}&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;今回実装する JSON パーサーは最終的に Elixir の連想配列や配列，真偽値や文字列などのプリミティブなデータ型へ変換することとする． なので，初期値として空の連想配列 &lt;code&gt;%{}&lt;/code&gt; を渡している．&lt;/p&gt;
&lt;h3 id=&#34;json.org&#34;&gt;JSON.org&lt;/h3&gt;
&lt;p&gt;JSON の(基本的な)構文定義は &lt;a href=&#34;https://json.org&#34;&gt;JSON.org&lt;/a&gt; に書いてある． ご丁寧に BNF が書いてあるので，これに沿って実装するだけだ． 例えば，こんな感じの BNF が記述されている:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;json&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;  := element&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;element&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;  := ws value ws&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;value&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt;  := object&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34;&gt;&lt;/a&gt;   | array&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34;&gt;&lt;/a&gt;   | string&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34;&gt;&lt;/a&gt;   | number&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34;&gt;&lt;/a&gt;   | &amp;quot;true&amp;quot;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34;&gt;&lt;/a&gt;   | &amp;quot;false&amp;quot;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34;&gt;&lt;/a&gt;   | &amp;quot;null&amp;quot;&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34;&gt;&lt;/a&gt;ws&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34;&gt;&lt;/a&gt;  := ... // 空白除去&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これをパターンマッチを駆使して実装するとこんな感じ:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_element(stat) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;  trim_leading(stat) &lt;span class=&#34;co&#34;&gt;# rest の前方の空白を除去します&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; match_value()&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;map(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;trim_leading(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# match_string や match_array はあとで&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_value(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;true&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; rest})&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_value(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;false&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; rest})&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_value(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;null&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; rest})&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_value(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; _}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: match_string(stat)&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_value(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;[&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; _}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: match_array(stat)&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_value(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;{&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; _}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: match_object(stat)&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_value(stat), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: match_number(stat)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;match_xxx&lt;/code&gt; 系の関数は全て前述した &lt;code&gt;Result e a&lt;/code&gt; 型を返すイメージ(&lt;code&gt;e&lt;/code&gt; も &lt;code&gt;a&lt;/code&gt; も前述した状態の連想配列だが)．&lt;/p&gt;
&lt;h3 id=&#34;オブジェクトのパース&#34;&gt;オブジェクトのパース&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;{}&lt;/code&gt; で囲まれた連想配列のようなもの，例えば &lt;code&gt;{ &amp;quot;key&amp;quot; : true }&lt;/code&gt; がオブジェクトだ:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;object&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;  := &amp;#39;{&amp;#39; ws &amp;#39;}&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;   | &amp;#39;{&amp;#39; members &amp;#39;}&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;members&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34;&gt;&lt;/a&gt;  := member&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34;&gt;&lt;/a&gt;   | member &amp;#39;,&amp;#39; members&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34;&gt;&lt;/a&gt;member&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34;&gt;&lt;/a&gt;  := ws string ws &amp;#39;:&amp;#39; element&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34;&gt;&lt;/a&gt;string&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34;&gt;&lt;/a&gt;  := ... // 文字列&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;文字列の部分はあとで実装するとして，他の部分だけをパターンマッチとパイプを利用して実装するとこんな感じ:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# parse_when_unmatch_by(stat, char, parser) は&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# char の文字列にマッチしなければ parser を実行し&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# マッチした場合は parser を実行せずに stat をそのまま返す&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_object(stat) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;  match_left_par(stat)                               &lt;span class=&#34;co&#34;&gt;# `{` にマッチ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;map(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;trim_leading(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))                   &lt;span class=&#34;co&#34;&gt;# 空白除去&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;update_stat(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;:result&lt;/span&gt;, %{})) &lt;span class=&#34;co&#34;&gt;# 状態の result を空オブジェクト %{} に更新&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;parse_when_unmatch_by(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;}&amp;quot;&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;fn&lt;/span&gt; s &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; match_members(s) &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_right_par(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))           &lt;span class=&#34;co&#34;&gt;# `}` にマッチ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_members(stat) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34;&gt;&lt;/a&gt;  match_member(stat)&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_members_tail(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# match_members_tail は members の再帰処理をする&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# 先頭が `,` にマッチした時には再帰処理を行い&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# マッチしない場合は stat をそのまま返す&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_members_tail(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest}) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34;&gt;&lt;/a&gt;  update_stat(stat, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_members(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_members_tail(stat), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success(stat)&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_member(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# 空白を除去してから文字列にマッチさせてみる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; match_string(trim_leading(stat)) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34;&gt;&lt;/a&gt;    {&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, stat} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;failure(stat)&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;# string のパースに成功した場合にのみ，そのパース結果を `key` として残りをパースする&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34;&gt;&lt;/a&gt;    {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; key}} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34;&gt;&lt;/a&gt;      trim_leading(stat)&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; match_colon() &lt;span class=&#34;co&#34;&gt;# &amp;#39;:&amp;#39; にマッチ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_element(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &lt;span class=&#34;co&#34;&gt;#match_element は前のと同じ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;modify_stat(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;:result&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;fn&lt;/span&gt; v &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;put(prev, key, v) &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;update_stat(stat, key, value)&lt;/code&gt; は &lt;code&gt;stat&lt;/code&gt; の &lt;code&gt;key&lt;/code&gt; を &lt;code&gt;value&lt;/code&gt; で置き換える関数で，&lt;code&gt;modify_stat(stat, key, func)&lt;/code&gt; は &lt;code&gt;stat&lt;/code&gt; の &lt;code&gt;key&lt;/code&gt; を &lt;code&gt;func&lt;/code&gt; で更新する関数だ．&lt;/p&gt;
&lt;p&gt;余談だが，Elixir は(僕が思うに)普通の関数それ自体は第一級では無いが，無名関数 &lt;code&gt;fn args -&amp;gt; ... end&lt;/code&gt; は第一級のようだ． &lt;code&gt;&amp;amp;any_function(&amp;amp;1, &amp;amp;2)&lt;/code&gt; などとすることで &lt;code&gt;fn arg1 arg2 -&amp;gt; any_function(arg1, arg2) end&lt;/code&gt; の糖衣構文になるっぽく，関数を関数の引数に渡す場合はこうするらしい． ただし，この記法は入れ子にできないので，&lt;code&gt;modify_stat&lt;/code&gt; や &lt;code&gt;parse_when_unmatch_by&lt;/code&gt; では内部の方の関数を &lt;code&gt;fn args -&amp;gt; ... end&lt;/code&gt; で直接囲っている(&lt;a href=&#34;https://stackoverflow.com/questions/38217426/can-i-nest-anonymous-functions-in-elixir&#34;&gt;参照&lt;/a&gt;)．&lt;/p&gt;
&lt;h3 id=&#34;配列のパース&#34;&gt;配列のパース&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;array&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;  := &amp;#39;[&amp;#39; ws &amp;#39;]&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;   | &amp;#39;[&amp;#39; elements &amp;#39;]&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34;&gt;&lt;/a&gt;elements&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34;&gt;&lt;/a&gt;  := element&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34;&gt;&lt;/a&gt;   | element &amp;#39;,&amp;#39; elements&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実は &lt;code&gt;{}&lt;/code&gt; が &lt;code&gt;[]&lt;/code&gt; になっただけで，だいたいオブジェクトと同じだ:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_array(stat) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34;&gt;&lt;/a&gt;  match_left_square(stat)                           &lt;span class=&#34;co&#34;&gt;# &amp;#39;[&amp;#39; にマッチ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;map(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;trim_leading(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))                  &lt;span class=&#34;co&#34;&gt;# 空白除去&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;update_stat(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;:result&lt;/span&gt;, [])) &lt;span class=&#34;co&#34;&gt;# 状態の result を空配列 [] に更新&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;parse_when_unmatch_by(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;]&amp;quot;&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;fn&lt;/span&gt; s &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; match_elements(s) &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_right_square(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))       &lt;span class=&#34;co&#34;&gt;# &amp;#39;]&amp;#39; にマッチ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_elements(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34;&gt;&lt;/a&gt;  match_element(stat)&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# ここで状態(配列)の更新をしてる点だけが違う&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;modify_stat(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;:result&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;fn&lt;/span&gt; v &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; [v] &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_elements_tail(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_elements_tail(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest}) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34;&gt;&lt;/a&gt;  update_stat(stat, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_elements(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_elements_tail(stat), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success(stat)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;文字列のパース&#34;&gt;文字列のパース&lt;/h3&gt;
&lt;p&gt;さぁこっからが大変． 文字列内でのエスケープをそれっぽく処理する必要がある:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_string(stat) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34;&gt;&lt;/a&gt;  match_double_quote(stat)                          &lt;span class=&#34;co&#34;&gt;# &amp;#39;&amp;quot;&amp;#39; にマッチ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;update_stat(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;:result&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)) &lt;span class=&#34;co&#34;&gt;# 状態の result を空文字列 &amp;quot;&amp;quot; に更新&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_characters(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_double_quote(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))       &lt;span class=&#34;co&#34;&gt;# &amp;#39;&amp;quot;&amp;#39; にマッチ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# どう見ても成功じゃ無いがどーせ後々エラーになるので...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_characters(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success(stat)&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# &amp;#39;&amp;quot;&amp;#39; にマッチしたら終わり&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_characters(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; _}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success(stat)&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_characters(stat) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# &amp;quot;\&amp;quot; はエスケープ文字として処理する必要があるのでまずはそれ以外&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34;&gt;&lt;/a&gt;  parse_when_unmatch_by(stat, &lt;span class=&#34;st&#34;&gt;&amp;quot;\\&amp;quot;&lt;/span&gt;, &lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_noescape_characters(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_escape(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))     &lt;span class=&#34;co&#34;&gt;# 次にエスケープ文字の処理&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;match_characters(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &lt;span class=&#34;co&#34;&gt;# 再帰する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;関数名の通り，&lt;code&gt;match_noescape_characters&lt;/code&gt; がエスケープ文字以外のパーサーで，&lt;code&gt;match_escape&lt;/code&gt; がエスケープ文字のパーサーだ． &lt;code&gt;match_noescape_characters&lt;/code&gt; ではまず &lt;code&gt;\&lt;/code&gt; や &lt;code&gt;&amp;quot;&lt;/code&gt; を含まない文字列をマッチさせたい． しかし，パターンマッチは exclude なマッチはできないので，あんまり良く無いが正規表現でサボることにする:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# エスケープされてない文字はダメっぽい&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_noescape_characters(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; _}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;failure(stat)&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_noescape_characters(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; _}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;failure(stat)&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_noescape_characters(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\u0000&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; _}), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;failure(stat)&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_noescape_characters(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# 名前付きキャプチャ，便利&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34;&gt;&lt;/a&gt;  %{&lt;span class=&#34;st&#34;&gt;&amp;quot;body&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&amp;gt;&lt;/span&gt; body, &lt;span class=&#34;st&#34;&gt;&amp;quot;rest&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&amp;gt;&lt;/span&gt; rest} &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cn&#34;&gt;Regex&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;named_captures(&lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;r&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;(?&lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;[&lt;span class=&#34;op&#34;&gt;^&lt;/span&gt;\\\&lt;span class=&#34;st&#34;&gt;&amp;quot;\n\x00\t]*)(?&amp;lt;rest&amp;gt;.*)/s, stat[:rest])&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;st&#34;&gt;  update_stat(%{result: prev &amp;lt;&amp;gt; body}, :rest, rest)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;st&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;エスケープ文字は，もうパターンマッチで頑張る:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_escape(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\\&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}),&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: update_stat(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\&amp;quot;&amp;quot;&lt;/span&gt;}, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_escape(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\\\&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}),&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: update_stat(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\&amp;quot;&lt;/span&gt;}, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_escape(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\\/&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}),&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: update_stat(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\/&amp;quot;&lt;/span&gt;}, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_escape(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\b&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}),&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: update_stat(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\b&amp;quot;&lt;/span&gt;}, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_escape(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\f&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}),&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: update_stat(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\f&amp;quot;&lt;/span&gt;}, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_escape(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\n&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}),&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: update_stat(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;}, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_escape(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\r&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}),&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: update_stat(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\r&amp;quot;&lt;/span&gt;}, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_escape(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\t&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}),&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: update_stat(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;}, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# \u1234 とかいうやつ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_escape(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\u&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev}) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# /.{n,m}/ で n 個以上 m 個以下にマッチする&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Regex&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;named_captures(&lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;r&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;(?&lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;[\dA&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;cn&#34;&gt;Fa&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;f]{&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;})(?&lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;rest&lt;span class=&#34;op&#34;&gt;&amp;gt;.*&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;s, rest) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34;&gt;&lt;/a&gt;    %{&lt;span class=&#34;st&#34;&gt;&amp;quot;body&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&amp;gt;&lt;/span&gt; body, &lt;span class=&#34;st&#34;&gt;&amp;quot;rest&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&amp;gt;&lt;/span&gt; rest} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-30&#34;&gt;&lt;a href=&#34;#cb11-30&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;co&#34;&gt;# 4桁の16進数をエスケープされた文字列として変換する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-31&#34;&gt;&lt;a href=&#34;#cb11-31&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;co&#34;&gt;# 変換できなかった場合は nil が返ってくる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-32&#34;&gt;&lt;a href=&#34;#cb11-32&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; hex_to_string(body) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-33&#34;&gt;&lt;a href=&#34;#cb11-33&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;failure(stat)&lt;/span&gt;
&lt;span id=&#34;cb11-34&#34;&gt;&lt;a href=&#34;#cb11-34&#34;&gt;&lt;/a&gt;        hex &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; update_stat(%{&lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; prev &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; hex}, &lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb11-35&#34;&gt;&lt;a href=&#34;#cb11-35&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-36&#34;&gt;&lt;a href=&#34;#cb11-36&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-37&#34;&gt;&lt;a href=&#34;#cb11-37&#34;&gt;&lt;/a&gt;    _ &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-38&#34;&gt;&lt;a href=&#34;#cb11-38&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;failure(stat)&lt;/span&gt;
&lt;span id=&#34;cb11-39&#34;&gt;&lt;a href=&#34;#cb11-39&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-40&#34;&gt;&lt;a href=&#34;#cb11-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-41&#34;&gt;&lt;a href=&#34;#cb11-41&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-42&#34;&gt;&lt;a href=&#34;#cb11-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; hex_to_string(str) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-43&#34;&gt;&lt;a href=&#34;#cb11-43&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-44&#34;&gt;&lt;a href=&#34;#cb11-44&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;# 文字列を16進数として int 型に変換&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-45&#34;&gt;&lt;a href=&#34;#cb11-45&#34;&gt;&lt;/a&gt;    {hex, _} &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;parse(str, &lt;span class=&#34;dv&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-46&#34;&gt;&lt;a href=&#34;#cb11-46&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;va&#34;&gt;hex::utf8&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;# こういう記法で int を16進数でエスケープされた文字列に変換できる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-47&#34;&gt;&lt;a href=&#34;#cb11-47&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;rescue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-48&#34;&gt;&lt;a href=&#34;#cb11-48&#34;&gt;&lt;/a&gt;    _ &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-49&#34;&gt;&lt;a href=&#34;#cb11-49&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-50&#34;&gt;&lt;a href=&#34;#cb11-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;まぁ正直，色々と雑で漏れてるケースもきっとあるのだが，そんな変な JSON をパースしたいわけでは無いのでこれでいいかな．&lt;/p&gt;
&lt;h3 id=&#34;数値のパース&#34;&gt;数値のパース&lt;/h3&gt;
&lt;p&gt;数値は，マイナス符号・整数・浮動小数点数・&lt;code&gt;e&lt;/code&gt;記法を網羅する必要がある． これも，めんどくさいので正規表現に頼っちゃう:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_number(stat) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34;&gt;&lt;/a&gt;  {value, rest} &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; compile_number(stat[&lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# 文字列から数値を取得できなかった場合は nil が返ってくる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; value &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;failure(stat)&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34;&gt;&lt;/a&gt;    _ &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cn&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;put(stat, &lt;span class=&#34;va&#34;&gt;:result&lt;/span&gt;, value)&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;put(&lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success()&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-15&#34;&gt;&lt;a href=&#34;#cb12-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-16&#34;&gt;&lt;a href=&#34;#cb12-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; compile_number(str) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-17&#34;&gt;&lt;a href=&#34;#cb12-17&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# 名前付きキャプチャ，超便利&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-18&#34;&gt;&lt;a href=&#34;#cb12-18&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# minus は `-`，digit は整数部，frac は小数点以下，exp は `e`記法 (`10e-2`とか)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-19&#34;&gt;&lt;a href=&#34;#cb12-19&#34;&gt;&lt;/a&gt;  %{&lt;span class=&#34;st&#34;&gt;&amp;quot;minus&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&amp;gt;&lt;/span&gt; minus, &lt;span class=&#34;st&#34;&gt;&amp;quot;digit&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&amp;gt;&lt;/span&gt; digit, &lt;span class=&#34;st&#34;&gt;&amp;quot;frac&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&amp;gt;&lt;/span&gt; frac, &lt;span class=&#34;st&#34;&gt;&amp;quot;exp&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&amp;gt;&lt;/span&gt; exp, &lt;span class=&#34;st&#34;&gt;&amp;quot;rest&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&amp;gt;&lt;/span&gt; rest} &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-20&#34;&gt;&lt;a href=&#34;#cb12-20&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cn&#34;&gt;Regex&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;named_captures(&lt;/span&gt;
&lt;span id=&#34;cb12-21&#34;&gt;&lt;a href=&#34;#cb12-21&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;r&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;(?&lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;minus&lt;span class=&#34;op&#34;&gt;&amp;gt;-&lt;/span&gt;?)(?&lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;digit&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;[[&lt;span class=&#34;va&#34;&gt;:digit&lt;/span&gt;:]]&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;)(?&lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;frac&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;\&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;?[[&lt;span class=&#34;va&#34;&gt;:digit&lt;/span&gt;:]]&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;)(?&lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;exp&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;[eE]?[&lt;span class=&#34;op&#34;&gt;-+&lt;/span&gt;]?[[&lt;span class=&#34;va&#34;&gt;:digit&lt;/span&gt;:]]&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;)(?&lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;rest&lt;span class=&#34;op&#34;&gt;&amp;gt;.*&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;s,&lt;/span&gt;
&lt;span id=&#34;cb12-22&#34;&gt;&lt;a href=&#34;#cb12-22&#34;&gt;&lt;/a&gt;      str&lt;/span&gt;
&lt;span id=&#34;cb12-23&#34;&gt;&lt;a href=&#34;#cb12-23&#34;&gt;&lt;/a&gt;    )&lt;/span&gt;
&lt;span id=&#34;cb12-24&#34;&gt;&lt;a href=&#34;#cb12-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-25&#34;&gt;&lt;a href=&#34;#cb12-25&#34;&gt;&lt;/a&gt;  value &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-26&#34;&gt;&lt;a href=&#34;#cb12-26&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; {digit, frac, exp} &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-27&#34;&gt;&lt;a href=&#34;#cb12-27&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, _, _} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-28&#34;&gt;&lt;a href=&#34;#cb12-28&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;# 整数部が無い場合はダメ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-29&#34;&gt;&lt;a href=&#34;#cb12-29&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-30&#34;&gt;&lt;a href=&#34;#cb12-30&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;st&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; num, &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;} &lt;span class=&#34;kw&#34;&gt;when&lt;/span&gt; num&lt;span class=&#34;op&#34;&gt; !=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-31&#34;&gt;&lt;a href=&#34;#cb12-31&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;# 0 から始まる整数もダメ(小数はOK)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-32&#34;&gt;&lt;a href=&#34;#cb12-32&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-33&#34;&gt;&lt;a href=&#34;#cb12-33&#34;&gt;&lt;/a&gt;      {_, &lt;span class=&#34;st&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; num, _} &lt;span class=&#34;kw&#34;&gt;when&lt;/span&gt; num &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-34&#34;&gt;&lt;a href=&#34;#cb12-34&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;# 小数点だけはダメ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-35&#34;&gt;&lt;a href=&#34;#cb12-35&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-36&#34;&gt;&lt;a href=&#34;#cb12-36&#34;&gt;&lt;/a&gt;      {_, _, &lt;span class=&#34;st&#34;&gt;&amp;quot;e&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; num} &lt;span class=&#34;kw&#34;&gt;when&lt;/span&gt; num &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-37&#34;&gt;&lt;a href=&#34;#cb12-37&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;# e だけはダメ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-38&#34;&gt;&lt;a href=&#34;#cb12-38&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-39&#34;&gt;&lt;a href=&#34;#cb12-39&#34;&gt;&lt;/a&gt;      {_, _, &lt;span class=&#34;st&#34;&gt;&amp;quot;E&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; num} &lt;span class=&#34;kw&#34;&gt;when&lt;/span&gt; num &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-40&#34;&gt;&lt;a href=&#34;#cb12-40&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;# E だけはダメ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-41&#34;&gt;&lt;a href=&#34;#cb12-41&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-42&#34;&gt;&lt;a href=&#34;#cb12-42&#34;&gt;&lt;/a&gt;      {_, &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;# これは整数の場合&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-43&#34;&gt;&lt;a href=&#34;#cb12-43&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;parse(minus &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; digit) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-44&#34;&gt;&lt;a href=&#34;#cb12-44&#34;&gt;&lt;/a&gt;          {num, &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; num&lt;/span&gt;
&lt;span id=&#34;cb12-45&#34;&gt;&lt;a href=&#34;#cb12-45&#34;&gt;&lt;/a&gt;          _ &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-46&#34;&gt;&lt;a href=&#34;#cb12-46&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-47&#34;&gt;&lt;a href=&#34;#cb12-47&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-48&#34;&gt;&lt;a href=&#34;#cb12-48&#34;&gt;&lt;/a&gt;      _ &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;# これは浮動小数点数の場合&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-49&#34;&gt;&lt;a href=&#34;#cb12-49&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Float&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;parse(minus &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; digit &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; frac &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; exp) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-50&#34;&gt;&lt;a href=&#34;#cb12-50&#34;&gt;&lt;/a&gt;          {num, &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; num&lt;/span&gt;
&lt;span id=&#34;cb12-51&#34;&gt;&lt;a href=&#34;#cb12-51&#34;&gt;&lt;/a&gt;          _ &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-52&#34;&gt;&lt;a href=&#34;#cb12-52&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-53&#34;&gt;&lt;a href=&#34;#cb12-53&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-54&#34;&gt;&lt;a href=&#34;#cb12-54&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-55&#34;&gt;&lt;a href=&#34;#cb12-55&#34;&gt;&lt;/a&gt;  {value, rest}&lt;/span&gt;
&lt;span id=&#34;cb12-56&#34;&gt;&lt;a href=&#34;#cb12-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでとりあえず完成．&lt;/p&gt;
&lt;h2 id=&#34;テストする&#34;&gt;テストする&lt;/h2&gt;
&lt;p&gt;JSON のテストスイートとして &lt;a href=&#34;https://github.com/nst/JSONTestSuite&#34;&gt;nst/JSONTestSuite&lt;/a&gt; と言うのがあるので使わせてもらう． こんな感じに配置する:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34;&gt;&lt;/a&gt;\&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34;&gt;&lt;/a&gt;|- lib // elixir のコード置き場&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34;&gt;&lt;/a&gt;|- test&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34;&gt;&lt;/a&gt;|  |- fixture&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34;&gt;&lt;/a&gt;|  |  \- test_parsing // JSONTestSuite のテスト用 JSON ファイル群&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34;&gt;&lt;/a&gt;|  \- json_spec.exs&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34;&gt;&lt;/a&gt;\- mix.exs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;テストには espec を使ってこんな感じに記述した:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# json_spec.exs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defmodule&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;JSONSuite&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; test_suite &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34;&gt;&lt;/a&gt;    [&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;co&#34;&gt;# エラーケース&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;st&#34;&gt;&amp;quot;n_array_1_true_without_comma.json&amp;quot;&lt;/span&gt;, {&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt;}},&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;st&#34;&gt;&amp;quot;n_array_a_invalid_utf8.json&amp;quot;&lt;/span&gt;, {&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt;}},&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;co&#34;&gt;# 成功ケース&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;st&#34;&gt;&amp;quot;y_array_arraysWithSpaces.json&amp;quot;&lt;/span&gt;, {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, [[]]}},&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;st&#34;&gt;&amp;quot;y_array_empty-string.json&amp;quot;&lt;/span&gt;, {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, [&lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;]}},&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34;&gt;&lt;/a&gt;    ]&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-15&#34;&gt;&lt;a href=&#34;#cb14-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-16&#34;&gt;&lt;a href=&#34;#cb14-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-17&#34;&gt;&lt;a href=&#34;#cb14-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# JSONSuite を先に宣言しないと使えなかった&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-18&#34;&gt;&lt;a href=&#34;#cb14-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defmodule&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;JSONSpec&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-19&#34;&gt;&lt;a href=&#34;#cb14-19&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;im&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;ESpec&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-20&#34;&gt;&lt;a href=&#34;#cb14-20&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;im&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;ThankYouStars&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;cn&#34;&gt;JSON&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;as:&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;JSON&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-21&#34;&gt;&lt;a href=&#34;#cb14-21&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;im&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;ThankYouStars&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;as:&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-22&#34;&gt;&lt;a href=&#34;#cb14-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-23&#34;&gt;&lt;a href=&#34;#cb14-23&#34;&gt;&lt;/a&gt;  describe &lt;span class=&#34;st&#34;&gt;&amp;quot;JSON.decode&amp;quot;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-24&#34;&gt;&lt;a href=&#34;#cb14-24&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cn&#34;&gt;Enum&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;map(&lt;span class=&#34;cn&#34;&gt;JSONSuite&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;test_suite(), &lt;span class=&#34;kw&#34;&gt;fn&lt;/span&gt; {path, result} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-25&#34;&gt;&lt;a href=&#34;#cb14-25&#34;&gt;&lt;/a&gt;      context path &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-26&#34;&gt;&lt;a href=&#34;#cb14-26&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;# 変数を利用するには unquote する必要がある(マクロのせい？)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-27&#34;&gt;&lt;a href=&#34;#cb14-27&#34;&gt;&lt;/a&gt;        let(&lt;span class=&#34;va&#34;&gt;:json&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: &lt;span class=&#34;cn&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;read!(&lt;span class=&#34;st&#34;&gt;&amp;quot;test/fixture/test_parsing/&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;unquote&lt;/span&gt;(path)&lt;span class=&#34;ot&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb14-28&#34;&gt;&lt;a href=&#34;#cb14-28&#34;&gt;&lt;/a&gt;        it(&lt;/span&gt;
&lt;span id=&#34;cb14-29&#34;&gt;&lt;a href=&#34;#cb14-29&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb14-30&#34;&gt;&lt;a href=&#34;#cb14-30&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;map_error(&lt;span class=&#34;cn&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;decode(json()), &lt;span class=&#34;kw&#34;&gt;fn&lt;/span&gt; _ &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-31&#34;&gt;&lt;a href=&#34;#cb14-31&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; to(eq(&lt;span class=&#34;kw&#34;&gt;unquote&lt;/span&gt;(&lt;span class=&#34;cn&#34;&gt;Macro&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;escape(result))))&lt;/span&gt;
&lt;span id=&#34;cb14-32&#34;&gt;&lt;a href=&#34;#cb14-32&#34;&gt;&lt;/a&gt;        )&lt;/span&gt;
&lt;span id=&#34;cb14-33&#34;&gt;&lt;a href=&#34;#cb14-33&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-34&#34;&gt;&lt;a href=&#34;#cb14-34&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-35&#34;&gt;&lt;a href=&#34;#cb14-35&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-36&#34;&gt;&lt;a href=&#34;#cb14-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;unquote&lt;/code&gt; やらモジュールの順序周りやら結構苦労した． なお，いくつかテストの通らない JSONTestSuite のケースがあるので，そう言うのはとりあえずコメントアウトしてる．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;意外と綺麗にかけて満足． なお，パフォーマンスは無視してる笑．&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>https://matsubara0507.github.io/posts/2019-12-10-tapl-with-elm-part3.html</id><title type="text">Elm で作る TaPL のラムダ計算（その３）</title><updated>2019-12-10T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2019-12-10-tapl-with-elm-part3.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;本記事は「&lt;a href=&#34;https://adventar.org/calendars/4212&#34;&gt;IGGG Advent Calendar 2019&lt;/a&gt;」の10日目の記事です．&lt;/p&gt;
&lt;h1 id=&#34;section&#34;&gt;&lt;/h1&gt;
&lt;p&gt;表題の通り，TaPL という書籍で紹介されているプログラミング言語の実装例を Elm でやってみたという話です（その３）． &lt;a href=&#34;https://matsubara0507.github.io/posts/2019-12-06-tapl-with-elm-part1.html&#34;&gt;その１&lt;/a&gt;と&lt;a href=&#34;https://matsubara0507.github.io/posts/2019-12-07-tapl-with-elm-part2.html&#34;&gt;その２&lt;/a&gt;はこちら．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第4章 算術式のML実装&lt;/li&gt;
&lt;li&gt;第7章 ラムダ計算の ML 実装&lt;/li&gt;
&lt;li&gt;第10章 単純型のML実装 (本記事はココ)
&lt;ul&gt;
&lt;li&gt;7章のを型付きラムダ計算にする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;第17章 部分型付けの ML 実装&lt;/li&gt;
&lt;li&gt;第25章 System F の ML 実装
&lt;ul&gt;
&lt;li&gt;最後に型の多相性を追加&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;実装は全て下記のリポジトリにあげています:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsubara0507/ELaMbda&#34;&gt;matsubara0507/ELaMbda - GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また，今まで同様に&lt;a href=&#34;https://matsubara0507.github.io/ELaMbda/?chap=chap10&#34;&gt;Web ブラウザから遊べるようになってます&lt;/a&gt;．&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://matsubara0507.github.io/ELaMbda/?chap=chap10&amp;amp;exp=(\x%20:%20Bool%20.%20if%20x%20then%20x%20else%20(\f%20:%20Bool%20-%3E%20Bool%20-%3E%20Bool%20.%20f%20x%20x)%20(\x%20:%20Bool%20.%20\y%20:%20Bool%20.%20y))%20(if%20true%20then%20false%20else%20true)&#34;&gt;&lt;img src=&#34;/assets/tapl-with-elm/chap10.jpg&#34;&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;第10章-単純型の-ml-実装&#34;&gt;第10章 単純型の ML 実装&lt;/h2&gt;
&lt;p&gt;さて，いよいよみんな大好き「型」の登場だ． 10章は少し面白くて，4章で実装した算術式の真偽値に関する部分と7章の型なしラムダ計算を組み合わせて，更にそれに型をのせるプログラミング言語を実装する． つまり，今までの実装をちゃんとやっていれば割とサクッとできています．&lt;/p&gt;
&lt;h1 id=&#34;section-1&#34;&gt;&lt;/h1&gt;
&lt;p&gt;なお，同期各位は全然やらなかったせいか10章を5週ぐらいやっている笑．&lt;/p&gt;
&lt;h3 id=&#34;構文規則&#34;&gt;構文規則&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;t := x       [変数]&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;   | \x:T.t  [ラムダ抽象]&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;   | t t     [関数適用]&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;   | true&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;   | false&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;   | if t then t else t&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34;&gt;&lt;/a&gt;v := \x:T.t&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34;&gt;&lt;/a&gt;   | true&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34;&gt;&lt;/a&gt;   | false&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34;&gt;&lt;/a&gt;T := Bool    [真偽値型]&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34;&gt;&lt;/a&gt;   | T -&amp;gt; T  [関数型]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ラムダ抽象には型注釈(&lt;code&gt;:T&lt;/code&gt; の部分)がある． なんで付けるのかとかは9章に書いてあるのでぜひ TaPL を買って読んでください(おい)． これを Elm の型として実装する:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- Arrow の Arr ね&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Bool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;False&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Binding&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Binding&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;NameBind&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;型の型 &lt;code&gt;Ty&lt;/code&gt; 以外は，4章と7章の &lt;code&gt;Term&lt;/code&gt; や &lt;code&gt;isval&lt;/code&gt; を合体させているだけだ．&lt;/p&gt;
&lt;h3 id=&#34;評価規則&#34;&gt;評価規則&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;// 7章の評価規則&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt; t1 =&amp;gt; t1&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;---------------&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt; t1 t2 =&amp;gt; t1&amp;#39; t2&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt; t2 =&amp;gt; t2&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;---------------&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt; v1 t2 =&amp;gt; v1 t2&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34;&gt;&lt;/a&gt; (\x:T.t12) v2 -&amp;gt; [x|-&amp;gt; v2]t12&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34;&gt;&lt;/a&gt;// 4章の評価規則&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34;&gt;&lt;/a&gt; if true then t2 else t3 =&amp;gt; t2&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34;&gt;&lt;/a&gt; if false then t2 else t3 =&amp;gt; t3&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34;&gt;&lt;/a&gt; t1 -&amp;gt; t1&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34;&gt;&lt;/a&gt;-------------------------------------------------&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34;&gt;&lt;/a&gt; if t1 then t2 else t3 =&amp;gt; if t1&amp;#39; then t2 else t3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;評価規則も同様に型注釈の構文が追加されただけでほとんど変わらない． 変わらないということはすなわち，実行時(評価)には型の有無は影響しないということだ． 構文規則同様，4章と7章の実装を組み合わせることで実装が終わる:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;) (&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- あらゆる TmAbs のパターンマッチに Ty のパラメーターを追加する必要はある&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t12&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;termSubstTop&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t12&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t12&lt;/span&gt;)) (&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;flip&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;) (&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;t1_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- t に s を代入する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termSubstTop&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termSubstTop&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;型付け規則&#34;&gt;型付け規則&lt;/h3&gt;
&lt;p&gt;ここからが新しい． いわゆる型検査のことだ． TaPL では「正しく型付けされた項はおかしくならない」という性質(安全性・健全性ともいう)について議論されている(8章で)． 例えば，これから定義する型検査が通った項(&lt;code&gt;Term&lt;/code&gt;)は &lt;code&gt;eval&lt;/code&gt; 関数を適用しても無限ループなどにはならない． さて，そのための型付け規則は次のようになっている:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;// 真偽値の型付け規則&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt; true : Bool&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt; false : Bool&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34;&gt;&lt;/a&gt; t1 : Bool    t2 : T    t3 : T&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34;&gt;&lt;/a&gt;-------------------------------&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34;&gt;&lt;/a&gt; if t1 then t2 else t3 : T&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34;&gt;&lt;/a&gt;// 単純ラムダ計算の型付け規則&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34;&gt;&lt;/a&gt; x : T ∈ Γ&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34;&gt;&lt;/a&gt;-----------&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34;&gt;&lt;/a&gt; Γ ⊢ x : T&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34;&gt;&lt;/a&gt; Γ, x : T1 ⊢ t2 : T2&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34;&gt;&lt;/a&gt;-----------------------------&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34;&gt;&lt;/a&gt; Γ ⊢ \x : T1 . t2 : T1 -&amp;gt; T2&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34;&gt;&lt;/a&gt; Γ ⊢ t1 : T11 -&amp;gt; T12    Γ ⊢ t2 : T11&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34;&gt;&lt;/a&gt;-------------------------------------&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34;&gt;&lt;/a&gt; Γ ⊢ t1 t2 : T12&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここで新しく出てくる &lt;code&gt;Γ&lt;/code&gt; は型環境と言い，変数と型の対応関係を線形リストのような感じに保持している． &lt;code&gt;Γ ⊢ t : T&lt;/code&gt; というのは「型環境 &lt;code&gt;Γ&lt;/code&gt; のもと項 &lt;code&gt;t&lt;/code&gt; は型 &lt;code&gt;T&lt;/code&gt; に型付け可能」という風に読める(たぶん)． まぁ実装してみればわかる(ほんとか？):&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 型環境には Context を再利用する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Binding&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Binding&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;NameBind&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;VarBind&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 変数の型を保持&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 項 t の型が最終的に導出できれば型付け可能ということになる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;-- Context から型情報を引っ張ってくる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;getTypeFromContext&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;co&#34;&gt;-- Context に 変数と型の対応を追加する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;ctx1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;addbinding&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;VarBind&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;-- ラムダ抽象は中の項 t2 が型付け可能である必要がある&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;ty2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; ( &lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; ) &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34;&gt;&lt;/a&gt;                ( &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty11&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty12&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty2&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;co&#34;&gt;-- 関数適用の場合は引数の型 ty11 と適用する項の型 ty2 が同じである必要がある&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty11&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty2&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty12&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-42&#34;&gt;&lt;a href=&#34;#cb6-42&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; ( &lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt; ) &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-43&#34;&gt;&lt;a href=&#34;#cb6-43&#34;&gt;&lt;/a&gt;                ( &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty2&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty3&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-44&#34;&gt;&lt;a href=&#34;#cb6-44&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;co&#34;&gt;-- if-then-else の場合は t2 と t3 の型が同じである必要がある&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-45&#34;&gt;&lt;a href=&#34;#cb6-45&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty3&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-46&#34;&gt;&lt;a href=&#34;#cb6-46&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-47&#34;&gt;&lt;a href=&#34;#cb6-47&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-48&#34;&gt;&lt;a href=&#34;#cb6-48&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-49&#34;&gt;&lt;a href=&#34;#cb6-49&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-50&#34;&gt;&lt;a href=&#34;#cb6-50&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-51&#34;&gt;&lt;a href=&#34;#cb6-51&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-52&#34;&gt;&lt;a href=&#34;#cb6-52&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;getTypeFromContext&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-53&#34;&gt;&lt;a href=&#34;#cb6-53&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;getTypeFromContext&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-54&#34;&gt;&lt;a href=&#34;#cb6-54&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;getbinding&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-55&#34;&gt;&lt;a href=&#34;#cb6-55&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;VarBind&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-56&#34;&gt;&lt;a href=&#34;#cb6-56&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-57&#34;&gt;&lt;a href=&#34;#cb6-57&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-58&#34;&gt;&lt;a href=&#34;#cb6-58&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-59&#34;&gt;&lt;a href=&#34;#cb6-59&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-60&#34;&gt;&lt;a href=&#34;#cb6-60&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-61&#34;&gt;&lt;a href=&#34;#cb6-61&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;getbinding&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Binding&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-62&#34;&gt;&lt;a href=&#34;#cb6-62&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;getbinding&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-63&#34;&gt;&lt;a href=&#34;#cb6-63&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; ( &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; ) &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-64&#34;&gt;&lt;a href=&#34;#cb6-64&#34;&gt;&lt;/a&gt;        ( []&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-65&#34;&gt;&lt;a href=&#34;#cb6-65&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-66&#34;&gt;&lt;a href=&#34;#cb6-66&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-67&#34;&gt;&lt;a href=&#34;#cb6-67&#34;&gt;&lt;/a&gt;        ( ( &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;bind&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;::&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-68&#34;&gt;&lt;a href=&#34;#cb6-68&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;bind&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-69&#34;&gt;&lt;a href=&#34;#cb6-69&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-70&#34;&gt;&lt;a href=&#34;#cb6-70&#34;&gt;&lt;/a&gt;        ( &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;::&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-71&#34;&gt;&lt;a href=&#34;#cb6-71&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;getbinding&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;next&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-72&#34;&gt;&lt;a href=&#34;#cb6-72&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-73&#34;&gt;&lt;a href=&#34;#cb6-73&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;addbinding&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Binding&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-74&#34;&gt;&lt;a href=&#34;#cb6-74&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;addbinding&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;bind&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-75&#34;&gt;&lt;a href=&#34;#cb6-75&#34;&gt;&lt;/a&gt;    ( &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;bind&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;::&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;REPL で試してみる:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Binding&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- (\x : (Bool -&amp;gt; Bool) . (\f : (Bool -&amp;gt; Bool -&amp;gt; Bool) . f x)) (\x : Bool . x)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; [] (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)))) (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)))&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- (\x . x x) (\x . x x) はうまく型付けできない&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; [] (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))) (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))))&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;文字列に変換&#34;&gt;文字列に変換&lt;/h3&gt;
&lt;p&gt;基本的に4・7章の定義を利用すれば良いのだが，型注釈ができるようになったので型も変換できるようにする:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; [] &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;dropIfStartsWith&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;(&amp;quot;&lt;/span&gt;) &lt;span class=&#34;co&#34;&gt;-- 最初と最後のカッコを消している&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;dropIfEndsWith&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;withDefault&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 重複しない変数名を生成して Context に積む&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34;&gt;&lt;/a&gt;                ( &lt;span class=&#34;fu&#34;&gt;ctx1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x1&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pickfreshname&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34;&gt;&lt;/a&gt;                (\&lt;span class=&#34;fu&#34;&gt;s1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; [ &lt;span class=&#34;st&#34;&gt;&amp;quot;(\\&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot; : &amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;printty&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;. &amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt; ])&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34;&gt;&lt;/a&gt;                (&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- あとは同じ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;printty&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;printty&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; [ &lt;span class=&#34;st&#34;&gt;&amp;quot;(&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;printty&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot; -&amp;gt; &amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;printty&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty2&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;st&#34;&gt;&amp;quot;Bool&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-28&#34;&gt;&lt;a href=&#34;#cb8-28&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-29&#34;&gt;&lt;a href=&#34;#cb8-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- Context から重複する変数名を探し &amp;#39; を追加する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-30&#34;&gt;&lt;a href=&#34;#cb8-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;pickfreshname&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb8-31&#34;&gt;&lt;a href=&#34;#cb8-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;pickfreshname&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;REPL で試す:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)))) (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)))&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;(\\x : (Bool -&amp;gt; Bool). (\\f : ((Bool -&amp;gt; Bool) -&amp;gt; Bool). (f x))) (\\x : Bool. x)&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;パーサー&#34;&gt;パーサー&lt;/h3&gt;
&lt;p&gt;これも同様に4・7章の実装を合わせるだけ:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; ((&lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;env&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;depth&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;iniCtx&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;iniCtx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;env&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; }&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;run&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;parser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;iniCtx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;parParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 括弧のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;absParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- ラムダ抽象のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;valParser&lt;/span&gt;     &lt;span class=&#34;co&#34;&gt;-- ture/false のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ifParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;  &lt;span class=&#34;co&#34;&gt;-- if-then-else のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;varParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 変数のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-31&#34;&gt;&lt;a href=&#34;#cb10-31&#34;&gt;&lt;/a&gt;        ] &lt;span class=&#34;co&#34;&gt;-- 関数適用のパーサーだけ分けてるのは左再帰対策(その２参照)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-32&#34;&gt;&lt;a href=&#34;#cb10-32&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;appParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;言わずもがな，型注釈のパースをする必要があるので，&lt;code&gt;absParser&lt;/code&gt; はその２のと若干異なる:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;absParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;absParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;succeed&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Tuple&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;pair&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;symbol&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lazy&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;varStrParser&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;symbol&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;            &lt;span class=&#34;co&#34;&gt;-- ここから&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lazy&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tyParser&lt;/span&gt;) &lt;span class=&#34;co&#34;&gt;-- ここまでが追加&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;symbol&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;absParserN&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 型のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;tyParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;tyParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Bool&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TyBool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;-- これも左再帰対策(その２参照)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tyArrParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 関数型のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 関数型 T-&amp;gt;T は右結合(T-&amp;gt;T-&amp;gt;T は T-&amp;gt;(T-&amp;gt;T) となる)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;tyArrParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;tyArrParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-30&#34;&gt;&lt;a href=&#34;#cb11-30&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-31&#34;&gt;&lt;a href=&#34;#cb11-31&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;succeed&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TyArr&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-32&#34;&gt;&lt;a href=&#34;#cb11-32&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;keyword&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;-&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-33&#34;&gt;&lt;a href=&#34;#cb11-33&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-34&#34;&gt;&lt;a href=&#34;#cb11-34&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lazy&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tyParser&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-35&#34;&gt;&lt;a href=&#34;#cb11-35&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;succeed&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-36&#34;&gt;&lt;a href=&#34;#cb11-36&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;REPL で試してみる:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&#34;st&#34;&gt;&amp;quot;(\\x : Bool . if x then x else (\\f : Bool -&amp;gt; Bool -&amp;gt; Bool . f x x) (\\x : Bool . \\y : Bool . y)) (if true then false else true)&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;toMaybe&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; [] &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;always&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;)) &lt;span class=&#34;co&#34;&gt;-- 型検査&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; [])&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;false&amp;quot;&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;完璧だ．&lt;/p&gt;
&lt;h2 id=&#34;おまけ-spa&#34;&gt;おまけ: SPA&lt;/h2&gt;
&lt;p&gt;前回整理したので基本的に足していくだけだ． ただし，型検査を &lt;code&gt;Calculus&lt;/code&gt; に加える必要がある:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;) &lt;span class=&#34;co&#34;&gt;-- 追加&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; : &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; : &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; : &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;logs&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-12&#34;&gt;&lt;a href=&#34;#cb13-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb13-13&#34;&gt;&lt;a href=&#34;#cb13-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;typecheck&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Bool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-14&#34;&gt;&lt;a href=&#34;#cb13-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb13-15&#34;&gt;&lt;a href=&#34;#cb13-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとは &lt;code&gt;chap10&lt;/code&gt; の定義も追加するだけ:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; () &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Never&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Never&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Ty&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;st&#34;&gt;&amp;quot;chap4&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;st&#34;&gt;&amp;quot;chap7&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-15&#34;&gt;&lt;a href=&#34;#cb14-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-16&#34;&gt;&lt;a href=&#34;#cb14-16&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;-- 追加&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-17&#34;&gt;&lt;a href=&#34;#cb14-17&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;st&#34;&gt;&amp;quot;chap10&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-18&#34;&gt;&lt;a href=&#34;#cb14-18&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-19&#34;&gt;&lt;a href=&#34;#cb14-19&#34;&gt;&lt;/a&gt;                { &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-20&#34;&gt;&lt;a href=&#34;#cb14-20&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-21&#34;&gt;&lt;a href=&#34;#cb14-21&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-22&#34;&gt;&lt;a href=&#34;#cb14-22&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; []&lt;/span&gt;
&lt;span id=&#34;cb14-23&#34;&gt;&lt;a href=&#34;#cb14-23&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;logs&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; []&lt;/span&gt;
&lt;span id=&#34;cb14-24&#34;&gt;&lt;a href=&#34;#cb14-24&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;syntax&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;syntax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-25&#34;&gt;&lt;a href=&#34;#cb14-25&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap10&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;typeof&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-26&#34;&gt;&lt;a href=&#34;#cb14-26&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb14-27&#34;&gt;&lt;a href=&#34;#cb14-27&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-28&#34;&gt;&lt;a href=&#34;#cb14-28&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-29&#34;&gt;&lt;a href=&#34;#cb14-29&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Chap0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-30&#34;&gt;&lt;a href=&#34;#cb14-30&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-31&#34;&gt;&lt;a href=&#34;#cb14-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-32&#34;&gt;&lt;a href=&#34;#cb14-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-33&#34;&gt;&lt;a href=&#34;#cb14-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;typecheck&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Bool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-34&#34;&gt;&lt;a href=&#34;#cb14-34&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとはこれらを &lt;code&gt;Main&lt;/code&gt; でいい感じに呼び出すだけ．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;次回はいつになることやら．&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>https://matsubara0507.github.io/posts/2019-12-08-re-create-thank-you-stars-ver-elixir.html</id><title type="text">久しぶりに thank_you_stars をビルドする</title><updated>2019-12-08T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2019-12-08-re-create-thank-you-stars-ver-elixir.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;本記事は「&lt;a href=&#34;https://qiita.com/advent-calendar/2019/elixir&#34;&gt;Elixir Advent Calendar 2019&lt;/a&gt;」の8日目の記事です．&lt;/p&gt;
&lt;h1 id=&#34;section&#34;&gt;&lt;/h1&gt;
&lt;p&gt;学生の頃アルバイトした時(2年前)に初めて Elixir を触って，その集大成として作った(嘘) OSS をヒッサビッサにビルドチャレンジしてみたという話です．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OSS: &lt;a href=&#34;https://github.com/matsubara0507/thank-you-stars&#34;&gt;matsubara0507/thank-you-stars&lt;/a&gt; (elixir バージョン)&lt;/li&gt;
&lt;li&gt;当時書いたブログ記事: &lt;a href=&#34;https://matsubara0507.github.io/posts/2017-10-01-create-thank-you-stars-ver-elixir.html&#34;&gt;Elixir ライブラリにスターを送るツール thank-you-stars を作ってみました - ひげメモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;思い出す&#34;&gt;思い出す&lt;/h2&gt;
&lt;p&gt;そもそもどういうプログラムだったかってのは覚えてる． 当時何故か流行ってた，自身のプロジェクトの依存ライブラリに GitHub Star を送る CLI ツールの Elixir 版だ．&lt;/p&gt;
&lt;p&gt;で，こいつはどの環境でビルドしていたのか:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elixir のバージョンは多分 1.4 (ref. &lt;a href=&#34;https://github.com/matsubara0507/thank-you-stars/blob/v0.1.0/mix.exs&#34;&gt;mix.ex&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Erlang/OTP のバージョン: 多分 19.x？ (手元にあったのがそれ)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;依存パッケージのバージョンを見比べてみてもめっちゃ古いのがわかる． 2年ってすごいんだなぁ．&lt;/p&gt;
&lt;h2 id=&#34;最新バージョンに対応する&#34;&gt;最新バージョンに対応する&lt;/h2&gt;
&lt;p&gt;まずはここから．&lt;/p&gt;
&lt;h3 id=&#34;最新-elixir-erlangotp-のインストール&#34;&gt;最新 Elixir &amp;amp; Erlang/OTP のインストール&lt;/h3&gt;
&lt;p&gt;Elixir は長いこと触ってないので，そもそも手元に最新の環境がない． 昔はどうやってたかな，と遠い記憶を辿って見たがおそらく &lt;code&gt;exenv&lt;/code&gt; と &lt;code&gt;erlenv&lt;/code&gt; を使っていたはず:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/exenv/exenv&#34;&gt;exenv/exenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/talentdeficit/erlenv&#34;&gt;talentdeficit/erlenv&lt;/a&gt; (いつのまにかアーカイブになってるのね)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;それぞれ別の Elixir や Erlang/OTP を取ってくるには &lt;a href=&#34;https://github.com/mururu/elixir-build&#34;&gt;elixir-build&lt;/a&gt; や &lt;a href=&#34;https://github.com/matsubara0507/erlang-build&#34;&gt;erlang-build&lt;/a&gt; を使う． 試しに手元でやってみたら，どうやら v20.x 以降の Erlang/OTP をビルドするには OpenSSL 1.1 を使わないといけないのだが，手元の OS が古くてできない（このためだけに更新したくない）． そして，最新の Elixir を使うには Erlang/OTP の v20.x 以降が必要っぽい． 詰んだ（？）．&lt;/p&gt;
&lt;p&gt;もちろん，今ならもっと他の方法でいろんなバージョンの Elixir や Erlang/OTP をイストールする方法はあるだろう． しかし，できれば手元の環境を汚したくない． ということで Docker に甘えた（ぇ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker run --rm -v `pwd`:/work -it elixir:1.9.4 /bin/bash -c &amp;quot;cd /work &amp;amp;&amp;amp; mix test&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;依存パケッケージの更新&#34;&gt;依存パケッケージの更新&lt;/h3&gt;
&lt;p&gt;とりあえず，Hex で最新のバージョンを取ってきて &lt;code&gt;mix.exs&lt;/code&gt; を書き換えた． もちろん，すんなりビルドはできない． しかし，珍しくちゃんとテストを書いていたので，テストしつつ最新のバージョンに&lt;a href=&#34;https://github.com/matsubara0507/thank-you-stars/commit/1574a16dec5ea5c7e8a4e39dbae4bf4729e8cfb6&#34;&gt;合わせていく&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CrowdHailer/OK/pull/57&#34;&gt;&lt;code&gt;OK.with&lt;/code&gt; は使えなくなっているので利用しない書き方に変更&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/edgurgel/tentacat/pull/132&#34;&gt;&lt;code&gt;Tentacat.put&lt;/code&gt; の返り値のタプルサイズが変わっていた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/devinus/poison/commit/a4208a6252f4e58fbcc8d9fd2f4f64c99e974cc8&#34;&gt;&lt;code&gt;Poison.decode&lt;/code&gt; のエラーの返り値のタプルサイズが変わった&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elixir-lang/elixir/pull/7838&#34;&gt;&lt;code&gt;[ &amp;quot;hoge&amp;quot;: 123 ]&lt;/code&gt; こういう形式のキーワードハッシュは警告が出るようになった&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;パターンマッチしてたタプルのサイズが変わるのはきつい．&lt;/p&gt;
&lt;h3 id=&#34;mix-format&#34;&gt;mix format&lt;/h3&gt;
&lt;p&gt;Elixir 1.6 からフォーマッターがエコシステムに入った． なので &lt;code&gt;mix format&lt;/code&gt; をかけてみる．&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mix format&lt;/code&gt; をかけるには設定ファイル &lt;code&gt;.formatter.exs&lt;/code&gt; を置かないと動作しないようだ（珍しい）． なので，公式ドキュメントにあったものをそのまま&lt;a href=&#34;https://github.com/matsubara0507/thank-you-stars/commit/700910b927ff1abbd5701a177c83e0671ddffe29&#34;&gt;コピペして &lt;code&gt;mix format&lt;/code&gt; をかけた&lt;/a&gt;．&lt;/p&gt;
&lt;h2 id=&#34;github-actions&#34;&gt;GitHub Actions&lt;/h2&gt;
&lt;p&gt;最近流行りだからね．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsubara0507/thank-you-stars/pull/1&#34;&gt;Add GitHub Actions config by matsubara0507 · Pull Request #1 · matsubara0507/thank-you-stars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elixir や Erlang/OTP のセットアップには &lt;a href=&#34;https://github.com/actions/setup-elixir&#34;&gt;&lt;code&gt;actions/setup-elixir&lt;/code&gt;&lt;/a&gt; を使う． 色々と試して，最終的なジョブの設定はこんな感じ:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode yaml&#34;&gt;&lt;code class=&#34;sourceCode yaml&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;# ほんとんど actions/elixir-setup の例のまんま&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; ubuntu-16.04&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;strategy&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;otp&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;21.x&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; 22.x&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;co&#34;&gt;      # 20.x は ubuntu 16,18 には無い様子&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;elixir&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;1.8.x&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; 1.9.x&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;fail-fast&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;co&#34;&gt;         # マトリックスのどれかのジョブが落ちても他のジョブは実行をやめない&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; actions/checkout@v1.0.0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;fetch-depth&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; actions/setup-elixir@v1.0.0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;otp-version&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; ${{matrix.otp}}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;elixir-version&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; ${{matrix.elixir}}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; mix deps.get&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;at&#34;&gt; mix test&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;mix.exs&lt;/code&gt; でどうやって複数の Elixir のバージョンを許容するんだ？と結構調べたけど，単純にボトムのバージョンを &lt;code&gt;elixir: ~&amp;gt; ...&lt;/code&gt; で指定すればいいだけだった（普通 &lt;code&gt;&amp;gt;=&lt;/code&gt; じゃ無いの．．．）．&lt;/p&gt;
&lt;p&gt;キャッシュの導入も考えたが，たかが数分に入れてもしょうがないなってなってやめた．&lt;/p&gt;
&lt;h2 id=&#34;おまけ-依存パケージを減らす大作戦&#34;&gt;おまけ: 依存パケージを減らす大作戦&lt;/h2&gt;
&lt;p&gt;依存パッケージがなくなると &lt;code&gt;mix archive.install&lt;/code&gt; で入れることができるはず． なので，もともと依存パッケージを無くしてみたかった． 今回，バージョンアップを追うのも大変だったし，せっかくのなので可能な限り減らしてみた:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsubara0507/thank-you-stars/pull/2&#34;&gt;Remove OK library by matsubara0507 · Pull Request #2 · matsubara0507/thank-you-stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsubara0507/thank-you-stars/pull/3&#34;&gt;Remove tentacat library by matsubara0507 · Pull Request #3 · matsubara0507/thank-you-stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsubara0507/thank-you-stars/pull/4&#34;&gt;Remove poison library by matsubara0507 · Pull Request #4 · matsubara0507/thank-you-stars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3/4 減らせました． 残るは鬼門 &lt;code&gt;httpoison&lt;/code&gt; だけ． 果たしてできるのか．&lt;/p&gt;
&lt;h3 id=&#34;vs.-ok&#34;&gt;vs. &lt;code&gt;ok&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ok&lt;/code&gt; パッケージはいわゆる &lt;code&gt;Either&lt;/code&gt; モナドだ． &lt;code&gt;{:ok, hoge} | {:error, fuga}&lt;/code&gt; のような型を簡単に扱うためのマクロを提供している．&lt;/p&gt;
&lt;p&gt;これらの型の場合，Elixir の特徴であるパイプ演算子をうまく連結できない． なので，Elm 流に &lt;code&gt;and_then&lt;/code&gt; 関数を用意して，それで賄うようにした:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# Result a -&amp;gt; (a -&amp;gt; Result b) -&amp;gt; Result b&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# ただし Result a = {:ok, a} | {:error, e}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; and_then({&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, v}, f), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: f&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;(v)&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; and_then(err &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; {&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, _}, _), &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;: err&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# 使用例&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; star_package(package_name, client) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt;    fetch_package_github_url(package_name)&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;star_github_package(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, client)) &lt;span class=&#34;co&#34;&gt;# ココ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, url} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Starred! &lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;#{&lt;/span&gt;url&lt;span class=&#34;ot&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, url} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Error    &lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;#{&lt;/span&gt;url&lt;span class=&#34;ot&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;vs.-tentacat&#34;&gt;vs. &lt;code&gt;tentacat&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;単純に HTTP リクエストの PUT を認証付きでしているだけなので，&lt;code&gt;httpoison&lt;/code&gt; に書き直した． まぁ面倒を後に丸投げてるだけだが笑&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; star_github_package(url, token) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cn&#34;&gt;URI&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;parse(url)&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;get(&lt;span class=&#34;va&#34;&gt;:path&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;put_github_api(&lt;span class=&#34;st&#34;&gt;&amp;quot;user/starred&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, token))&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;()&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; and_then(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;map_get_with_ok(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;:status_code&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;204&lt;/span&gt;} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, url} &lt;span class=&#34;co&#34;&gt;# もちろん返り値も変わる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34;&gt;&lt;/a&gt;      _ &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; {&lt;span class=&#34;va&#34;&gt;:error&lt;/span&gt;, url}&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; put_github_api(path, token) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34;&gt;&lt;/a&gt;    headers &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; [{&lt;span class=&#34;st&#34;&gt;&amp;quot;Authorization&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;token &lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;#{&lt;/span&gt;token&lt;span class=&#34;ot&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;}]&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cn&#34;&gt;HTTPoison&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;put(&lt;span class=&#34;st&#34;&gt;&amp;quot;https://api.github.com/&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;#{&lt;/span&gt;path&lt;span class=&#34;ot&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, headers)&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;vs.-poison&#34;&gt;vs. &lt;code&gt;poison&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;poison&lt;/code&gt; は JSON デコーダー・エンコーダーだ． GitHub トークンを設定(JSON)から取得したり，Hex から取得したライブラリの設定(JSON)をパースするのに使う．&lt;/p&gt;
&lt;p&gt;これを無くすにはどうするか．簡単ですね． &lt;strong&gt;JSON パーサーを自作すればいいのです&lt;/strong&gt;．&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode elixir&#34;&gt;&lt;code class=&#34;sourceCode elixir&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;defmodule&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;ThankYouStars&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;cn&#34;&gt;JSON&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;im&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;ThankYouStars&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;as:&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# String をもらって JSON として Map や Bool，List などを返す&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;def&lt;/span&gt; decode(str) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34;&gt;&lt;/a&gt;    match_value(%{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;trim(str), &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; %{}})&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34;&gt;&lt;/a&gt;      {&lt;span class=&#34;va&#34;&gt;:ok&lt;/span&gt;, %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;va&#34;&gt;result:&lt;/span&gt; result}} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success(result)&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34;&gt;&lt;/a&gt;      {_, %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; rest}} &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;failure(rest)&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_value(stat) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34;&gt;&lt;/a&gt;    trim_leading(stat)&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; match_value_body()&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;map(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;trim_leading(&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;co&#34;&gt;# 無駄にパターンマッチとパイプを使ってみることにした(Elixir っぽい？)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;defp&lt;/span&gt; match_value_body(stat &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; %{&lt;span class=&#34;va&#34;&gt;rest:&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rest}) &lt;span class=&#34;kw&#34;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cn&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;put(stat, &lt;span class=&#34;va&#34;&gt;:result&lt;/span&gt;, &lt;span class=&#34;cn&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;put(&lt;span class=&#34;va&#34;&gt;:rest&lt;/span&gt;, rest)&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;success()&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JSON パーサーは比較的簡単だ(細かいところに目をつぶれば)． なんせ構文の定義が &lt;a href=&#34;https://www.json.org/json-en.html&#34;&gt;json.org&lt;/a&gt; というサイトに書いてあるから． また，テストスイートも &lt;a href=&#34;https://github.com/nst/JSONTestSuite&#34;&gt;nst/JSONTestSuite&lt;/a&gt; というところに置いてある．&lt;/p&gt;
&lt;h1 id=&#34;section-1&#34;&gt;&lt;/h1&gt;
&lt;p&gt;今回はガッっと一晩で雑に作ったので浮動小数点の &lt;code&gt;e&lt;/code&gt; 記法やユニコードのエスケープ記法 &lt;code&gt;\u&lt;/code&gt; なんかの実装は無視した（まぁ多分すぐできるけど）． また，Elixir ということで積極的にパターンマッチングとパイプを利用して実装している． 興味がある人は PR を見てください（汚いのでリファクタリングしたい）．&lt;/p&gt;
&lt;p&gt;もう少し細かい紹介は気が向いたらするやもしれない．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;httpoison&lt;/code&gt; も無くしたいなぁ．&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>https://matsubara0507.github.io/posts/2019-12-07-tapl-with-elm-part2.html</id><title type="text">Elm で作る TaPL のラムダ計算（その２）</title><updated>2019-12-07T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2019-12-07-tapl-with-elm-part2.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;本記事は「&lt;a href=&#34;https://qiita.com/advent-calendar/2019/lang_dev&#34;&gt;言語実装 Advent Calendar 2019&lt;/a&gt;」の7日目の記事です．&lt;/p&gt;
&lt;h1 id=&#34;section&#34;&gt;&lt;/h1&gt;
&lt;p&gt;表題の通り，TaPL という書籍で紹介されているプログラミング言語の実装例を Elm でやってみたという話です（その２）． &lt;a href=&#34;https://matsubara0507.github.io/posts/2019-12-06-tapl-with-elm-part1.html&#34;&gt;その１&lt;/a&gt;はこちら．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第4章 算術式のML実装&lt;/li&gt;
&lt;li&gt;第7章 ラムダ計算の ML 実装 (本記事はココ)
&lt;ul&gt;
&lt;li&gt;型無しラムダ計算を実装&lt;/li&gt;
&lt;li&gt;以降はこれを拡張していく(たしか)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;第10章 単純型のML実装
&lt;ul&gt;
&lt;li&gt;7章のを型付きラムダ計算にする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;第17章 部分型付けの ML 実装&lt;/li&gt;
&lt;li&gt;第25章 System F の ML 実装
&lt;ul&gt;
&lt;li&gt;最後に型の多相性を追加&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;実装は全て下記のリポジトリにあげています:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsubara0507/ELaMbda&#34;&gt;matsubara0507/ELaMbda - GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また，前回同様に&lt;a href=&#34;https://matsubara0507.github.io/ELaMbda/?chap=chap7&#34;&gt;Web ブラウザから遊べるようになってます&lt;/a&gt;．&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://matsubara0507.github.io/ELaMbda/?chap=chap7&amp;amp;exp=(\x%20.%20x%20x)%20(\x%20.%20x%20x)&#34;&gt;&lt;img src=&#34;/assets/tapl-with-elm/chap7.jpg&#34;&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;第7章-ラムタ計算の-ml-実装&#34;&gt;第7章 ラムダ計算の ML 実装&lt;/h2&gt;
&lt;p&gt;さぁいよいよみんな大好き(型なし)ラムダ計算です． ちなみに，ラムダ計算の数理論理学的な議論は5章でしている．&lt;/p&gt;
&lt;h3 id=&#34;構文規則&#34;&gt;構文規則&lt;/h3&gt;
&lt;p&gt;構文規則はこんな感じ:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;t := x       [変数]&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;   | \x . t  [ラムダ抽象]&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;   | t t     [関数適用]&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;v := \x . t&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;なんと前回の算術式より構文規則がシンプル． ラムダ計算というのは「関数」しかないプログラミング言語で，ラムダ抽象というのが最近の多くの言語で導入されている無名関数や関数オブジェクトと言われるものだ（たぶん）．&lt;/p&gt;
&lt;p&gt;まずはこれを Elm 上の型として定義する:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 値はラムダ抽象だけ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Bool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;False&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 変数名を保持している（表示用）&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- Binding の意味は現状まだない（次回以降ちゃんと使う）&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;　&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Binding&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Binding&lt;/span&gt;　&lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;NameBind&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;TmVar&lt;/code&gt; が少しキモ． 2つの &lt;code&gt;Int&lt;/code&gt; は変数が関数全体の中でどの位置にいるかを表している:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1つ目の Int は&lt;a href=&#34;https://en.wikipedia.org/wiki/De_Bruijn_index&#34;&gt;ドブラウン・インデックス&lt;/a&gt; (束縛されたラムダ抽象までの距離)&lt;/li&gt;
&lt;li&gt;2つ目の Int は一番外のラムダ抽象までの距離(深さ)&lt;/li&gt;
&lt;li&gt;e.g. &lt;code&gt;(\x. \f. f x) (\x. x)&lt;/code&gt; の場合は &lt;code&gt;TmApp (TmAbs &amp;quot;x&amp;quot; (TmAbs &amp;quot;f&amp;quot; (TmApp (TmVar 0 2) (TmVar 1 2)))) (TmAbs &amp;quot;x&amp;quot; (TmVar 0 1))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ちなみに，&lt;code&gt;TmAbs String Term&lt;/code&gt; の文字列型は変数名で基本的に表示用．&lt;/p&gt;
&lt;h3 id=&#34;評価規則&#34;&gt;評価規則&lt;/h3&gt;
&lt;p&gt;評価規則も同様にシンプル:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt; t1 =&amp;gt; t1&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;---------------&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt; t1 t2 =&amp;gt; t1&amp;#39; t2&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt; t2 =&amp;gt; t2&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;---------------&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt; v1 t2 =&amp;gt; v1 t2&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34;&gt;&lt;/a&gt;(\x.t12) v2 -&amp;gt; [x|-&amp;gt; v2]t12&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3つ目のが関数適用で，&lt;code&gt;[x|-&amp;gt; v2]t12&lt;/code&gt; 記法は &lt;code&gt;t12&lt;/code&gt; 内の変数 &lt;code&gt;x&lt;/code&gt; を全て &lt;code&gt;v2&lt;/code&gt; に置き換えるという意味である． ここで，&lt;code&gt;v2&lt;/code&gt; が値というのがキモだ． すなわち正格評価される．&lt;/p&gt;
&lt;p&gt;これをパターンマッチを使って実装すると次の通り:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 止まらない可能性があるから注意&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;) (&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t12&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;termSubstTop&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t12&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t12&lt;/span&gt;)) (&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;flip&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;) (&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termSubstTop&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termSubstTop&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;termSubstTop&lt;/code&gt; という新しい関数が出てきた． 変数を置き換える(代入する)上で重要なのは同じ変数名の変数が出てきたときに，それらを区別して〜〜ってのがあり，それをいい感じにやるための工夫が &lt;code&gt;TmVar&lt;/code&gt; の2つの &lt;code&gt;Int&lt;/code&gt; だ． この実装上の工夫は第6章で説明されているので，買って読んでください(おい)．&lt;/p&gt;
&lt;h1 id=&#34;section-1&#34;&gt;&lt;/h1&gt;
&lt;p&gt;で，&lt;code&gt;termSubstTop&lt;/code&gt; の実装はこんな感じ(本書にも全部書いてある):&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- v2 と t12 を渡して [x|-&amp;gt;v2]t12 が返ってくる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- termSubst 0 なので一番外の変数を置き換える&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 置き換えた後 -1 シフトしないといけない(一番外のラムダ抽象が剥がれるので)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 先に 1 だけシフトしてるのは代入後の s は -1 シフトして欲しくないから&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termSubstTop&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termSubstTop&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;termShift&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;termSubst&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;termShift&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 項 tt 中の j 番の変数へ項 s を代入 [j|-&amp;gt;s]t する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termSubst&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termSubst&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tt&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;co&#34;&gt;-- 潜ったぶんだけドブラウン・インデックスをシフト&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;fu&#34;&gt;termShift&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;) (&lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tt&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 項 tt の自由変数のドブラウン・インデックスを d だけシフト&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termShift&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termShift&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tt&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-37&#34;&gt;&lt;a href=&#34;#cb5-37&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;co&#34;&gt;-- c はラムダ抽象の深さ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-38&#34;&gt;&lt;a href=&#34;#cb5-38&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;co&#34;&gt;-- x は変数が束縛されたのラムダ抽象までの距離&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-39&#34;&gt;&lt;a href=&#34;#cb5-39&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;co&#34;&gt;-- したがって x &amp;gt;= c は自由変数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-40&#34;&gt;&lt;a href=&#34;#cb5-40&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-41&#34;&gt;&lt;a href=&#34;#cb5-41&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt;) (&lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-42&#34;&gt;&lt;a href=&#34;#cb5-42&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-43&#34;&gt;&lt;a href=&#34;#cb5-43&#34;&gt;&lt;/a&gt;                        &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;d&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-44&#34;&gt;&lt;a href=&#34;#cb5-44&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-45&#34;&gt;&lt;a href=&#34;#cb5-45&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-46&#34;&gt;&lt;a href=&#34;#cb5-46&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-47&#34;&gt;&lt;a href=&#34;#cb5-47&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-48&#34;&gt;&lt;a href=&#34;#cb5-48&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-49&#34;&gt;&lt;a href=&#34;#cb5-49&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;) (&lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-50&#34;&gt;&lt;a href=&#34;#cb5-50&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-51&#34;&gt;&lt;a href=&#34;#cb5-51&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;walk&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;REPL で確かめてみる:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;elm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repl&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;---- Elm 0.19.1 ----------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Say&lt;/span&gt; :&lt;span class=&#34;fu&#34;&gt;help&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;help&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;and&lt;/span&gt; :&lt;span class=&#34;fu&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;More&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;at&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;https&lt;/span&gt;:&lt;span class=&#34;op&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;elm&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;repl&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;--------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; [] (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)))) (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)))&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;))))&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;(\x . (\f . f x)) (\x . x)&lt;/code&gt; を評価して &lt;code&gt;\f . f (\x . x)&lt;/code&gt; という結果を得た．&lt;/p&gt;
&lt;h3 id=&#34;文字列へ変換&#34;&gt;文字列へ変換&lt;/h3&gt;
&lt;p&gt;変数がインデックス表記になっているため読みにくい． なので文字列への変換関数とパーサーを記述しよう．&lt;/p&gt;
&lt;p&gt;まずは文字列の変換から． こっちは TaPL にも(ほとんど)書いてある:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- これは TaPL にはない&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; [] &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;dropIfStartsWith&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;(&amp;quot;&lt;/span&gt;) &lt;span class=&#34;co&#34;&gt;-- 最初と最後のカッコを消している&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;dropIfEndsWith&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;withDefault&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- インデックスが間違っている場合は Nothing になる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;　&lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前回と異なり，今回は文字列に変換できない場合がある． インデックスが間違っている場合だ． その場合は &lt;code&gt;Notihng&lt;/code&gt; が返るようにしている(TaPL の場合は例外)． &lt;code&gt;printtm&lt;/code&gt; は &lt;code&gt;Term&lt;/code&gt; 型に対するパターンマッチで記述する:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34;&gt;&lt;/a&gt;                ( &lt;span class=&#34;fu&#34;&gt;ctx1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x1&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;co&#34;&gt;-- 被らない変数名を生成&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;fu&#34;&gt;pickfreshname&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34;&gt;&lt;/a&gt;                (\&lt;span class=&#34;fu&#34;&gt;s1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; [ &lt;span class=&#34;st&#34;&gt;&amp;quot;(\\&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;. &amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt; ])&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34;&gt;&lt;/a&gt;                (&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34;&gt;&lt;/a&gt;                (\&lt;span class=&#34;fu&#34;&gt;s1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s2&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt; [ &lt;span class=&#34;st&#34;&gt;&amp;quot;(&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt; ])&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34;&gt;&lt;/a&gt;                (&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34;&gt;&lt;/a&gt;                (&lt;span class=&#34;fu&#34;&gt;printtm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;-- ctx には変数がどんどん保存される&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;-- そのため ctx の長さと n の長さが等しくないといけない&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctxlength&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;co&#34;&gt;-- ctx から変数名をドブラウン・インデックスで引いてくる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;index2name&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;pickfreshname&lt;/code&gt; や &lt;code&gt;ctxlength&lt;/code&gt; や &lt;code&gt;index2name&lt;/code&gt; の実装は本書にはない． 振る舞いの説明が書いてあるので，それを読んで実装する必要がある． なので，僕は次のように実装したがもう少しエレガントな実装があるかもしれない:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 変数名が重複しないように後ろに &amp;#39; を足して Context の先頭に追加&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;pickfreshname&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;pickfreshname&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;let&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;x1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Tuple&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;first&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;filter&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;startsWith&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;maximum&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;withDefault&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;in&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34;&gt;&lt;/a&gt;    ( ( &lt;span class=&#34;fu&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;NameBind&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;::&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x1&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;ctxlength&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;ctxlength&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-19&#34;&gt;&lt;a href=&#34;#cb9-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- ドブラウン・インデックスは束縛されたラムダ抽象への距離&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-20&#34;&gt;&lt;a href=&#34;#cb9-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- Context はラムダ抽象のたびに先頭に対応する変数を追加する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-21&#34;&gt;&lt;a href=&#34;#cb9-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- なので，そのままリストへのインデックスアクセスで良い&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-22&#34;&gt;&lt;a href=&#34;#cb9-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;index2name&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-23&#34;&gt;&lt;a href=&#34;#cb9-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;index2name&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-24&#34;&gt;&lt;a href=&#34;#cb9-24&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;getAt&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-25&#34;&gt;&lt;a href=&#34;#cb9-25&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; ( &lt;span class=&#34;fu&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-26&#34;&gt;&lt;a href=&#34;#cb9-26&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;str&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-27&#34;&gt;&lt;a href=&#34;#cb9-27&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-28&#34;&gt;&lt;a href=&#34;#cb9-28&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-29&#34;&gt;&lt;a href=&#34;#cb9-29&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;REPL で試してみよう:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)))) (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)))&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;(\\x. (\\f. (f x))) (\\x. x)&amp;quot;&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; [] (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)))) (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))) &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (&lt;span class=&#34;st&#34;&gt;&amp;quot;\\f. (f (\\x. x))&amp;quot;&lt;/span&gt;) : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;いい感じ．&lt;/p&gt;
&lt;h3 id=&#34;パーサー&#34;&gt;パーサー&lt;/h3&gt;
&lt;p&gt;前回同様 &lt;a href=&#34;https://package.elm-lang.org/packages/elm/parser&#34;&gt;elm/parser&lt;/a&gt; を使う． ドブラウン・インデックスなどを構築していく必要があるので，それらを保持した &lt;code&gt;Context&lt;/code&gt; という型を用意する(紛らわしいが，モジュールが違い外に出さない型なので大丈夫):&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; ((&lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;env&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- 変数名とドブラウンインデックスの対応&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;depth&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;           &lt;span class=&#34;co&#34;&gt;-- ラムダ抽象の深さ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;iniCtx&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;iniCtx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;env&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; }&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;run&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;parser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;iniCtx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;まずは関数適用を無視してパーサーを定義する(難しいので):&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;-- oneOf は最初にマッチしたパース結果を採用する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;parParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- カッコのパーサー(割愛)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;absParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;varParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- ラムダ抽象(`\x. t`)のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;absParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;absParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;succeed&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;identity&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;symbol&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-15&#34;&gt;&lt;a href=&#34;#cb12-15&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-16&#34;&gt;&lt;a href=&#34;#cb12-16&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;varStrParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-17&#34;&gt;&lt;a href=&#34;#cb12-17&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-18&#34;&gt;&lt;a href=&#34;#cb12-18&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;symbol&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-19&#34;&gt;&lt;a href=&#34;#cb12-19&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-20&#34;&gt;&lt;a href=&#34;#cb12-20&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;absParserN&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-21&#34;&gt;&lt;a href=&#34;#cb12-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-22&#34;&gt;&lt;a href=&#34;#cb12-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 変数名のパーサー (小文字始まりで [A-z0-9_&amp;#39;] だけ許容する)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-23&#34;&gt;&lt;a href=&#34;#cb12-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;varStrParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-24&#34;&gt;&lt;a href=&#34;#cb12-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;varStrParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-25&#34;&gt;&lt;a href=&#34;#cb12-25&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;variable&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-26&#34;&gt;&lt;a href=&#34;#cb12-26&#34;&gt;&lt;/a&gt;        { &lt;span class=&#34;fu&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Char&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;isLower&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-27&#34;&gt;&lt;a href=&#34;#cb12-27&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;inner&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; \&lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Char&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;isAlphaNum&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;\&amp;#39;&lt;/span&gt;&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb12-28&#34;&gt;&lt;a href=&#34;#cb12-28&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;reserved&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;fromList&lt;/span&gt; []&lt;/span&gt;
&lt;span id=&#34;cb12-29&#34;&gt;&lt;a href=&#34;#cb12-29&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb12-30&#34;&gt;&lt;a href=&#34;#cb12-30&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-31&#34;&gt;&lt;a href=&#34;#cb12-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- ラムダ抽象が深くなるのでコンテキストを更新して再度 Term をパースする&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-32&#34;&gt;&lt;a href=&#34;#cb12-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;absParserN&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-33&#34;&gt;&lt;a href=&#34;#cb12-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;absParserN&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-34&#34;&gt;&lt;a href=&#34;#cb12-34&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;succeed&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-35&#34;&gt;&lt;a href=&#34;#cb12-35&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lazy&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pushVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;incrCtx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-36&#34;&gt;&lt;a href=&#34;#cb12-36&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-37&#34;&gt;&lt;a href=&#34;#cb12-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- ラムダ抽象が1つ深くなる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-38&#34;&gt;&lt;a href=&#34;#cb12-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- なので深さと全てのドブラウン・インデックスを +1 する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-39&#34;&gt;&lt;a href=&#34;#cb12-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;incrCtx&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-40&#34;&gt;&lt;a href=&#34;#cb12-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;incrCtx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-41&#34;&gt;&lt;a href=&#34;#cb12-41&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;env&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;env&lt;/span&gt; }&lt;/span&gt;
&lt;span id=&#34;cb12-42&#34;&gt;&lt;a href=&#34;#cb12-42&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-43&#34;&gt;&lt;a href=&#34;#cb12-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 新しい変数名を追加する&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-44&#34;&gt;&lt;a href=&#34;#cb12-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 同じ変数名は上書きしてしまって良い&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-45&#34;&gt;&lt;a href=&#34;#cb12-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;pushVar&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-46&#34;&gt;&lt;a href=&#34;#cb12-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;pushVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-47&#34;&gt;&lt;a href=&#34;#cb12-47&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;env&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;env&lt;/span&gt; }&lt;/span&gt;
&lt;span id=&#34;cb12-48&#34;&gt;&lt;a href=&#34;#cb12-48&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-49&#34;&gt;&lt;a href=&#34;#cb12-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 変数のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-50&#34;&gt;&lt;a href=&#34;#cb12-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;varParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-51&#34;&gt;&lt;a href=&#34;#cb12-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;varParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-52&#34;&gt;&lt;a href=&#34;#cb12-52&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;varStrParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-53&#34;&gt;&lt;a href=&#34;#cb12-53&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;lookupVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-54&#34;&gt;&lt;a href=&#34;#cb12-54&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;flip&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;depth&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-55&#34;&gt;&lt;a href=&#34;#cb12-55&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-56&#34;&gt;&lt;a href=&#34;#cb12-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- コンテキストには変数名とドブラウン・インデックスの連想配列がある&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-57&#34;&gt;&lt;a href=&#34;#cb12-57&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- なので，変数名で引っ張ってくるだけ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-58&#34;&gt;&lt;a href=&#34;#cb12-58&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;lookupVar&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-59&#34;&gt;&lt;a href=&#34;#cb12-59&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;lookupVar&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-60&#34;&gt;&lt;a href=&#34;#cb12-60&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;env&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-61&#34;&gt;&lt;a href=&#34;#cb12-61&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;succeed&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-62&#34;&gt;&lt;a href=&#34;#cb12-62&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;withDefault&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;problem&lt;/span&gt; (&lt;span class=&#34;st&#34;&gt;&amp;quot;undefined variable: &amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;REPL で試してみる:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\x. x&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\x. (\\y . x)&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmAbs&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmVar&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)))&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;\\x. (\\y . z)&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Err&lt;/span&gt; [{ &lt;span class=&#34;fu&#34;&gt;col&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;problem&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Problem&lt;/span&gt; (&lt;span class=&#34;st&#34;&gt;&amp;quot;undefined variable: z&amp;quot;&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; }]&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;自由変数が出てくるとちゃんとエラーになる．&lt;/p&gt;
&lt;p&gt;残るは関数適用だ． 実はこいつが難しい． というのも，雑に実装をするといわゆる左再帰が出てくるからだ．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kazu-yamamoto.hatenablog.jp/entry/20110127/1296098875&#34;&gt;chainl と左再帰 - あどけない話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なので，一工夫する必要がある:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;-- 関数適用は t1 t2 なのでまずは t1 にマッチさせ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;parParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;absParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;varParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34;&gt;&lt;/a&gt;        ]  &lt;span class=&#34;co&#34;&gt;-- 後から t2 を探す&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;appParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 関数適用 t1 t2 のパーサー&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;appParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;appParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-15&#34;&gt;&lt;a href=&#34;#cb14-15&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;succeed&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmApp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-16&#34;&gt;&lt;a href=&#34;#cb14-16&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;-- backtrackable や commit は一旦無視して良い&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-17&#34;&gt;&lt;a href=&#34;#cb14-17&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;-- termWithoutAppParser が先に出てくるのは関数適用が左結合のため&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-18&#34;&gt;&lt;a href=&#34;#cb14-18&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;-- 例: t1 t2 t3 は (t1 t2) t3 つまり (TmApp (TmApp t1 t2) t3)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-19&#34;&gt;&lt;a href=&#34;#cb14-19&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;backtrackable&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;symbol&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-20&#34;&gt;&lt;a href=&#34;#cb14-20&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lazy&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;termWithoutAppParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-21&#34;&gt;&lt;a href=&#34;#cb14-21&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;commit&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-22&#34;&gt;&lt;a href=&#34;#cb14-22&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;appParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-23&#34;&gt;&lt;a href=&#34;#cb14-23&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;-- t2 がなければ t1 のまんま返す&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-24&#34;&gt;&lt;a href=&#34;#cb14-24&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;succeed&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-25&#34;&gt;&lt;a href=&#34;#cb14-25&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;
&lt;span id=&#34;cb14-26&#34;&gt;&lt;a href=&#34;#cb14-26&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-27&#34;&gt;&lt;a href=&#34;#cb14-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 関数適用を抜いた termParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-28&#34;&gt;&lt;a href=&#34;#cb14-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termWithoutAppParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-29&#34;&gt;&lt;a href=&#34;#cb14-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termWithoutAppParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-30&#34;&gt;&lt;a href=&#34;#cb14-30&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-31&#34;&gt;&lt;a href=&#34;#cb14-31&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;parParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-32&#34;&gt;&lt;a href=&#34;#cb14-32&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;absParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-33&#34;&gt;&lt;a href=&#34;#cb14-33&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;varParser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-34&#34;&gt;&lt;a href=&#34;#cb14-34&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;backtrackable&lt;/code&gt; と &lt;code&gt;commit&lt;/code&gt; はパーサーが文字列を消費してしまう問題の解決方法だ． パーサーの処理が進むと対象の文字列をどんどん消費していく． &lt;code&gt;oneOf&lt;/code&gt; で複数のパーサーを許容するとき，1文字目の結果で分岐できることが保証されているなら問題ないが，途中まで進み文字列を消費して失敗すると，その文字列を消費した状態で &lt;code&gt;oneOf&lt;/code&gt; 内の次のパーサーへ進んでしまう． そこで，elm/parser の場合は消費を戻して欲しい場合はし &lt;code&gt;backtrackable&lt;/code&gt; を使い，もう戻らなくて良くなった時点で &lt;code&gt;commit&lt;/code&gt; を使う，という感じ（たぶん）． まぁ今回は必要ではない気がするが，後々必要になってくる．&lt;/p&gt;
&lt;h1 id=&#34;section-2&#34;&gt;&lt;/h1&gt;
&lt;p&gt;さぁ REPL で確認してみよう:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;(\\x . \\f . f x) (\\x . x) (\\x . (\\x . x))&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;toMaybe&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; [])&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; (&lt;span class=&#34;st&#34;&gt;&amp;quot;\\x. x&amp;quot;&lt;/span&gt;) : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;完璧だ．&lt;/p&gt;
&lt;h2 id=&#34;おまけ-spa-にする&#34;&gt;おまけ: SPA にする&lt;/h2&gt;
&lt;p&gt;今回も同様に SPA にする． 章ごとにページ分けても良かったが，試しに一つにまとめてみた． つまり，4章の言語と7章の言語を同じように扱う． どちらも:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文字列をパースする(&lt;code&gt;parse&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;項を1ステップ評価する(&lt;code&gt;eval1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;項を文字列に変換する(&lt;code&gt;display&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;をしたい． こういった場合，多くの言語ではインターフェースや型クラスのようなアドホック多相を利用する． しかし，Elm にはアドホック多相はない． そのため，パラメトリック多相で模倣する:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 各章の言語の Context と Term 型を受け取る&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; : &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; : &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; : &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt;     &lt;span class=&#34;co&#34;&gt;-- Context の初期値&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;logs&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;  &lt;span class=&#34;co&#34;&gt;-- Term の履歴(表示用)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ty&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Calculus&lt;/code&gt; には章ごとに型が異なるものを全部突っ込む必要がある． そのため &lt;code&gt;logs&lt;/code&gt; のようなフィールドもある(前回 &lt;code&gt;Model&lt;/code&gt; 型の &lt;code&gt;exps&lt;/code&gt; にあったやつ)． この型の値を各章ごとに定義しよう:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; () &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Calculus&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-6&#34;&gt;&lt;a href=&#34;#cb17-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-7&#34;&gt;&lt;a href=&#34;#cb17-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-8&#34;&gt;&lt;a href=&#34;#cb17-8&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-9&#34;&gt;&lt;a href=&#34;#cb17-9&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;st&#34;&gt;&amp;quot;chap4&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-10&#34;&gt;&lt;a href=&#34;#cb17-10&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-11&#34;&gt;&lt;a href=&#34;#cb17-11&#34;&gt;&lt;/a&gt;                { &lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-12&#34;&gt;&lt;a href=&#34;#cb17-12&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; \&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-13&#34;&gt;&lt;a href=&#34;#cb17-13&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-14&#34;&gt;&lt;a href=&#34;#cb17-14&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; ()&lt;/span&gt;
&lt;span id=&#34;cb17-15&#34;&gt;&lt;a href=&#34;#cb17-15&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;logs&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; []&lt;/span&gt;
&lt;span id=&#34;cb17-16&#34;&gt;&lt;a href=&#34;#cb17-16&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb17-17&#34;&gt;&lt;a href=&#34;#cb17-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-18&#34;&gt;&lt;a href=&#34;#cb17-18&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;st&#34;&gt;&amp;quot;chap7&amp;quot;&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-19&#34;&gt;&lt;a href=&#34;#cb17-19&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-20&#34;&gt;&lt;a href=&#34;#cb17-20&#34;&gt;&lt;/a&gt;                { &lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-21&#34;&gt;&lt;a href=&#34;#cb17-21&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-22&#34;&gt;&lt;a href=&#34;#cb17-22&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap7&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-23&#34;&gt;&lt;a href=&#34;#cb17-23&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; []&lt;/span&gt;
&lt;span id=&#34;cb17-24&#34;&gt;&lt;a href=&#34;#cb17-24&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;logs&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; []&lt;/span&gt;
&lt;span id=&#34;cb17-25&#34;&gt;&lt;a href=&#34;#cb17-25&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb17-26&#34;&gt;&lt;a href=&#34;#cb17-26&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-27&#34;&gt;&lt;a href=&#34;#cb17-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-28&#34;&gt;&lt;a href=&#34;#cb17-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-29&#34;&gt;&lt;a href=&#34;#cb17-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Chapter&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとは &lt;code&gt;Chapter&lt;/code&gt; 型を &lt;code&gt;main&lt;/code&gt; の &lt;code&gt;Model&lt;/code&gt; に持たせて，それぞれの関数を &lt;code&gt;Chapter&lt;/code&gt; のものへと置き換えるだけ． これが良い方法かどうか，正直なんとも言えないが面白いモノができたの個人的には満足．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;ところで，型なしラムダ計算は停止しない場合がある(例えば &lt;code&gt;(\x . x x) (\x . x x)&lt;/code&gt; とか)． このような式を SPA に突っ込むと無限に eval ボタンを押せてしまう． そこで，同期からは「eval ボタンが下にずれていくから無限プチプチみたいなのができない」と言われた笑． 検討した結果，ボタン固定にすると式の結果を追うのに上下スクロールを何回もしないとなので却下した(ごめんね)．&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>https://matsubara0507.github.io/posts/2019-12-06-tapl-with-elm-part1.html</id><title type="text">Elm で作る TaPL のラムダ計算（その１）</title><updated>2019-12-06T00:00:00Z</updated><author><name>matsubara0507</name></author><link href="https://matsubara0507.github.io/posts/2019-12-06-tapl-with-elm-part1.html"/><summary type="html">&lt;div class=&#34;post-content&#34; itemprop=&#34;articleBody&#34;&gt;
    &lt;p&gt;本記事は「&lt;a href=&#34;https://qiita.com/advent-calendar/2019/elm&#34;&gt;Elm Advent Calendar 2019&lt;/a&gt;」の6日目の記事です．&lt;/p&gt;
&lt;h1 id=&#34;section&#34;&gt;&lt;/h1&gt;
&lt;p&gt;表題の通り，TaPL という書籍で紹介されているプログラミング言語の実装例を Elm でやってみたという話です（その１）．&lt;/p&gt;
&lt;h2 id=&#34;tapl-とプログラミング言語の実装&#34;&gt;TaPL とプログラミング言語の実装&lt;/h2&gt;
&lt;p&gt;「&lt;a href=&#34;https://www.cis.upenn.edu/~bcpierce/tapl/&#34;&gt;Type and Programming Language&lt;/a&gt;」(翻訳本は「型システム入門 -プログラミング言語と型の理論-」というもの，以下 TaPL)という書籍を知ってますか？ この書籍はプログラミング言語の型システムの理論体系に関するとても有名な書籍だ（学術的なその分野における入門書）． TaPL の多くは数理論理学的な議論や証明で構成されているのだが，いくつかの章では簡易的なプログラミング言語の実装がある:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第4章 算術式のML実装 (本記事はココ)
&lt;ul&gt;
&lt;li&gt;自然数と真偽値と if-then-else&lt;/li&gt;
&lt;li&gt;変数などもない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;第7章 ラムダ計算のML実装
&lt;ul&gt;
&lt;li&gt;型無しラムダ計算を実装&lt;/li&gt;
&lt;li&gt;以降はこれを拡張していく(たしか)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;第10章 単純型のML実装
&lt;ul&gt;
&lt;li&gt;7章のを型付きラムダ計算にする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;第17章 部分型付けのML実装&lt;/li&gt;
&lt;li&gt;第25章 System F のML実装
&lt;ul&gt;
&lt;li&gt;最後に型の多相性を追加&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本記事では4章の実装を行う．&lt;/p&gt;
&lt;h3 id=&#34;何で実装するか&#34;&gt;何で実装するか&lt;/h3&gt;
&lt;p&gt;TaPL では実装にあたり，以下のようなプログラミング言語で行うことをオススメしている:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自動メモリ管理 (GC)&lt;/li&gt;
&lt;li&gt;代数的データ型 (を容易に記述できる)&lt;/li&gt;
&lt;li&gt;パターンマッチ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ML系や Haskell，Scala であれば上記の条件にマッチするだろう． タイトルの通り私は Elm でやってみることにした(きっと事例が少ない)．&lt;/p&gt;
&lt;p&gt;なお実装は全て下記のリポジトリにあげている:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsubara0507/ELaMbda&#34;&gt;matsubara0507/ELaMbda - GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elm は Web フロントに特化した DSL だ． ということで，最終的にはパーサーも実装し，&lt;a href=&#34;https://matsubara0507.github.io/ELaMbda/?chap=chap4&#34;&gt;Web ブラウザから遊べるようにした&lt;/a&gt;．&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://matsubara0507.github.io/ELaMbda/?chap=chap4&amp;amp;exp=if%20if%20true%20then%20false%20else%20true%20then%200%20else%20if%20false%20then%202%20else%203&#34;&gt;&lt;img src=&#34;/assets/tapl-with-elm/chap4.jpg&#34;&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;第4章-算術式のml実装&#34;&gt;第4章 算術式のML実装&lt;/h2&gt;
&lt;p&gt;4章で実装する言語の数理論理学的な議論は3章でやり，4章ではそれを ML で実装している． 以降の章では結構実装が省かれてたりするのだが，4章のは全部書いてあるので ML をお手元の言語に翻訳していくだけど簡単な作業です．&lt;/p&gt;
&lt;h3 id=&#34;構文規則&#34;&gt;構文規則&lt;/h3&gt;
&lt;p&gt;プログラミング言語の基本的な構成要素は「構文」と「評価」だ(たぶん)． まずは構文から:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;// 値&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;v := true&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;   | false&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;   | nv&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;// 自然数&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt;nv := 0 | succ nv&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34;&gt;&lt;/a&gt;// 項&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34;&gt;&lt;/a&gt;t := v&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34;&gt;&lt;/a&gt;   | if t then t else t&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34;&gt;&lt;/a&gt;   | succ t&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34;&gt;&lt;/a&gt;   | pred t&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34;&gt;&lt;/a&gt;   | iszero t&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;自然数と真偽値だけの極めてシンプルなものだ． 項は型で表現し，値や自然数かどうかの判定はそう言う関数を用意する:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 構文&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmIsZero&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 値かどうか&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Bool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;isnumericval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 数値かどうか&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;isnumericval&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Bool&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;isnumericval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;isnumericval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TaPL では項に &lt;code&gt;Info&lt;/code&gt; と言う型を持たせて，もともと何行何列目だったかのような情報を持たせているが，今回はそこまでリッチにする予定はないし煩わしいので省いた．&lt;/p&gt;
&lt;h3 id=&#34;評価規則&#34;&gt;評価規則&lt;/h3&gt;
&lt;p&gt;構文が定義できたので，次は評価規則を定義し実装する． 評価規則とは，プログラムコード(項)の実行の仕方そのもので，今回は次のように定義する:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode txt&#34;&gt;&lt;code class=&#34;sourceCode default&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34;&gt;&lt;/a&gt;// if-then-else の評価規則(3つ)&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34;&gt;&lt;/a&gt; if true then t2 else t3 =&amp;gt; t2&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34;&gt;&lt;/a&gt; if false then t2 else t3 =&amp;gt; t3&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34;&gt;&lt;/a&gt; t1 -&amp;gt; t1&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34;&gt;&lt;/a&gt;-------------------------------------------------&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34;&gt;&lt;/a&gt; if t1 then t2 else t3 =&amp;gt; if t1&amp;#39; then t2 else t3&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34;&gt;&lt;/a&gt;// 自然数の評価規則&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34;&gt;&lt;/a&gt; t1 -&amp;gt; t1&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34;&gt;&lt;/a&gt;---------------------&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34;&gt;&lt;/a&gt; succ t1 =&amp;gt; succ t1&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34;&gt;&lt;/a&gt; pred 0 =&amp;gt; 0&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34;&gt;&lt;/a&gt; pred (succ nv1) =&amp;gt; nv1&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34;&gt;&lt;/a&gt; t1 -&amp;gt; t1&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34;&gt;&lt;/a&gt;---------------------&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34;&gt;&lt;/a&gt; pred t1 =&amp;gt; pred t1&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34;&gt;&lt;/a&gt; iszero 0 =&amp;gt; true&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34;&gt;&lt;/a&gt; iszero (succ nv1) =&amp;gt; false&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34;&gt;&lt;/a&gt; t1 -&amp;gt; t1&amp;#39;&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34;&gt;&lt;/a&gt;-------------------------&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34;&gt;&lt;/a&gt; iszero t1 =&amp;gt; iszero t1&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;分数のような記述は上が成り立つならば下も成り立つと言うニュアンス(雑)． 次の &lt;code&gt;eval1&lt;/code&gt; というのが評価規則を実装したものだ:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 値になるまで評価する (これは TaPL にはない)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;isval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 評価規則を関数にする&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;t1_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1_&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;isnumericval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIsZero&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIsZero&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;isnumericval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmIsZero&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-45&#34;&gt;&lt;a href=&#34;#cb4-45&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-46&#34;&gt;&lt;a href=&#34;#cb4-46&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmIsZero&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-47&#34;&gt;&lt;a href=&#34;#cb4-47&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmIsZero&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-48&#34;&gt;&lt;a href=&#34;#cb4-48&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-49&#34;&gt;&lt;a href=&#34;#cb4-49&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-50&#34;&gt;&lt;a href=&#34;#cb4-50&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TaPL と違い，僕は返り値にいわゆる Optional 型を利用している(TaPL では例外を投げてる)． あと，TaPL で利用している ML やパターンマッチのある多くの言語ではパターンマッチの中に条件式を記述できるが Elm にはない:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- こういうのが書きたい&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;isnumericval&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nv1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これが出来ないため分岐が多くなって冗長になってしまう．辛い． そのうち実装されると良いなぁ．&lt;/p&gt;
&lt;h1 id=&#34;section-1&#34;&gt;&lt;/h1&gt;
&lt;p&gt;実はこれで完成． Elm には REPL があるので試しに動かしてみる:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;elm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;repl&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;---- Elm 0.19.1 ----------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Say&lt;/span&gt; :&lt;span class=&#34;fu&#34;&gt;help&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;help&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;and&lt;/span&gt; :&lt;span class=&#34;fu&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;More&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;at&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;https&lt;/span&gt;:&lt;span class=&#34;op&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;elm&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;repl&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;--------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmIsZero&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmPred&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;))) &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;良さそう．&lt;/p&gt;
&lt;h3 id=&#34;パーサーを実装する&#34;&gt;パーサーを実装する&lt;/h3&gt;
&lt;p&gt;ここからは TaPL にはない話． 毎回 &lt;code&gt;Term&lt;/code&gt; を手書きするのは大変なのでパーサーを実装しちゃおう．&lt;/p&gt;
&lt;p&gt;Elm には &lt;a href=&#34;https://package.elm-lang.org/packages/elm/parser&#34;&gt;elm/parser&lt;/a&gt; という(なぜか)公式が提供しているパーサーコンビネーターライブラリがある． もちろんこれを使う． パーサーコンビネーターの極意はトップダウンに考えること(ほんまか？)． まずは頭のインターフェースから:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; ((&lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; (&lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;exposing&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;..&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Parser Term&lt;/code&gt; という型は「パースした結果が &lt;code&gt;Term&lt;/code&gt; 型になる」と言う意味(型なんてこう言うふわっとした理解で十分)． &lt;code&gt;parser&lt;/code&gt; の &lt;code&gt;|. Parser.end&lt;/code&gt; というのは，パースしきった文字列が空文字に達したという関数(達してないとエラーになる)．&lt;/p&gt;
&lt;p&gt;で，&lt;code&gt;termParser&lt;/code&gt; が項自体のパーサー． elm/parser には &lt;code&gt;oneOf&lt;/code&gt; という便利パーサーコンビネーターがあるのでこれを使う:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 与えたパーサーのリストで最初に成功したものをパース結果にする&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;a&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここで重要なのは一つ一つ実装することができる点だ． まずは簡単な値から:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34;&gt;&lt;/a&gt;      [ &lt;span class=&#34;fu&#34;&gt;valParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34;&gt;&lt;/a&gt;      ]&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;valParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;valParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;false&amp;quot;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;fromInt&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;value&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;kw&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;always&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;) (&lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;keyword&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;kw&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-19&#34;&gt;&lt;a href=&#34;#cb9-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;fromInt&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-20&#34;&gt;&lt;a href=&#34;#cb9-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;fromInt&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-21&#34;&gt;&lt;a href=&#34;#cb9-21&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-22&#34;&gt;&lt;a href=&#34;#cb9-22&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;fromInt&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb9-23&#34;&gt;&lt;a href=&#34;#cb9-23&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-24&#34;&gt;&lt;a href=&#34;#cb9-24&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;REPL で確認:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TaPL&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;))))))))))&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;良さそう． 次は if-then-else を書いてみる:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34;&gt;&lt;/a&gt;      [ &lt;span class=&#34;fu&#34;&gt;valParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ifParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34;&gt;&lt;/a&gt;      ]&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;ifParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;ifParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;succeed&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;keyword&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;if&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lazy&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;keyword&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;then&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lazy&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;keyword&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;else&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|.&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;spaces&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;lazy&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Elm は普通に正格評価なので &lt;code&gt;Parser.lazy&lt;/code&gt; などで遅延させてあげないと先に &lt;code&gt;termParser&lt;/code&gt; を実行してしまう． REPL で確認:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;if true then 1 else 0&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- どう見ても評価できないけどパースはできる&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;if 1 then true else false&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- 入れ子もOK&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;if if true then 0 else 1 then true else if false then 2 else 3&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;)) &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;)) (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt;)))))&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34;&gt;&lt;/a&gt;    : &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;はい． あとは同じようーに書くだけなので割愛:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;termParser&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;oneOf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;valParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ifParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;succParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;predParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;isZeroParser&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;parParser&lt;/span&gt;    &lt;span class=&#34;co&#34;&gt;-- カッコ&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ついでに &lt;code&gt;Term&lt;/code&gt; から文字列に変換する関数も書いておこう:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;displayR&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;dropIfStartsWith&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class=&#34;co&#34;&gt;-- かっこ悪いので最後のカッコを消す&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;dropIfEndsWith&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;   &lt;span class=&#34;co&#34;&gt;-- カッコだけに&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;displayR&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;displayR&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;-- 分岐するのが面倒なので toInt も同時に&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; ( &lt;span class=&#34;fu&#34;&gt;toInt&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; ) &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34;&gt;&lt;/a&gt;        ( &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;fromInt&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-15&#34;&gt;&lt;a href=&#34;#cb14-15&#34;&gt;&lt;/a&gt;        ( &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmTrue&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-16&#34;&gt;&lt;a href=&#34;#cb14-16&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;st&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-17&#34;&gt;&lt;a href=&#34;#cb14-17&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-18&#34;&gt;&lt;a href=&#34;#cb14-18&#34;&gt;&lt;/a&gt;        ( &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmFalse&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-19&#34;&gt;&lt;a href=&#34;#cb14-19&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;st&#34;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-20&#34;&gt;&lt;a href=&#34;#cb14-20&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-21&#34;&gt;&lt;a href=&#34;#cb14-21&#34;&gt;&lt;/a&gt;        ( &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;TmIf&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt; ) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-22&#34;&gt;&lt;a href=&#34;#cb14-22&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;concat&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-23&#34;&gt;&lt;a href=&#34;#cb14-23&#34;&gt;&lt;/a&gt;                [ &lt;span class=&#34;st&#34;&gt;&amp;quot;(if &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-24&#34;&gt;&lt;a href=&#34;#cb14-24&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;displayR&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-25&#34;&gt;&lt;a href=&#34;#cb14-25&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot; then &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-26&#34;&gt;&lt;a href=&#34;#cb14-26&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;displayR&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-27&#34;&gt;&lt;a href=&#34;#cb14-27&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot; else &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-28&#34;&gt;&lt;a href=&#34;#cb14-28&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;displayR&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-29&#34;&gt;&lt;a href=&#34;#cb14-29&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-30&#34;&gt;&lt;a href=&#34;#cb14-30&#34;&gt;&lt;/a&gt;                ]&lt;/span&gt;
&lt;span id=&#34;cb14-31&#34;&gt;&lt;a href=&#34;#cb14-31&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-32&#34;&gt;&lt;a href=&#34;#cb14-32&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;-- あとは割愛&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-33&#34;&gt;&lt;a href=&#34;#cb14-33&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-34&#34;&gt;&lt;a href=&#34;#cb14-34&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-35&#34;&gt;&lt;a href=&#34;#cb14-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;toInt&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-36&#34;&gt;&lt;a href=&#34;#cb14-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;toInt&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-37&#34;&gt;&lt;a href=&#34;#cb14-37&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-38&#34;&gt;&lt;a href=&#34;#cb14-38&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmZero&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-39&#34;&gt;&lt;a href=&#34;#cb14-39&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-40&#34;&gt;&lt;a href=&#34;#cb14-40&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-41&#34;&gt;&lt;a href=&#34;#cb14-41&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;TmSucc&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-42&#34;&gt;&lt;a href=&#34;#cb14-42&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; (\&lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;n&lt;/span&gt;) (&lt;span class=&#34;fu&#34;&gt;toInt&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-43&#34;&gt;&lt;a href=&#34;#cb14-43&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-44&#34;&gt;&lt;a href=&#34;#cb14-44&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-45&#34;&gt;&lt;a href=&#34;#cb14-45&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;REPL で確認:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;if if true then false else true then 0 else if false then 2 else 3&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;toMaybe&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;andThen&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Chap4&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;op&#34;&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;完璧！&lt;/p&gt;
&lt;h2 id=&#34;おまけ-spa-にする&#34;&gt;おまけ: SPA にする&lt;/h2&gt;
&lt;p&gt;せっかく Elm 使ってるので:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文字列を入力してもらって&lt;/li&gt;
&lt;li&gt;「パースボタン」を押したらパースして&lt;/li&gt;
&lt;li&gt;さらに「評価ボタン」を押したら１ステップだけ評価する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という簡単なものを作る． まぁこれぐらいならググれば出てくるサンプルコードを組み合わせるだけでできますね:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode elm&#34;&gt;&lt;code class=&#34;sourceCode elm&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;main&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Program&lt;/span&gt; () &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;Browser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;element&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34;&gt;&lt;/a&gt;        { &lt;span class=&#34;fu&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; [] &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;update&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;subscriptions&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; \&lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Sub&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34;&gt;&lt;/a&gt;    { &lt;span class=&#34;fu&#34;&gt;input&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;           &lt;span class=&#34;co&#34;&gt;-- 入力文字列を保存&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;exps&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Lambda&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;  &lt;span class=&#34;co&#34;&gt;-- 1ステップごとの評価結果を全部&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-14&#34;&gt;&lt;a href=&#34;#cb16-14&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-15&#34;&gt;&lt;a href=&#34;#cb16-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-16&#34;&gt;&lt;a href=&#34;#cb16-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-17&#34;&gt;&lt;a href=&#34;#cb16-17&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;-- 文字列の入力&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-18&#34;&gt;&lt;a href=&#34;#cb16-18&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;InputText&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-19&#34;&gt;&lt;a href=&#34;#cb16-19&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;-- パースボタン&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-20&#34;&gt;&lt;a href=&#34;#cb16-20&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;ParseInput&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Result&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Parser&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;DeadEnd&lt;/span&gt;) &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-21&#34;&gt;&lt;a href=&#34;#cb16-21&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;-- 評価ボタン&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-22&#34;&gt;&lt;a href=&#34;#cb16-22&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;EvalTerm&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Maybe&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-23&#34;&gt;&lt;a href=&#34;#cb16-23&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-24&#34;&gt;&lt;a href=&#34;#cb16-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;update&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; ( &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb16-25&#34;&gt;&lt;a href=&#34;#cb16-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-26&#34;&gt;&lt;a href=&#34;#cb16-26&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-27&#34;&gt;&lt;a href=&#34;#cb16-27&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;InputText&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-28&#34;&gt;&lt;a href=&#34;#cb16-28&#34;&gt;&lt;/a&gt;            ( { &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;txt&lt;/span&gt; }&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb16-29&#34;&gt;&lt;a href=&#34;#cb16-29&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-30&#34;&gt;&lt;a href=&#34;#cb16-30&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;ParseInput&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Ok&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-31&#34;&gt;&lt;a href=&#34;#cb16-31&#34;&gt;&lt;/a&gt;            ( { &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;exps&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; [ &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; ]&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; }&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb16-32&#34;&gt;&lt;a href=&#34;#cb16-32&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-33&#34;&gt;&lt;a href=&#34;#cb16-33&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;ParseInput&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Err&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-34&#34;&gt;&lt;a href=&#34;#cb16-34&#34;&gt;&lt;/a&gt;            ( { &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;exps&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; []&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Can not parse&amp;quot;&lt;/span&gt; }&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb16-35&#34;&gt;&lt;a href=&#34;#cb16-35&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-36&#34;&gt;&lt;a href=&#34;#cb16-36&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;EvalTerm&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Just&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-37&#34;&gt;&lt;a href=&#34;#cb16-37&#34;&gt;&lt;/a&gt;            ( { &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;exps&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;::&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;exps&lt;/span&gt; }&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb16-38&#34;&gt;&lt;a href=&#34;#cb16-38&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-39&#34;&gt;&lt;a href=&#34;#cb16-39&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;EvalTerm&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-40&#34;&gt;&lt;a href=&#34;#cb16-40&#34;&gt;&lt;/a&gt;            ( { &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Can not eval&amp;quot;&lt;/span&gt; }&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Cmd&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;none&lt;/span&gt; )&lt;/span&gt;
&lt;span id=&#34;cb16-41&#34;&gt;&lt;a href=&#34;#cb16-41&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-42&#34;&gt;&lt;a href=&#34;#cb16-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;-- いくつかの見た目の実装は割愛してます(class とか)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-43&#34;&gt;&lt;a href=&#34;#cb16-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-44&#34;&gt;&lt;a href=&#34;#cb16-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-45&#34;&gt;&lt;a href=&#34;#cb16-45&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; []&lt;/span&gt;
&lt;span id=&#34;cb16-46&#34;&gt;&lt;a href=&#34;#cb16-46&#34;&gt;&lt;/a&gt;        [ &lt;span class=&#34;fu&#34;&gt;button&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-47&#34;&gt;&lt;a href=&#34;#cb16-47&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;-- ここでボタンの前にパースしてるのはナンセンスな気もするけど...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-48&#34;&gt;&lt;a href=&#34;#cb16-48&#34;&gt;&lt;/a&gt;            [ &lt;span class=&#34;fu&#34;&gt;onClick&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;ParseInput&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Lambda&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;input&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;type_&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;button&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb16-49&#34;&gt;&lt;a href=&#34;#cb16-49&#34;&gt;&lt;/a&gt;            [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Parse!&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb16-50&#34;&gt;&lt;a href=&#34;#cb16-50&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;input&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-51&#34;&gt;&lt;a href=&#34;#cb16-51&#34;&gt;&lt;/a&gt;            [ &lt;span class=&#34;fu&#34;&gt;onInput&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;InputText&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;type_&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb16-52&#34;&gt;&lt;a href=&#34;#cb16-52&#34;&gt;&lt;/a&gt;            []&lt;/span&gt;
&lt;span id=&#34;cb16-53&#34;&gt;&lt;a href=&#34;#cb16-53&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [] (&lt;span class=&#34;fu&#34;&gt;viewExps&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-54&#34;&gt;&lt;a href=&#34;#cb16-54&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;isEmpty&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-55&#34;&gt;&lt;a href=&#34;#cb16-55&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [] []&lt;/span&gt;
&lt;span id=&#34;cb16-56&#34;&gt;&lt;a href=&#34;#cb16-56&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-57&#34;&gt;&lt;a href=&#34;#cb16-57&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;flash flash-error&amp;quot;&lt;/span&gt; ] [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;error&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb16-58&#34;&gt;&lt;a href=&#34;#cb16-58&#34;&gt;&lt;/a&gt;        ]&lt;/span&gt;
&lt;span id=&#34;cb16-59&#34;&gt;&lt;a href=&#34;#cb16-59&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-60&#34;&gt;&lt;a href=&#34;#cb16-60&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewExps&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-61&#34;&gt;&lt;a href=&#34;#cb16-61&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewExps&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-62&#34;&gt;&lt;a href=&#34;#cb16-62&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;exps&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;of&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-63&#34;&gt;&lt;a href=&#34;#cb16-63&#34;&gt;&lt;/a&gt;        [] &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-64&#34;&gt;&lt;a href=&#34;#cb16-64&#34;&gt;&lt;/a&gt;            []&lt;/span&gt;
&lt;span id=&#34;cb16-65&#34;&gt;&lt;a href=&#34;#cb16-65&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-66&#34;&gt;&lt;a href=&#34;#cb16-66&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;::&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;xs&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-67&#34;&gt;&lt;a href=&#34;#cb16-67&#34;&gt;&lt;/a&gt;            [ &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;reverse&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;exps&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-68&#34;&gt;&lt;a href=&#34;#cb16-68&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;viewExp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-69&#34;&gt;&lt;a href=&#34;#cb16-69&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;intersperse&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;my-1&amp;quot;&lt;/span&gt; ] [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;↓&amp;quot;&lt;/span&gt; ])&lt;/span&gt;
&lt;span id=&#34;cb16-70&#34;&gt;&lt;a href=&#34;#cb16-70&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;op&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; []&lt;/span&gt;
&lt;span id=&#34;cb16-71&#34;&gt;&lt;a href=&#34;#cb16-71&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;button&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-72&#34;&gt;&lt;a href=&#34;#cb16-72&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;co&#34;&gt;-- ここもボタンの前に評価してるのは(ry&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-73&#34;&gt;&lt;a href=&#34;#cb16-73&#34;&gt;&lt;/a&gt;                [ &lt;span class=&#34;fu&#34;&gt;onClick&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;EvalTerm&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;&amp;lt;|&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Lambda&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;eval1&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;x&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;type_&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;button&amp;quot;&lt;/span&gt;　]&lt;/span&gt;
&lt;span id=&#34;cb16-74&#34;&gt;&lt;a href=&#34;#cb16-74&#34;&gt;&lt;/a&gt;                [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Eval!&amp;quot;&lt;/span&gt; ]&lt;/span&gt;
&lt;span id=&#34;cb16-75&#34;&gt;&lt;a href=&#34;#cb16-75&#34;&gt;&lt;/a&gt;            ]&lt;/span&gt;
&lt;span id=&#34;cb16-76&#34;&gt;&lt;a href=&#34;#cb16-76&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-77&#34;&gt;&lt;a href=&#34;#cb16-77&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewExp&lt;/span&gt; : &lt;span class=&#34;dt&#34;&gt;Lambda&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;Term&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Html&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;Msg&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-78&#34;&gt;&lt;a href=&#34;#cb16-78&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;viewExp&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-79&#34;&gt;&lt;a href=&#34;#cb16-79&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;div&lt;/span&gt; [ &lt;span class=&#34;fu&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;my-1&amp;quot;&lt;/span&gt; ] [ &lt;span class=&#34;fu&#34;&gt;text&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;Lambda&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;) ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;色々ととりあえずで作ったので雑だ（現在のは改良したあとなのでこのコードとは少し違う）．&lt;/p&gt;
&lt;h2 id=&#34;おしまい&#34;&gt;おしまい&lt;/h2&gt;
&lt;p&gt;ちなみに，会社で同期と TaPL (雑な)読書会をしており，このシリーズはその成果です． すでに半年ぐらいやってるが未だに10章です笑&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><id>http://kurokawh.blogspot.com/2018/02/windows-windows10.html</id><title type="text">[windows] Windows10セットアップ・設定項目のメモ</title><updated>2019-08-22T13:32:52.909+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2018/02/windows-windows10.html"/><summary type="text">Windows10セットアップ時の設定項目、インストールアプリの備忘録。


スタートメニュー・タスクバーの設定

タスクバーの設定 

小さいタスクバーボタンを使う：オン 
[スタート]ボタンを右クリックするかWindowsキー＋Xキーを押したときに表示されるメニューで、コマンドプロンプトをWindows PowerShellに置き換える：オフ
タスクバーボタンを結合する

「タスクバーに入りきらない場合」を選択

タスクバーをすべての ディスプレイに表示する：オフ



 Quick Launcherを表示する

クイック起動を復活する 
Windows 10 タスクバーにクイック起動を表示する

スタートメニューにコントロールパネルを表示する

「Windows 10」のコントロールパネルを表示する方法について

スタートメニューにピン止めするアプリ：

Windowsシステム</summary></entry><entry><id>http://kurokawh.blogspot.com/2019/07/mac-el-capitan.html</id><title type="text">[mac] El Capitanへのアップグレード関連作業まとめ</title><updated>2019-07-13T19:19:56.684+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2019/07/mac-el-capitan.html"/><summary type="text">YosemiteからEl Capitan（10.11.2）へアップグレードしました。旧環境で起動できていたアプリケーションが起動できなくなったり、コマンドが見つからなくなる、といった問題が発生しましたが一通り解決できたので、その内容をまとめておきます。

＃ポストし忘れてた･･･。今更な情報ですが自分の備忘録の意味もあるので公開。


El Capitanの新機能に伴う問題・設定の修正

OS X El Capitan：日本語入力のライブ変換モードをオフにする

[システム環境設定] - [キーボード]を開く
[入力ソース]タブを選択
「ライブ変換」のチェックを外す





MacPortsのアップデート

Yosemite環境でインストールしたMacPortsはそのままでは利用できない。以下のようなエラーメッセージが表示される。
% port qv installed
Error: </summary></entry><entry><id>http://kurokawh.blogspot.com/2018/06/linuxcygwin-unzip-error-invalid.html</id><title type="text">[linux][cygwin] unzipコマンドで &#34;error:  invalid compressed data to inflate&#34; というエラーメッセージがでたら？</title><updated>2018-06-06T01:11:48.468+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2018/06/linuxcygwin-unzip-error-invalid.html"/><summary type="text">zipアーカイブの中に長さが0のファイルが含まれていると、unzipコマンドでは以下のようなエラーメッセージが表示されて、解凍することができません。アーカイブが壊れていなくてもエラーになります。
% unzip hoge.zip
  error:  invalid compressed data to inflate

このような場合には、-tzipオプションを指定して7zコマンドを実行することで、エラーを回避して解凍できます。パスワード保護されているzipアーカイブも問題なく解凍できました。

% 7z x -tzip hoge.zip


manページによると、以下のフォーマットがサポートされていて、デフォルトは7zとのこと。

The program supports 7z (that implements  LZMA  compression  algorithm),  
ZIP</summary></entry><entry><id>http://kurokawh.blogspot.com/2018/03/haskell-http-clienthaskellhttp.html</id><title type="text">[haskell] http-clientライブラリを利用してHaskellでHTTPクライアント機能を実装する</title><updated>2018-03-05T09:34:57.715+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2018/03/haskell-http-clienthaskellhttp.html"/><summary type="text">Haskellでは、http-clientライブラリを用いることで、HTTPクライアント機能を簡単に実装できます。http-client以外にも何種類かライブラリがありますが、今回はhttp-client, http-client-tlsの機能と使い方をまとめておきます。

本エントリで紹介するhttp-client, http-client-tlsライブラリの機能：

単純なHTTP GETリクエスト

主要な型の説明 

Managerのカスタマイズ 

https
proxy設定 
タイムアウト値の設定

Requestのカスタマイズ

ベーシック認証 
リクエストヘッダ 

Responseの操作

ストリーミング受信 
レスポンスヘッダの参照 

エラーハンドリング 






単純なHTTP GETリクエスト
{-# LANGUAGE OverloadedStrings #</summary></entry><entry><id>https://github.com/matsubara0507/test-rss/releases/tag/v6</id><title type="text">test6</title><updated>2018-03-03T13:44:46Z</updated><author><name>matsubara0507</name></author><link href="https://github.com/matsubara0507/test-rss/releases/tag/v6"/></entry><entry><id>https://github.com/matsubara0507/test-rss/releases/tag/v5</id><title type="text">test5</title><updated>2018-03-03T12:20:13Z</updated><author><name>matsubara0507</name></author><link href="https://github.com/matsubara0507/test-rss/releases/tag/v5"/></entry><entry><id>https://github.com/matsubara0507/test-rss/releases/tag/v4</id><title type="text">test4</title><updated>2018-03-03T05:46:33Z</updated><author><name>matsubara0507</name></author><link href="https://github.com/matsubara0507/test-rss/releases/tag/v4"/></entry><entry><id>https://github.com/matsubara0507/test-rss/releases/tag/v3</id><title type="text">test3</title><updated>2018-03-03T05:05:52Z</updated><author><name>matsubara0507</name></author><link href="https://github.com/matsubara0507/test-rss/releases/tag/v3"/></entry><entry><id>https://github.com/matsubara0507/test-rss/releases/tag/v2</id><title type="text">test2</title><updated>2018-03-03T04:59:34Z</updated><author><name>matsubara0507</name></author><link href="https://github.com/matsubara0507/test-rss/releases/tag/v2"/></entry><entry><id>https://github.com/matsubara0507/test-rss/releases/tag/v1</id><title type="text">test1</title><updated>2018-03-03T04:55:52Z</updated><author><name>matsubara0507</name></author><link href="https://github.com/matsubara0507/test-rss/releases/tag/v1"/></entry><entry><id>http://kurokawh.blogspot.com/2018/02/haskell-stack-install-cryptoniteno-such.html</id><title type="text">[haskell] stack install cryptoniteがno such instruction: `rdrand %r8&#39;エラーで失敗する問題の対処方法</title><updated>2018-02-25T15:34:07.378+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2018/02/haskell-stack-install-cryptoniteno-such.html"/><summary type="text">手許の環境（mac）で、cryptoniteライブラリのビルドがエラーになる問題が発生したが、ネットの情報を元に解決できたので、その症状と手順をblogに残しておく。



エラーの症状：
stack install cryptoniteで以下のようなエラーが発生。
% stack install cryptonite
--  While building custom Setup.hs for package cryptonite-0.24 using:
      /Users/xxx/.stack/setup-exe-cache/x86_64-osx/Cabal-simple_mPHDZzAJ_2.0.1.0_ghc-8.2.2 --builddir=.stack-work/dist/x86_64-osx/Cabal-2.0.1.0 build --ghc-options &#34; </summary></entry><entry><id>http://kurokawh.blogspot.com/2016/12/haskellyesod-typedcontent.html</id><title type="text">[haskell][yesod] TypedContentを利用してクライアントが要求するフォーマットでレスポンスを返す</title><updated>2016-12-17T15:16:26.835+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2016/12/haskellyesod-typedcontent.html"/><summary type="text">Yesod Advent Calendar 2016の6日目の記事です。

RESTfulなAPIを提供する場合、クライアントの都合にあわせて、フォーマットを変えてレスポンスを返したいケースがあります。サーバー上で管理しているDBから、表現だけをHTML, JSON, XML, CSVなどに変更して返すイメージです。例えば、人物情報（名前、年齢、性別など）の一覧を返す際には以下のようなデータが返されることになります。

HTML
&lt;table border&gt;
  &lt;tr&gt;
    &lt;th&gt;name&lt;/th&gt;    &lt;th&gt;sex&lt;/th&gt;    &lt;th&gt;age&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Taro Yamada&lt;/td&gt;    &lt;td&gt;Male&lt;/td&gt;    &lt;td&gt;18&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Hanako Yamada&lt;/</summary></entry><entry><id>http://kurokawh.blogspot.com/2016/07/yesodhaskell-stack-new-xxx-project.html</id><title type="text">[haskell][yesod] stackのnewコマンドで指定できるyesod関連templateの説明</title><updated>2016-12-03T23:37:28.283+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2016/07/yesodhaskell-stack-new-xxx-project.html"/><summary type="text">現状、stackで指定できるyesod関連のtemplatesには以下のものがあります。どのtemplateに何が用意されているのか、知りたかったのですがどこにも説明されていないようなので、調べてまとめてみました。
% stack templates | grep yesod
yesod-hello-world （←現時点では削除されています）
yesod-minimal
yesod-mongo
yesod-mysql
yesod-postgres
yesod-postgres-fay
yesod-simple
yesod-sqlite


以下、各テンプレートの説明です。後に出てくるテンプレートほど内容が複雑になっています。テンプレートを指定して新しいプロジェクトを生成する場合は以下のコマンドを実行します。
% stack new プロジェクト名 yesod-???




</summary></entry><entry><id>http://kurokawh.blogspot.com/2016/11/emacs-emacsgrep.html</id><title type="text">[emacs] emacs上のgrep関連機能、複数ファイルの一括置換手順のまとめ</title><updated>2016-11-30T10:03:25.873+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2016/11/emacs-emacsgrep.html"/><summary type="text">emacs上でgrep関連の機能を利用する際のTIPSをまとめておきます（よく忘れて調べ直すので…）。


grepコマンドのオプション

指定ディレクトリ以下のファイルを再帰的に検索

-R DIR    シンボリックリンクを辿る
-r  DIR    シンボリックリンクは辿らない

検索対象をファイル名でフィルタする

--include=GLOB    GLOBにファイル名を指定する。&#34;*.cpp&#34;のようにワイルドカード（*,?,[...]）を指定可能

検索対象から指定ファイル・ディレクトリを除外する

--exclude=GLOB   GLOBに除外するファイルのファイル名を指定する（ワイルドカード指定可能）。
--exclude-dir=DIR DIRに指定されたディレクトリをスキップ


使用例：

docディレクトリ以下の.txtを拡張子に持つ全てのファイルを対象に&#34;</summary></entry><entry><id>http://kurokawh.blogspot.com/2016/09/cygwin-cygwin64.html</id><title type="text">[cygwin] cygwin64セットアップメモ</title><updated>2016-11-28T00:47:36.358+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2016/09/cygwin-cygwin64.html"/><summary type="text">自分向け備忘録。cygwin64環境をセットアップする際の手順をまとめておきます。


設定


ssh-agent関連

ssh-agentの重複起動を防ぐ
ssh-agentのために秘密鍵セットアップ

~/.ssh/

※group/otherのrw権限は削除


ssh-agentがパスワードを覚えてくれなくなった問題への対処

pingのエラー回避
ユーザーのアカウント名、ホームディレクトリの変更

/etc/passwdを編集する

GNU screen でlessやvimの終了後に画面クリアをしない方法
改行コードにCR+LFが用いられているbashスクリプトを実行するための設定
tcshのデフォルト補完設定のイマイチな部分を修正




環境変数

HOME

ホームディレクトリを設定



SHELL

&#34;/bin/tcsh&#34;とすることでデフォルトのシェルが切り替わる
</summary></entry><entry><id>http://kurokawh.blogspot.com/2016/08/haskellyesod-yesodrestfuljson-api.html</id><title type="text">[haskell][yesod] YesodにおけるRESTfulなJSON API実装チュートリアル</title><updated>2016-08-28T17:53:43.356+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2016/08/haskellyesod-yesodrestfuljson-api.html"/><summary type="text">HaskellのwebフレームワークであるYesodにおいて、RESTful APIを実装する手順を紹介します。Haskell上のデータ構造をJSONテキストに変換する、逆に、JSONテキストをパースしてHaskell上のデータ構造を生成する、といった処理が非常に簡単に実現できます。加えて、コードを書かなくてもバックエンドのDBとのORマッピングが可能になっており、効率的に開発することができます。
ここで紹介しているコードはgithubにコミットしています。


準備：

json-sampleというプロジェクト名でYesodのscaffolding siteをセットアップする

空のプロジェクト生成

% stack new json-sample yesod-sqlite --system-ghc

&#34;--system-ghc&#34;は省略可能。インストール済みのghcを使うことを指示し</summary></entry><entry><id>http://kurokawh.blogspot.com/2016/07/haskellyesod-stackyesod-tutorial.html</id><title type="text">[haskell][yesod] stack対応版Yesod tutorial</title><updated>2016-07-17T18:06:36.108+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2016/07/haskellyesod-stackyesod-tutorial.html"/><summary type="text">HaskellのwebサービスフレームワークにYesodというフレームワークがあります。Yesodに触れたことのない開発者向けに書かれたチュートリアルの一つにYesod tutorialがあり、手順に沿っていくだけで簡単なwebサービスを動作させることができ、Yesodで何ができるかを簡単に理解できるようになっています。
ただ残念なことに、このYesod tutorialの記載は内容が古く、stackを利用した現行の手順とマッチしなくなっています。stackに対応している最新環境（Yesod 1.4.x）における順があると役に立つと思い、書き起こしてみました。


Before the real start（はじめに）

Install（インストール手順）
stackをインストールする。以下のサイトが参考になります。

installation instructions for </summary></entry><entry><id>http://kurokawh.blogspot.com/2016/07/haskellyesod-stack-exec-yesod-devel.html</id><title type="text">[haskell][yesod] stack exec -- yesod devel で devel.hs: getAddrInfo: does not existというエラーになる問題の対処方法</title><updated>2016-07-17T17:39:43.279+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2016/07/haskellyesod-stack-exec-yesod-devel.html"/><summary type="text">
Widnwos環境での現象：
windows上でyesodのscafolding siteをセットアップし、さあ起動！ブラウザから接続確認してOKとなるはずが、なぜか「The application isn&#39;t built」という表示が出てしまいました。



このときターミナルには以下のようなログが出力されていました。
% stack exec -- yesod devel
Yesod devel server. Type &#39;quit&#39; to quit
Application can be accessed at:

http://localhost:3000
https://localhost:3443
If you wish to test https capabilities, you should set the following variable:
  export </summary></entry><entry><id>http://kurokawh.blogspot.com/2015/11/haskellyesodsqlite-persistent.html</id><title type="text">[haskell][persistent][sqlite] Persistentパッケージ利用時にテーブルにインデックスを生成する方法</title><updated>2016-01-30T17:12:12.076+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2015/11/haskellyesodsqlite-persistent.html"/><summary type="text">PersistentパッケージにはMigration機能が備わっており、自動的にテーブルを生成してくれます。スキーマ変更を行った際にも、変換が可能な限りテーブル内のレコードを保持したまま新しいスキーマに変換してくれます（Migration機能については過去のエントリでまとめています）。

自分が利用する上で、インデックスやトリガーを生成する手順が紹介されておらず困っていたのですが、rawExecuteという関数を用いることで自由にDDLを発行できることがわかりました。以下その手順とサンプルを紹介しておきます。


サンプルコード：
以下は、personテーブルのnameカラムにインデックスをs生成するサンプルです。runMigration実行直後に、runExecuteを実行することでインデックスを生成しています。このサンプルではインデックスを生成しているだけですが、同じ手順でトリガーの</summary></entry><entry><id>http://kurokawh.blogspot.com/2015/08/haskellyesodsqlite-persistentmigration.html</id><title type="text">[haskell][persistent][sqlite] Persistentパッケージのmigration機能のまとめ</title><updated>2016-01-30T17:11:40.032+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2015/08/haskellyesodsqlite-persistentmigration.html"/><summary type="text">HaskellでDB操作ができるPersistentパッケージの紹介をしましたが、このエントリではPersistentパッケージが提供しているmigration機能をまとめておきます。
DBを作って運用していると、機能追加や仕様変更に伴いスキーマ変更が必要になるケースが多々あります。このようなケースにおいてPersistentのmigration機能がどれくらい使えるのかを調べた結果です。


基本：
Persistetのmigration機構は（保守的なルールに沿って）スキーマ変更をある程度まで自動で処理してくれます。
ロードしたDB内のテーブル情報と、コードで定義されたEntity Definition（テーブル定義）を比較し、以下のケースにおいてスキーマの変更を行います。

カラムの型を変更した場合：

ただし、値の変換ができない場合には、DBによって拒否されることになります。

</summary></entry><entry><id>http://kurokawh.blogspot.com/2016/01/haskellgccwin-windowshaskell.html</id><title type="text">[haskell][gcc][win] Windows版Haskell Platform付属のgccでC++11のコードをコンパイルする方法</title><updated>2016-01-15T00:45:37.692+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2016/01/haskellgccwin-windowshaskell.html"/><summary type="text">Windows版のHaskell Platformにはmingwが同梱されておりgccが含まれています。現在自分のPCにはHaskell Platform 2014.2.0.0をインストールしているのですが、これに付属されているgccでC++11のコードをコンパイルしようとすると、以下のようなエラーになってしまいました。
% gcc -std=c++11 cpp11.cpp
cc1plus.exe: error: unrecognized command line option &#39;-std=c++11&#39;


-stdオプションで&#34;c++11&#34;を指定しても、認識してくれません。
本家のサイトによると、&#39;-std=c++11&#39;オプションはgcc 4.7でサポートされたようです。これに対し、Haskell Platform 2014.2.0.0に付属されているgccのバージョンを確認したところ</summary></entry><entry><id>http://kurokawh.blogspot.com/2013/11/sqlite-sqlite.html</id><title type="text">[sqlite] SQLiteのロック・トランザクション関連仕様の整理</title><updated>2016-01-06T12:11:40.986+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2013/11/sqlite-sqlite.html"/><summary type="text">SQLiteは共有ロック・排他ロックの仕組みを備えており、プロセス内の複数スレッド、だけでなく、プロセスをまたぐ状態でSQLが同時に発行されても適切に処理されます。
トランザクションに複数のモードが存在し、指定するモードに依って取得されるロックが変わります。さらにSQLの内容に依存してロック状態が遷移するため、複数プロセスがアクセスしたときの挙動を正確に把握できるよう、仕様を整理してみました。
（文中の「プロセス」は、正確には「プロセス、もしくはスレッド」を意味します。）


DBのロック状態の種類：

UNLOCKED

ロックされていない状態。誰も読み書きしていない。DBの初期状態。

SHARED

read可、write不可な状態。複数プロセスが同時にSHAREDロックを取得可能。複数プロセスが同時にreadできることを意味する。DBがこの状態にあるとき、他のプロセスからの</summary></entry><entry><id>http://kurokawh.blogspot.com/2015/07/cygwinhaskellemacs-mingwcygwincygdrivec.html</id><title type="text">[cygwin][haskell][emacs] MinGWでcygwinの&#34;/cygdrive&#34;パスにアクセスする裏技（cygwin環境のemacsでflycheckを動作させる方法）</title><updated>2015-12-27T23:55:24.842+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2015/07/cygwinhaskellemacs-mingwcygwincygdrivec.html"/><summary type="text">haskell関連のコマンドはMinGW上でビルドされているため、cygwin環境の&#34;/cygdrive&#34;から始まるパスには対応していません。haskell-hlintから呼び出されるhlintも当然この問題の影響を受けておりemacs関連の設定が適切にされていたとしても、以下のようなエラーが表示されてしまいます。



ミニバッファに表示されるエラー詳細：
Suspicious state from syntax checker haskell-hlint: Checker haskell-hlint returned non-zero exit code 1, but no errors from output: hlint.exe: Couldn&#39;t find file: /cygdrive/c/Users/Hiroyuki/tmp/flycheck_hello.hs



</summary></entry><entry><id>http://kurokawh.blogspot.com/2015/11/haskellstack-stack-exec-ghcicouldnt.html</id><title type="text">[haskell][stack] stack exec ghciで”Couldn&#39;t match expected type&#34;エラーが発生する問題の対処</title><updated>2015-11-08T15:09:21.187+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2015/11/haskellstack-stack-exec-ghcicouldnt.html"/><summary type="text">先日、haskellのパッケージ管理をcabalからstackに移行して「便利〜！」と感動していたところなのですが、stach exec ghciでソースをロードしようとすると&#34;Couldn&#39;t match expected type: xxxxx&#34;とエラーが発生する問題に遭遇しました。
ネットの情報を参考に解決することができたのでその手順をまとめておきます。


問題：
stack buildは成功するにもかかわらず、stack exec ghci xxx.hs（xxx.hsはbuild対象のファイル）がエラーになる。
stack exec ghci実行時のエラーログ：
% stack exec ghci FileToVec.hs
GHCi, version 7.10.2: http://www.haskell.org/ghc/  :? for help
[1 of 1] </summary></entry><entry><id>http://kurokawh.blogspot.com/2015/11/cygwin-cygwinpathusrbinusrlocalbin.html</id><title type="text">[cygwin] cygwinのシェル起動時にPATHの先頭に/usr/binと/usr/local/binが勝手に追加されないようにする</title><updated>2015-11-04T22:29:43.126+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2015/11/cygwin-cygwinpathusrbinusrlocalbin.html"/><summary type="text">cygwinのデフォルトの設定では、シェル起動時に以下の2つのディレクトリが自動的にPATHの先頭に追加されます。

/usr/local/bin
/usr/bin


cygwinでインストールされているコマンドと同名の別コマンドを優先して起動したい場合には、この設定が邪魔になります。
これを無効にするには以下の方法があります。お好みでどちらかを選択してください。

/etc/profileもしくは/etc/csh.loginの該当処理をコメントアウトする（bash / tcsh）

cygwinがPATHを上書きしているのは、/etc/profile（bashの場合）と/etc/csh.login（tcshの場合）です。これらのスクリプトを編集することで、/usr/binと/usr/local/binが勝手に追加されないようにできます。

ORIGINAL_PATHでPATHを上書き</summary></entry><entry><id>http://kurokawh.blogspot.com/2015/09/ssh-opensshssh-agent.html</id><title type="text">[ssh] OpenSSHのアップデートでssh-agentがパスワードを覚えてくれなくなった問題への対処</title><updated>2015-09-06T00:44:24.703+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2015/09/ssh-opensshssh-agent.html"/><summary type="text">ssh-agent/ssh-addを利用してsshを用いたサーバーへのログイン時のパスワード入力を省略している方、OpenSSHのアップデートにより、毎回パスワード入力を求められるようになった場合は以下の設定を疑ってみてください。


問題の症状：
OpenSSHパッケージを最新版にアップデートすると発生するようになった問題です。ssh-agentを起動してssh-addで鍵を正しく登録しているにも関わらず、sshコマンドを実行する度に&#34;password:&#34;というプロンプトが表示されてパスワードの入力を求められてしまいます。


環境：
問題に遭遇＆解決した私のcygwin環境では以下のバージョンで問題が発生することを確認しました。

OpenSSH_7.0p1, OpenSSL 1.0.2d 9 Jul 2015
OpenSSH_7.1p1, OpenSSL 1.0.2d 9 Jul </summary></entry><entry><id>http://kurokawh.blogspot.com/2015/09/cygwin-cygwinx-serverxwin.html</id><title type="text">[cygwin] cygwin版X server（XWin）にリモートクライアントから接続できない問題の対処方法</title><updated>2015-09-02T23:09:07.989+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2015/09/cygwin-cygwinx-serverxwin.html"/><summary type="text">cygwinを最新バージョンにアップデートしたところ、リモートのX clientからwindows上のcygwin版X serverに接続できなくなってしまいました。
対処方法は簡単でXWin起動時に&#34;-listen tcp&#34;オプションを付けてあげればよいだけです。cygwinバージョンアップ前にはオプション指定なしで接続できていたため、デフォルトの設定が変わったのだと思われます。


cygwin環境：
uname -aで表示されるcygwinバージョン情報です。

% uname -a
CYGWIN_NT-6.1 xxx 2.2.1(0.289/5/3) 2015-08-20 11:42 x86_64 Cygwin



問題発生時の症状：
クライアント側で起動したxtermをサーバー側で表示しようとすると、以下のようなエラーになっていました。
% xterm
xterm Xt </summary></entry><entry><id>http://kurokawh.blogspot.com/2015/08/cygwinemacs-cygwinemacsgtags.html</id><title type="text">[cygwin][emacs] cygwin版emacsでgtagsを使えるようにする方法</title><updated>2015-08-17T00:49:02.649+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2015/08/cygwinemacs-cygwinemacsgtags.html"/><summary type="text">これまでタグジャンプにはctagsを用いていたのですが、gtagsの「呼び出し元も一覧できる」という機能に惹かれてセットアップしてみました。いくつかはまりポイントがあったのでその対応方法も含め、手順を残しておきます。
cgwin提供のパッケージにはgtagsは含まれていなかったため、自前でビルドすることにしました。


目次：

gatgsの特徴
gtagsのインストール手順
emacsの設定
gtagsの使い方




gtagsの特徴：

良い点！

関数の呼び出し元を一覧表示しジャンプできる（gtags-find-rtag）
関数だけでなく、ローカル変数を含む任意のシンボルをタグジャンプできる（gtags-find-symbol）

正規表現で一覧絞り込み可能（gtags-find-pattern）
開いているファイルで絞り込み可能（gtags-parsefiile）

特定文字列</summary></entry><entry><id>http://kurokawh.blogspot.com/2015/06/subversion.html</id><title type="text">[subversion] 特定ディレクトリ以下をサーバーとの同期対象から除外する方法</title><updated>2015-06-26T13:55:24.651+09:00</updated><author><name>Hiroyuki Kurokawa</name></author><link href="http://kurokawh.blogspot.com/2015/06/subversion.html"/><summary type="text">subversionでチェックアウトした作業コピー内の特定ディレクトリ以下をサーバーとの同期対象から除外したい、ということを考えたことはないでしょうか。
例えば、リポジトリの特定ディレクトリ以下に自分にとって不要なファイルやアーカイブが多数コミットされていると、以下のような無駄が生じます。これらの無駄をなくしたい、というのが主なユースケースです。

不要なファイル・アーカイブによってディスクスペースが占有される
サーバー上に更新が発生した際にupdateに余計な時間がかかってしまう



単純に特定ディレクトリ以下の作業ファイルを削除してしまうと、コミット時に差分として検知されてしまう、また、次回以降のupdateコマンドで再ダウンロードされてしまう、という非常に残念な挙動になります。

このようなケースでは以下の方法を使えば、差分が検知されない状態で所定ディレクトリ以下のファイルを削除</summary></entry><entry><id>https://haskell.e-bigmoon.com/posts/2020/04-12-cabal-repl.html</id><title type="text">cabal repl コマンドについて</title><updated></updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2020/04-12-cabal-repl.html"/><summary type="html">&lt;p&gt;&lt;code&gt;cabal repl&lt;/code&gt; コマンドは&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ghci&lt;/code&gt;, &lt;code&gt;ghc --interactive&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stack repl&lt;/code&gt;, &lt;code&gt;stack ghci&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などと同じように &lt;strong&gt;cabal&lt;/strong&gt; で &lt;strong&gt;REPL&lt;/strong&gt; 環境を実行するためのコマンドです。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cabal&lt;/strong&gt; プロジェクト内で実行する場合と、&lt;strong&gt;cabal&lt;/strong&gt; プロジェクト外で実行する場合で挙動が少し異なります。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal -V
cabal-install version 3.2.0.0
compiled using version 3.2.0.0 of the Cabal library&lt;/code&gt;&lt;/pre&gt;
&lt;!--more--&gt;
&lt;h2 id=&#34;cabal-プロジェクト外で実行した場合&#34;&gt;&lt;strong&gt;cabal&lt;/strong&gt; プロジェクト外で実行した場合&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;cabal&lt;/strong&gt; は自動的に &lt;strong&gt;fake-package&lt;/strong&gt; という環境を用意します。これは使い捨てのダミー &lt;strong&gt;cabal&lt;/strong&gt; プロジェクトです。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl
Resolving dependencies...
Build profile: -w ghc-8.10.1 -O1
In order, the following will be built (use -v for more details):
 - fake-package-0 (lib) (first run)
Configuring library for fake-package-0..
Preprocessing library for fake-package-0..
Warning: No exposed modules
GHCi, version 8.10.1: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /tmp/cabal-repl.-3302/setcwd.ghci
Prelude&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生成される内容は &lt;a href=&#34;https://github.com/haskell/cabal/blob/cabal-install-v3.2.0.0/cabal-install/Distribution/Client/CmdRepl.hs#L392&#34;&gt;withoutProject&lt;/a&gt; の中で定義されています。また、ログメッセージの最後に表示されている &lt;code&gt;/tmp/cabal-repl.-3302/&lt;/code&gt; ディレクトリに、実際に生成された &lt;strong&gt;cabal&lt;/strong&gt; ファイルなどが保存されます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ ls /tmp/cabal-repl.-3302/
dist-newstyle  fake-package.cabal  setcwd.ghci&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;cabal-install-3.2&lt;/code&gt; で生成される &lt;code&gt;fake-package.cabal&lt;/code&gt; の内容は以下のようになっています。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cabal-version: 2.2
name:          fake-package
version:       0

library
    default-language: Haskell2010
    build-depends:    base -any&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;build-depends&lt;/strong&gt; に &lt;code&gt;base -any&lt;/code&gt; が指定されているため、&lt;strong&gt;GHC&lt;/strong&gt; のバージョンに対応した &lt;strong&gt;base&lt;/strong&gt; パッケージがデフォルトで利用可能です。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REPL&lt;/strong&gt; の使い方は &lt;strong&gt;ghci&lt;/strong&gt; などと同じなので大丈夫でしょう。&lt;/p&gt;
&lt;h3 id=&#34;repl-起動時のメッセージを省略する&#34;&gt;&lt;strong&gt;REPL&lt;/strong&gt; 起動時のメッセージを省略する&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;REPL&lt;/strong&gt; 起動時のメッセージを省略するためには &lt;code&gt;-v0&lt;/code&gt; オプションを指定します。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0
Prelude&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;repl-で利用する-ghc-を切り替える&#34;&gt;&lt;strong&gt;REPL&lt;/strong&gt; で利用する GHC を切り替える&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cabal build&lt;/code&gt; などでもおなじみの &lt;code&gt;-w&lt;/code&gt; (&lt;code&gt;--with-compiler&lt;/code&gt;) オプションを指定するだけです。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -w ghc-8.8.3
...
GHCi, version 8.8.3: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /tmp/cabal-repl.-20727/setcwd.ghci
Prelude&amp;gt;

$ cabal repl -w ghc-8.10.1
...
GHCi, version 8.10.1: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /tmp/cabal-repl.-20914/setcwd.ghci&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;ファイルを指定して-repl-を起動&#34;&gt;ファイルを指定して &lt;strong&gt;REPL&lt;/strong&gt; を起動&lt;/h3&gt;
&lt;p&gt;例えば &lt;code&gt;ghci A.hs&lt;/code&gt; のように &lt;strong&gt;REPL&lt;/strong&gt; 起動時にファイル (モジュール) を読み込みたい時があります。&lt;/p&gt;
&lt;p&gt;しかし、これを &lt;strong&gt;cabal&lt;/strong&gt; で同じように実行するとエラーになります。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0 A.hs
cabal: &amp;#39;repl&amp;#39; doesn&amp;#39;t take any extra arguments when outside a project: A.hs&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;そのため、一度 &lt;code&gt;cabal repl&lt;/code&gt; を実行してから &lt;code&gt;:l&lt;/code&gt; コマンドでファイルを読み込む必要があります。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0
Prelude&amp;gt; :l A.hs
*A&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;repl-にオプションを渡す&#34;&gt;&lt;strong&gt;REPL&lt;/strong&gt; にオプションを渡す&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;stack repl&lt;/code&gt; の &lt;code&gt;--ghci-options&lt;/code&gt; に相当するオプションは &lt;code&gt;--repl-options&lt;/code&gt; です。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0 --repl-options=&amp;quot;-XNoImplicitPrelude&amp;quot;
&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;複数指定する場合は &lt;code&gt;--repl-options&lt;/code&gt; を何度も指定する必要があります。たぶんこれは&lt;a href=&#34;https://github.com/haskell/cabal/pull/6190&#34;&gt;仕様&lt;/a&gt;っぽいです&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0 --repl-options=&amp;quot;-XNoImplicitPrelude&amp;quot; --repl-options=&amp;quot;-XNoStarIsType&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;repl-に依存関係を追加&#34;&gt;&lt;strong&gt;REPL&lt;/strong&gt; に依存関係を追加&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;REPL&lt;/strong&gt; を動かす際、少し複雑なファイルの場合は &lt;strong&gt;base&lt;/strong&gt; 以外のパッケージを利用していることがほとんどです。&lt;/p&gt;
&lt;p&gt;そういう時には &lt;code&gt;-b&lt;/code&gt; (&lt;code&gt;--build-depends&lt;/code&gt;) オプションを利用します。このオプションは &lt;code&gt;stack repl --package&lt;/code&gt; と同じような感じでパッケージを追加できます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;vector&lt;/strong&gt; パッケージを追加で読み込む例です。(パッケージのビルドが走る場合があります。)&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -b vector
...
Prelude&amp;gt; import Data.Vector
Prelude Data.Vector&amp;gt; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;複数のパッケージ &lt;strong&gt;vector&lt;/strong&gt;, &lt;strong&gt;aeson&lt;/strong&gt; を読み込む例は以下のようになります。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -b vector -b aeson
...
Prelude&amp;gt; import Data.Vector
Prelude Data.Vector&amp;gt; import Data.Aeson
Prelude Data.Vector Data.Aeson&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;このように、カンマ区切りで続けてパッケージを指定することも可能です。(&lt;code&gt;-b&lt;/code&gt; ではエラーになります)&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0 --build-depends=&amp;quot;vector, aeson&amp;quot;
Prelude&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;パッケージのバージョンを指定することも可能です。バージョンの指定には &lt;strong&gt;build-depends&lt;/strong&gt; と同じ記法が使えます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -b aeson==1.4.7.1
...
Prelude&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;ここで、パッケージを追加した際は追加したパッケージが依存しているパッケージも含めて読み込まれる点に注意してください。(つまり、推移的に依存関係が追加されます)&lt;/p&gt;
&lt;p&gt;例えば &lt;a href=&#34;https://hackage.haskell.org/package/deepseq&#34;&gt;deepseq&lt;/a&gt; パッケージで定義されている &lt;code&gt;Control.DeepSeq&lt;/code&gt; は本当なら &lt;strong&gt;import&lt;/strong&gt; できないはずです。しかし、&lt;a href=&#34;https://hackage.haskell.org/package/vector&#34;&gt;vector&lt;/a&gt; パッケージは &lt;strong&gt;deepseq&lt;/strong&gt; パッケージに依存しているため &lt;strong&gt;import&lt;/strong&gt; できてしまいます。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0 -b vector
Prelude&amp;gt; import Control.DeepSeq 
Prelude Control.DeepSeq&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;この挙動を変更したい場合は &lt;code&gt;--no-transitive-deps&lt;/code&gt; オプションを指定します。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0 -b vector --no-transitive-deps
Prelude&amp;gt; import Control.DeepSeq 

&amp;lt;no location info&amp;gt;: error:
    Could not load module ‘Control.DeepSeq’
    It is a member of the hidden package ‘deepseq-1.4.4.0’.
    Perhaps you need to add ‘deepseq’ to the build-depends in your .cabal file.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;読み込まれるパッケージがどのように変化しているか確認しておきましょう。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0
Prelude&amp;gt; :show packages 
active package flags:
  -package-id base-4.14.0.0

$ cabal repl -v0 -b vector
Prelude&amp;gt; :show packages 
active package flags:
  -package-id transformers-0.5.6.2
  -package-id primitive-0.7.0.1-26f169240ac34903846f3a33e2517e97382af71bd7fe7cb7262fd6ca4381f53e
  -package-id array-0.5.4.0
  -package-id deepseq-1.4.4.0
  -package-id integer-gmp-1.0.3.0
  -package-id rts
  -package-id ghc-prim-0.6.1
  -package-id vector-0.12.1.2-8dc77cdd80241a59f0811ecc4c067ae98900f833977f73cce9795875f4909da9
  -package-id base-4.14.0.0

$ cabal repl -v0 -b vector --no-transitive-deps
Prelude&amp;gt; :show packages 
active package flags:
  -package-id vector-0.12.1.2-8dc77cdd80241a59f0811ecc4c067ae98900f833977f73cce9795875f4909da9
  -package-id base-4.14.0.0&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;cabal-プロジェクト内で実行した場合&#34;&gt;&lt;strong&gt;cabal&lt;/strong&gt; プロジェクト内で実行した場合&lt;/h2&gt;
&lt;p&gt;基本的にはプロジェクト内で &lt;code&gt;cabal repl&lt;/code&gt; と実行するとプロジェクトの &lt;strong&gt;cabal&lt;/strong&gt; ファイルに従い&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依存関係の追加&lt;/li&gt;
&lt;li&gt;モジュールの追加&lt;/li&gt;
&lt;li&gt;オプションの追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などを自動的に行い、&lt;strong&gt;REPL&lt;/strong&gt; を起動します。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0
*MyLib&amp;gt; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;この時、&lt;strong&gt;import&lt;/strong&gt; されるモジュールは1つのみです。(これは仕様みたいです)&lt;/p&gt;
&lt;p&gt;そのため、必要なモジュールは自分で &lt;strong&gt;import&lt;/strong&gt; する必要があります。&lt;/p&gt;
&lt;h3 id=&#34;プロジェクトを無視して-repl-を起動&#34;&gt;プロジェクトを無視して &lt;strong&gt;REPL&lt;/strong&gt; を起動&lt;/h3&gt;
&lt;p&gt;プロジェクトを無視して &lt;strong&gt;REPL&lt;/strong&gt; を起動するためには &lt;code&gt;-z&lt;/code&gt; (&lt;code&gt;--ignore-project&lt;/code&gt;) オプションを指定します。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal repl -v0 -z
Prelude&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;今回紹介したオプション一覧&#34;&gt;今回紹介したオプション一覧&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;short&lt;/th&gt;
&lt;th&gt;long&lt;/th&gt;
&lt;th&gt;オプションの意味&lt;/th&gt;
&lt;th&gt;stack&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;無し&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--repl-options&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;ghci&lt;/strong&gt; に渡すオプション指定&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--ghci-options&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--build-depends&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;依存関係の追加&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--package&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;-z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--ignore-project&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プロジェクトの &lt;strong&gt;cabal&lt;/strong&gt; を無視する&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--no-load&lt;/code&gt; が近いけど&lt;br&gt;プロジェクトの依存関係は読み込む&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;無し&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--no-transitive-deps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;推移的な依存関係を追加しない&lt;/td&gt;
&lt;td&gt;デフォルトの動作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;-w&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--with-compiler&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;利用するコンパイラの指定&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-with-ghc&lt;/code&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;-v0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--verbose=0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;起動時のメッセージを省略&lt;/td&gt;
&lt;td&gt;無し&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;参考リソース&#34;&gt;参考リソース&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.haskell.org/cabal/users-guide/nix-local-build.html#cabal-v2-repl&#34;&gt;5.4.4. cabal v2-repl - Cabal User Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/pull/5454&#34;&gt;Add –build-depends flag, associated support to new-repl #5454&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/pull/3565&#34;&gt;Cabal repl and cabal build/run conflict over .o object files if ghci has -fobject-code set #3565&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/pull/2592&#34;&gt;cabal repl load single module #2592&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/pull/6190&#34;&gt;–repl-options doesn’t split on whitespace #6190&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/pull/5845&#34;&gt;Allow list for &lt;code&gt;repl --build-depends&lt;/code&gt; #5845&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haskell/cabal/issues/5374&#34;&gt;&lt;code&gt;cabal new-repl&lt;/code&gt; only brings one module into scope #5374&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><id>https://haskell.e-bigmoon.com/posts/2020/03-30-cabal-plan-license-report.html</id><title type="text">cabal-plan license-report 機能の紹介</title><updated></updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2020/03-30-cabal-plan-license-report.html"/><summary type="html">&lt;p&gt;&lt;a href=&#34;https://hackage.haskell.org/package/cabal-plan&#34;&gt;cabal-plan&lt;/a&gt; を使って、プロジェクトが依存するパッケージのライセンスを列挙する方法について紹介します。&lt;/p&gt;
&lt;p&gt;本記事は &lt;a href=&#34;https://www.reddit.com/r/haskell/comments/8vhkwv/is_there_a_tool_to_collect_all_license_files_of/&#34;&gt;Is there a tool to collect all LICENSE files of used dependencies?&lt;/a&gt; を参考にしています。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal -V
cabal-install version 3.0.0.0
compiled using version 3.0.0.0 of the Cabal library&lt;/code&gt;&lt;/pre&gt;
&lt;!--more--&gt;
&lt;h2 id=&#34;インストール方法&#34;&gt;インストール方法&lt;/h2&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal update
$ cabal install cabal-plan -f license-report
$ cabal-plan --version
cabal-plan 0.6.2.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;今回の機能を使うためには &lt;strong&gt;license-report&lt;/strong&gt; フラグを有効にする必要があります。デフォルトでは無効になっています。&lt;/p&gt;
&lt;h2 id=&#34;ライセンスの列挙&#34;&gt;ライセンスの列挙&lt;/h2&gt;
&lt;p&gt;具体例として、このブログで試してみましょう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/e-bigmoon/haskell-blog&#34;&gt;e-bigmoon/haskell-blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ライセンスファイルを抽出する場合は &lt;code&gt;--licensedir&lt;/code&gt; オプションで出力先ディレクトリを指定します。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ cabal-plan license-report --licensedir=licenses exe:site &amp;gt; blog.md
WARNING: couldn&amp;#39;t find metadata for base-4.13.0.0
WARNING: couldn&amp;#39;t find metadata for hakyll-sass-0.3
WARNING: license files for array-0.5.4.0 (global/GHC bundled) not copied
WARNING: license files for binary-0.8.7.0 (global/GHC bundled) not copied
WARNING: license files for bytestring-0.10.10.0 (global/GHC bundled) not copied
WARNING: license files for containers-0.6.2.1 (global/GHC bundled) not copied
WARNING: license files for deepseq-1.4.4.0 (global/GHC bundled) not copied
WARNING: license files for directory-1.3.6.0 (global/GHC bundled) not copied
WARNING: license files for filepath-1.4.2.1 (global/GHC bundled) not copied
WARNING: couldn&amp;#39;t find metadata for ghc-boot-th-8.8.3
WARNING: license files for ghc-prim-0.5.3 (global/GHC bundled) not copied
WARNING: license files for integer-gmp-1.0.2.0 (global/GHC bundled) not copied
WARNING: license files for mtl-2.2.2 (global/GHC bundled) not copied
WARNING: license files for parsec-3.1.14.0 (global/GHC bundled) not copied
WARNING: license files for pretty-1.1.3.6 (global/GHC bundled) not copied
WARNING: license files for process-1.6.8.0 (global/GHC bundled) not copied
WARNING: license files for stm-2.5.0.0 (global/GHC bundled) not copied
WARNING: license files for template-haskell-2.15.0.0 (global/GHC bundled) not copied
WARNING: license files for text-1.2.4.0 (global/GHC bundled) not copied
WARNING: license files for time-1.9.3 (global/GHC bundled) not copied
WARNING: license files for transformers-0.5.6.2 (global/GHC bundled) not copied
WARNING: license files for unix-2.7.2.2 (global/GHC bundled) not copied&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;出力結果&#34;&gt;出力結果&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;licenses&lt;/code&gt; ディレクトリはだいたいこんな感じでライセンスファイルが格納されています。&lt;/p&gt;
&lt;pre class=&#34;shell&#34;&gt;&lt;code&gt;$ tree licenses | head -n 20
licenses
├── Glob-0.10.0
│   └── LICENSE.txt
├── HTTP-4000.3.14
│   └── LICENSE
├── HsYAML-0.2.1.0
│   ├── LICENSE.GPLv2
│   └── LICENSE.GPLv3
├── HsYAML-aeson-0.2.0.0
│   └── LICENSE.GPLv2
├── JuicyPixels-3.3.5
│   └── LICENSE
├── Only-0.1
│   └── LICENSE
├── QuickCheck-2.13.2
│   └── LICENSE
├── SHA-1.6.4.4
│   └── LICENSE
├── StateVar-1.2
│   └── LICENSE&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;blog.md&lt;/code&gt; の内容を一部を以下に貼り付けます。完全なコードは&lt;a href=&#34;https://github.com/e-bigmoon/haskell-blog/sample-code/2020/03-30/blog.md&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&#34;dependency-license-report&#34;&gt;Dependency License Report&lt;/h1&gt;
&lt;p&gt;Bold-faced &lt;strong&gt;&lt;code&gt;package-name&lt;/code&gt;&lt;/strong&gt;s denote standard libraries bundled with &lt;code&gt;ghc-8.8.3&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;direct-dependencies-of-bigmoon-haskellers-blogexesite&#34;&gt;Direct dependencies of &lt;code&gt;bigmoon-haskellers-blog:exe:site&lt;/code&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 20%&#34; /&gt;
&lt;col style=&#34;width: 20%&#34; /&gt;
&lt;col style=&#34;width: 20%&#34; /&gt;
&lt;col style=&#34;width: 20%&#34; /&gt;
&lt;col style=&#34;width: 20%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://spdx.org/licenses/&#34;&gt;SPDX&lt;/a&gt; License Id&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Also depended upon by&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;&lt;code&gt;base&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hackage.haskell.org/package/base-4.13.0.0&#34;&gt;&lt;code&gt;4.13.0.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;MISSING&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;MISSING&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;(core library)&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;extensible&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hackage.haskell.org/package/extensible-0.8&#34;&gt;&lt;code&gt;0.8&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;licenses/extensible-0.8/LICENSE&#34;&gt;&lt;code&gt;BSD-3-Clause&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extensible, efficient, optics-friendly data types and effects&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;hakyll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hackage.haskell.org/package/hakyll-4.13.2.0&#34;&gt;&lt;code&gt;4.13.2.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;licenses/hakyll-4.13.2.0/LICENSE&#34;&gt;&lt;code&gt;BSD-3-Clause&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A static website compiler library&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hakyll-sass&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;hakyll-sass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hackage.haskell.org/package/hakyll-sass-0.3&#34;&gt;&lt;code&gt;0.3&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;MISSING&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;MISSING&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;html-entities&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hackage.haskell.org/package/html-entities-1.1.4.3&#34;&gt;&lt;code&gt;1.1.4.3&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;licenses/html-entities-1.1.4.3/LICENSE&#34;&gt;&lt;code&gt;MIT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A codec library for HTML-escaped text and HTML-entities&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;rio&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hackage.haskell.org/package/rio-0.1.14.1&#34;&gt;&lt;code&gt;0.1.14.1&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;licenses/rio-0.1.14.1/LICENSE&#34;&gt;&lt;code&gt;MIT&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A standard library for Haskell&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hackage.haskell.org/package/yaml-0.11.3.0&#34;&gt;&lt;code&gt;0.11.3.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;licenses/yaml-0.11.3.0/LICENSE&#34;&gt;&lt;code&gt;BSD-3-Clause&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Support for parsing and rendering YAML documents.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hakyll&lt;/code&gt;, &lt;code&gt;pandoc-citeproc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;indirect-transitive-dependencies&#34;&gt;Indirect transitive dependencies&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;https://spdx.org/licenses/&#34;&gt;SPDX&lt;/a&gt; License Id&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Depended upon by&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Glob&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hackage.haskell.org/package/Glob-0.10.0&#34;&gt;&lt;code&gt;0.10.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;licenses/Glob-0.10.0/LICENSE.txt&#34;&gt;&lt;code&gt;BSD-3-Clause&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Globbing library&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pandoc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hackage.haskell.org/package/HTTP-4000.3.14&#34;&gt;&lt;code&gt;4000.3.14&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;licenses/HTTP-4000.3.14/LICENSE&#34;&gt;&lt;code&gt;BSD-3-Clause&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A library for client-side HTTP&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pandoc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;p&gt;今回は &lt;strong&gt;cabal-plan&lt;/strong&gt; を使ってみましたが、同様のツールとして &lt;a href=&#34;https://github.com/fossas/fossa-cli/blob/master/docs/integrations/haskell.md#haskell&#34;&gt;fossas/fossa-cli&lt;/a&gt; や &lt;a href=&#34;https://github.com/github/licensed/blob/master/docs/sources/cabal.md&#34;&gt;github/licensed&lt;/a&gt; なども利用できるようです。&lt;/p&gt;</summary></entry><entry><id>https://haskell.e-bigmoon.com/posts/2020/03-28-haskell-books.html</id><title type="text">Haskell 関連書籍の紹介ページを作りました</title><updated></updated><author><name>e-bigmoon</name></author><link href="https://haskell.e-bigmoon.com/posts/2020/03-28-haskell-books.html"/><summary type="html">&lt;p&gt;&lt;strong&gt;Qiita&lt;/strong&gt; で管理していた記事を移動しました。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&#34;haskell-関連の書籍紹介ページ&#34;&gt;Haskell 関連の書籍紹介ページ&lt;/h2&gt;
&lt;p&gt;「&lt;a href=&#34;/books/&#34;&gt;これから Haskell を学ぶ人のための書籍・論文紹介&lt;/a&gt;」というページを作りました。&lt;/p&gt;
&lt;p&gt;基本的には Qiita で管理していた内容ですが、いくつか書籍を追加し、「サポートページ」「正誤表」「レビュー」へのリンク等を追加しました。内容に不備がある場合は &lt;a href=&#34;https://github.com/e-bigmoon/haskell-blog/issues&#34;&gt;issue&lt;/a&gt; などで教えていただけると助かります。&lt;/p&gt;
&lt;p&gt;現在は主に自分が持っている物理書籍メインに紹介していますが、今後は電子書籍なども含めて充実させていけたらと思います。&lt;/p&gt;
&lt;p&gt;ちなみに、今から入門するなら「&lt;a href=&#34;https://www.lambdanote.com/collections/frontpage/products/haskell&#34;&gt;プログラミング Haskell 第2版&lt;/a&gt;」をオススメします。&lt;/p&gt;</summary></entry></feed>